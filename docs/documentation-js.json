[
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "html",
          "value": "<img src=\"./logo-full.png\" style=\"max-width: 255px; margin: 10px 0;\" />",
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 72,
              "offset": 71
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Write more robust and understandable programs.",
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 73
                },
                "end": {
                  "line": 3,
                  "column": 47,
                  "offset": 119
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 73
            },
            "end": {
              "line": 3,
              "column": 47,
              "offset": 119
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Statebot hopes to make ",
              "position": {
                "start": {
                  "line": 5,
                  "column": 1,
                  "offset": 121
                },
                "end": {
                  "line": 5,
                  "column": 24,
                  "offset": 144
                },
                "indent": []
              }
            },
            {
              "type": "link",
              "title": null,
              "url": "https://en.wikipedia.org/wiki/Finite-state_machine",
              "children": [
                {
                  "type": "text",
                  "value": "Finite State Machines",
                  "position": {
                    "start": {
                      "line": 5,
                      "column": 25,
                      "offset": 145
                    },
                    "end": {
                      "line": 5,
                      "column": 46,
                      "offset": 166
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 5,
                  "column": 24,
                  "offset": 144
                },
                "end": {
                  "line": 5,
                  "column": 99,
                  "offset": 219
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " (FSMs) a little more accessible.",
              "position": {
                "start": {
                  "line": 5,
                  "column": 99,
                  "offset": 219
                },
                "end": {
                  "line": 5,
                  "column": 132,
                  "offset": 252
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 5,
              "column": 1,
              "offset": 121
            },
            "end": {
              "line": 5,
              "column": 132,
              "offset": 252
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "You're reading the documentation. Other exits are:",
              "position": {
                "start": {
                  "line": 7,
                  "column": 1,
                  "offset": 254
                },
                "end": {
                  "line": 7,
                  "column": 51,
                  "offset": 304
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 7,
              "column": 1,
              "offset": 254
            },
            "end": {
              "line": 7,
              "column": 51,
              "offset": 304
            },
            "indent": []
          }
        },
        {
          "type": "list",
          "ordered": false,
          "start": null,
          "loose": false,
          "children": [
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The ",
                      "position": {
                        "start": {
                          "line": 9,
                          "column": 3,
                          "offset": 308
                        },
                        "end": {
                          "line": 9,
                          "column": 7,
                          "offset": 312
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "link",
                      "title": null,
                      "url": "https://github.com/shuckster/statebot/blob/master/README.md",
                      "children": [
                        {
                          "type": "text",
                          "value": "README file",
                          "position": {
                            "start": {
                              "line": 9,
                              "column": 8,
                              "offset": 313
                            },
                            "end": {
                              "line": 9,
                              "column": 19,
                              "offset": 324
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 9,
                          "column": 7,
                          "offset": 312
                        },
                        "end": {
                          "line": 9,
                          "column": 81,
                          "offset": 386
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 9,
                      "column": 3,
                      "offset": 308
                    },
                    "end": {
                      "line": 9,
                      "column": 81,
                      "offset": 386
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 9,
                  "column": 1,
                  "offset": 306
                },
                "end": {
                  "line": 9,
                  "column": 81,
                  "offset": 386
                },
                "indent": []
              }
            },
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The ",
                      "position": {
                        "start": {
                          "line": 10,
                          "column": 3,
                          "offset": 389
                        },
                        "end": {
                          "line": 10,
                          "column": 7,
                          "offset": 393
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "link",
                      "title": null,
                      "url": "https://github.com/shuckster/statebot",
                      "children": [
                        {
                          "type": "text",
                          "value": "Github Repo",
                          "position": {
                            "start": {
                              "line": 10,
                              "column": 8,
                              "offset": 394
                            },
                            "end": {
                              "line": 10,
                              "column": 19,
                              "offset": 405
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 10,
                          "column": 7,
                          "offset": 393
                        },
                        "end": {
                          "line": 10,
                          "column": 59,
                          "offset": 445
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 10,
                      "column": 3,
                      "offset": 389
                    },
                    "end": {
                      "line": 10,
                      "column": 59,
                      "offset": 445
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 10,
                  "column": 1,
                  "offset": 387
                },
                "end": {
                  "line": 10,
                  "column": 59,
                  "offset": 445
                },
                "indent": []
              }
            },
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "inlineCode",
                      "value": "useStatebot",
                      "position": {
                        "start": {
                          "line": 11,
                          "column": 3,
                          "offset": 448
                        },
                        "end": {
                          "line": 11,
                          "column": 16,
                          "offset": 461
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " with ",
                      "position": {
                        "start": {
                          "line": 11,
                          "column": 16,
                          "offset": 461
                        },
                        "end": {
                          "line": 11,
                          "column": 22,
                          "offset": 467
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "link",
                      "title": null,
                      "url": "https://github.com/shuckster/statebot-react-hooks",
                      "children": [
                        {
                          "type": "text",
                          "value": "React",
                          "position": {
                            "start": {
                              "line": 11,
                              "column": 23,
                              "offset": 468
                            },
                            "end": {
                              "line": 11,
                              "column": 28,
                              "offset": 473
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 11,
                          "column": 22,
                          "offset": 467
                        },
                        "end": {
                          "line": 11,
                          "column": 80,
                          "offset": 525
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " and ",
                      "position": {
                        "start": {
                          "line": 11,
                          "column": 80,
                          "offset": 525
                        },
                        "end": {
                          "line": 11,
                          "column": 85,
                          "offset": 530
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "link",
                      "title": null,
                      "url": "https://github.com/shuckster/statebot-mithril-hooks",
                      "children": [
                        {
                          "type": "text",
                          "value": "Mithril",
                          "position": {
                            "start": {
                              "line": 11,
                              "column": 86,
                              "offset": 531
                            },
                            "end": {
                              "line": 11,
                              "column": 93,
                              "offset": 538
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 11,
                          "column": 85,
                          "offset": 530
                        },
                        "end": {
                          "line": 11,
                          "column": 147,
                          "offset": 592
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " Hooks",
                      "position": {
                        "start": {
                          "line": 11,
                          "column": 147,
                          "offset": 592
                        },
                        "end": {
                          "line": 11,
                          "column": 153,
                          "offset": 598
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 11,
                      "column": 3,
                      "offset": 448
                    },
                    "end": {
                      "line": 11,
                      "column": 153,
                      "offset": 598
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 11,
                  "column": 1,
                  "offset": 446
                },
                "end": {
                  "line": 11,
                  "column": 153,
                  "offset": 598
                },
                "indent": []
              }
            },
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The shell-script version, ",
                      "position": {
                        "start": {
                          "line": 12,
                          "column": 3,
                          "offset": 601
                        },
                        "end": {
                          "line": 12,
                          "column": 29,
                          "offset": 627
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "link",
                      "title": null,
                      "url": "https://github.com/shuckster/statebot-sh",
                      "children": [
                        {
                          "type": "text",
                          "value": "Statebot-sh",
                          "position": {
                            "start": {
                              "line": 12,
                              "column": 30,
                              "offset": 628
                            },
                            "end": {
                              "line": 12,
                              "column": 41,
                              "offset": 639
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 12,
                          "column": 29,
                          "offset": 627
                        },
                        "end": {
                          "line": 12,
                          "column": 84,
                          "offset": 682
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 12,
                      "column": 3,
                      "offset": 601
                    },
                    "end": {
                      "line": 12,
                      "column": 84,
                      "offset": 682
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 12,
                  "column": 1,
                  "offset": 599
                },
                "end": {
                  "line": 12,
                  "column": 84,
                  "offset": 682
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 9,
              "column": 1,
              "offset": 306
            },
            "end": {
              "line": 12,
              "column": 84,
              "offset": 682
            },
            "indent": [
              1,
              1,
              1
            ]
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Statebot was written by ",
              "position": {
                "start": {
                  "line": 14,
                  "column": 1,
                  "offset": 684
                },
                "end": {
                  "line": 14,
                  "column": 25,
                  "offset": 708
                },
                "indent": []
              }
            },
            {
              "type": "link",
              "title": null,
              "url": "https://github.com/shuckster/",
              "children": [
                {
                  "type": "text",
                  "value": "Conan Theobald",
                  "position": {
                    "start": {
                      "line": 14,
                      "column": 26,
                      "offset": 709
                    },
                    "end": {
                      "line": 14,
                      "column": 40,
                      "offset": 723
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 14,
                  "column": 25,
                  "offset": 708
                },
                "end": {
                  "line": 14,
                  "column": 72,
                  "offset": 755
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " and\nis ",
              "position": {
                "start": {
                  "line": 14,
                  "column": 72,
                  "offset": 755
                },
                "end": {
                  "line": 15,
                  "column": 4,
                  "offset": 763
                },
                "indent": [
                  1
                ]
              }
            },
            {
              "type": "link",
              "title": null,
              "url": "../LICENSE",
              "children": [
                {
                  "type": "text",
                  "value": "ISC licensed",
                  "position": {
                    "start": {
                      "line": 15,
                      "column": 5,
                      "offset": 764
                    },
                    "end": {
                      "line": 15,
                      "column": 17,
                      "offset": 776
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 15,
                  "column": 4,
                  "offset": 763
                },
                "end": {
                  "line": 15,
                  "column": 30,
                  "offset": 789
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ".",
              "position": {
                "start": {
                  "line": 15,
                  "column": 30,
                  "offset": 789
                },
                "end": {
                  "line": 15,
                  "column": 31,
                  "offset": 790
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 14,
              "column": 1,
              "offset": 684
            },
            "end": {
              "line": 15,
              "column": 31,
              "offset": 790
            },
            "indent": [
              1
            ]
          }
        },
        {
          "type": "heading",
          "depth": 3,
          "children": [
            {
              "type": "text",
              "value": "Jump right in",
              "position": {
                "start": {
                  "line": 17,
                  "column": 5,
                  "offset": 796
                },
                "end": {
                  "line": 17,
                  "column": 18,
                  "offset": 809
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 17,
              "column": 1,
              "offset": 792
            },
            "end": {
              "line": 17,
              "column": 18,
              "offset": 809
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Play around with an example that uses React in ",
              "position": {
                "start": {
                  "line": 19,
                  "column": 1,
                  "offset": 811
                },
                "end": {
                  "line": 19,
                  "column": 48,
                  "offset": 858
                },
                "indent": []
              }
            },
            {
              "type": "link",
              "title": null,
              "url": "https://codesandbox.io/s/statebot-react-ot3xe?file=/src/Loader.js",
              "children": [
                {
                  "type": "text",
                  "value": "this CodeSandbox",
                  "position": {
                    "start": {
                      "line": 19,
                      "column": 49,
                      "offset": 859
                    },
                    "end": {
                      "line": 19,
                      "column": 65,
                      "offset": 875
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 19,
                  "column": 48,
                  "offset": 858
                },
                "end": {
                  "line": 19,
                  "column": 133,
                  "offset": 943
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ".",
              "position": {
                "start": {
                  "line": 19,
                  "column": 133,
                  "offset": 943
                },
                "end": {
                  "line": 19,
                  "column": 134,
                  "offset": 944
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 19,
              "column": 1,
              "offset": 811
            },
            "end": {
              "line": 19,
              "column": 134,
              "offset": 944
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "You can install Statebot into your ",
              "position": {
                "start": {
                  "line": 21,
                  "column": 1,
                  "offset": 946
                },
                "end": {
                  "line": 21,
                  "column": 36,
                  "offset": 981
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "npm",
              "position": {
                "start": {
                  "line": 21,
                  "column": 36,
                  "offset": 981
                },
                "end": {
                  "line": 21,
                  "column": 41,
                  "offset": 986
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " project:",
              "position": {
                "start": {
                  "line": 21,
                  "column": 41,
                  "offset": 986
                },
                "end": {
                  "line": 21,
                  "column": 50,
                  "offset": 995
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 21,
              "column": 1,
              "offset": 946
            },
            "end": {
              "line": 21,
              "column": 50,
              "offset": 995
            },
            "indent": []
          }
        },
        {
          "type": "code",
          "lang": "sh",
          "value": "npm i statebot",
          "position": {
            "start": {
              "line": 23,
              "column": 1,
              "offset": 997
            },
            "end": {
              "line": 25,
              "column": 4,
              "offset": 1021
            },
            "indent": [
              1,
              1
            ]
          }
        },
        {
          "type": "code",
          "lang": "js",
          "value": "import statebot from 'statebot'",
          "position": {
            "start": {
              "line": 27,
              "column": 1,
              "offset": 1023
            },
            "end": {
              "line": 29,
              "column": 4,
              "offset": 1064
            },
            "indent": [
              1,
              1
            ]
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Or non-",
              "position": {
                "start": {
                  "line": 31,
                  "column": 1,
                  "offset": 1066
                },
                "end": {
                  "line": 31,
                  "column": 8,
                  "offset": 1073
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "npm",
              "position": {
                "start": {
                  "line": 31,
                  "column": 8,
                  "offset": 1073
                },
                "end": {
                  "line": 31,
                  "column": 13,
                  "offset": 1078
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " project:",
              "position": {
                "start": {
                  "line": 31,
                  "column": 13,
                  "offset": 1078
                },
                "end": {
                  "line": 31,
                  "column": 22,
                  "offset": 1087
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 31,
              "column": 1,
              "offset": 1066
            },
            "end": {
              "line": 31,
              "column": 22,
              "offset": 1087
            },
            "indent": []
          }
        },
        {
          "type": "code",
          "lang": "js",
          "value": "<script src=\"https://unpkg.com/statebot@2.3.10/dist/browser/statebot.min.js\"></script>",
          "position": {
            "start": {
              "line": 33,
              "column": 1,
              "offset": 1089
            },
            "end": {
              "line": 35,
              "column": 4,
              "offset": 1185
            },
            "indent": [
              1,
              1
            ]
          }
        },
        {
          "type": "code",
          "lang": "js",
          "value": "const { Statebot } = statebot\n// Make machines with Statebot()\n\nconst { isStatebot, routeIsPossible, assertRoute } = statebot\n// These are assertion helpers you can use for testing",
          "position": {
            "start": {
              "line": 37,
              "column": 1,
              "offset": 1187
            },
            "end": {
              "line": 43,
              "column": 4,
              "offset": 1377
            },
            "indent": [
              1,
              1,
              1,
              1,
              1,
              1
            ]
          }
        },
        {
          "type": "heading",
          "depth": 3,
          "children": [
            {
              "type": "text",
              "value": "Open the developer-console :)",
              "position": {
                "start": {
                  "line": 45,
                  "column": 5,
                  "offset": 1383
                },
                "end": {
                  "line": 45,
                  "column": 34,
                  "offset": 1412
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 45,
              "column": 1,
              "offset": 1379
            },
            "end": {
              "line": 45,
              "column": 34,
              "offset": 1412
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "I've included Statebot in this page. Open the developer-console to\nfollow along with the examples below:",
              "position": {
                "start": {
                  "line": 47,
                  "column": 1,
                  "offset": 1414
                },
                "end": {
                  "line": 48,
                  "column": 38,
                  "offset": 1518
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 47,
              "column": 1,
              "offset": 1414
            },
            "end": {
              "line": 48,
              "column": 38,
              "offset": 1518
            },
            "indent": [
              1
            ]
          }
        },
        {
          "type": "code",
          "lang": "js",
          "value": "var machine = Statebot('promise-like', {\n  chart: `\n    // This one will behave a bit like a Promise\n    idle -> pending ->\n      resolved | rejected\n\n    // ...and we're done\n    resolved -> done\n    rejected -> done\n  `,\n  startIn: 'idle'\n})\n\nmachine.canTransitionTo('pending')\n// true\n\nmachine.enter('pending')\nmachine.statesAvailableFromHere()\n// [\"resolved\", \"rejected\"]",
          "position": {
            "start": {
              "line": 50,
              "column": 1,
              "offset": 1520
            },
            "end": {
              "line": 70,
              "column": 4,
              "offset": 1905
            },
            "indent": [
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1
            ]
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "We can hook-up events with ",
              "position": {
                "start": {
                  "line": 72,
                  "column": 1,
                  "offset": 1907
                },
                "end": {
                  "line": 72,
                  "column": 28,
                  "offset": 1934
                },
                "indent": []
              }
            },
            {
              "type": "link",
              "url": "#statebotfsmperformtransitions",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": ".performTransitions()"
                }
              ],
              "position": {
                "start": {
                  "line": 72,
                  "column": 28,
                  "offset": 1934
                },
                "end": {
                  "line": 72,
                  "column": 88,
                  "offset": 1994
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ":",
              "position": {
                "start": {
                  "line": 72,
                  "column": 88,
                  "offset": 1994
                },
                "end": {
                  "line": 72,
                  "column": 89,
                  "offset": 1995
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 72,
              "column": 1,
              "offset": 1907
            },
            "end": {
              "line": 72,
              "column": 89,
              "offset": 1995
            },
            "indent": []
          }
        },
        {
          "type": "code",
          "lang": "js",
          "value": "machine.performTransitions({\n 'pending -> resolved': {\n   on: 'data-loaded'\n },\n 'pending -> rejected': {\n   on: ['timeout', 'data-error'],\n   then: (msg) => {\n     console.warn('Uh oh...', msg)\n   }\n },\n 'resolved | rejected -> done': {\n   on: 'thats-all-folks'\n }\n})\n\nmachine.emit('data-error', 'Did you hear that?')",
          "position": {
            "start": {
              "line": 74,
              "column": 1,
              "offset": 1997
            },
            "end": {
              "line": 91,
              "column": 4,
              "offset": 2325
            },
            "indent": [
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1
            ]
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Here's the API:",
              "position": {
                "start": {
                  "line": 93,
                  "column": 1,
                  "offset": 2327
                },
                "end": {
                  "line": 93,
                  "column": 16,
                  "offset": 2342
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 93,
              "column": 1,
              "offset": 2327
            },
            "end": {
              "line": 93,
              "column": 16,
              "offset": 2342
            },
            "indent": []
          }
        },
        {
          "type": "table",
          "align": [
            null,
            null,
            null
          ],
          "children": [
            {
              "type": "tableRow",
              "children": [
                {
                  "type": "tableCell",
                  "children": [
                    {
                      "type": "text",
                      "value": "Hitchers",
                      "position": {
                        "start": {
                          "line": 95,
                          "column": 3,
                          "offset": 2346
                        },
                        "end": {
                          "line": 95,
                          "column": 11,
                          "offset": 2354
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 95,
                      "column": 3,
                      "offset": 2346
                    },
                    "end": {
                      "line": 95,
                      "column": 11,
                      "offset": 2354
                    },
                    "indent": []
                  }
                },
                {
                  "type": "tableCell",
                  "children": [
                    {
                      "type": "text",
                      "value": "Status",
                      "position": {
                        "start": {
                          "line": 95,
                          "column": 14,
                          "offset": 2357
                        },
                        "end": {
                          "line": 95,
                          "column": 20,
                          "offset": 2363
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 95,
                      "column": 14,
                      "offset": 2357
                    },
                    "end": {
                      "line": 95,
                      "column": 20,
                      "offset": 2363
                    },
                    "indent": []
                  }
                },
                {
                  "type": "tableCell",
                  "children": [
                    {
                      "type": "text",
                      "value": "Actions",
                      "position": {
                        "start": {
                          "line": 95,
                          "column": 23,
                          "offset": 2366
                        },
                        "end": {
                          "line": 95,
                          "column": 30,
                          "offset": 2373
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 95,
                      "column": 23,
                      "offset": 2366
                    },
                    "end": {
                      "line": 95,
                      "column": 30,
                      "offset": 2373
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 95,
                  "column": 1,
                  "offset": 2344
                },
                "end": {
                  "line": 95,
                  "column": 32,
                  "offset": 2375
                },
                "indent": []
              }
            },
            {
              "type": "tableRow",
              "children": [
                {
                  "type": "tableCell",
                  "children": [
                    {
                      "type": "link",
                      "url": "#statebotfsmperformtransitions",
                      "title": null,
                      "jsdoc": true,
                      "children": [
                        {
                          "type": "text",
                          "value": ".performTransitions()"
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 97,
                          "column": 3,
                          "offset": 2386
                        },
                        "end": {
                          "line": 97,
                          "column": 63,
                          "offset": 2446
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " / ",
                      "position": {
                        "start": {
                          "line": 97,
                          "column": 63,
                          "offset": 2446
                        },
                        "end": {
                          "line": 97,
                          "column": 66,
                          "offset": 2449
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "link",
                      "url": "#statebotfsmonevent",
                      "title": null,
                      "jsdoc": true,
                      "children": [
                        {
                          "type": "text",
                          "value": ".onEvent()"
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 97,
                          "column": 66,
                          "offset": 2449
                        },
                        "end": {
                          "line": 97,
                          "column": 104,
                          "offset": 2487
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 97,
                      "column": 3,
                      "offset": 2386
                    },
                    "end": {
                      "line": 97,
                      "column": 104,
                      "offset": 2487
                    },
                    "indent": []
                  }
                },
                {
                  "type": "tableCell",
                  "children": [
                    {
                      "type": "link",
                      "url": "#statebotfsmcantransitionto",
                      "title": null,
                      "jsdoc": true,
                      "children": [
                        {
                          "type": "text",
                          "value": ".canTransitionTo()"
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 97,
                          "column": 107,
                          "offset": 2490
                        },
                        "end": {
                          "line": 97,
                          "column": 161,
                          "offset": 2544
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " / ",
                      "position": {
                        "start": {
                          "line": 97,
                          "column": 161,
                          "offset": 2544
                        },
                        "end": {
                          "line": 97,
                          "column": 164,
                          "offset": 2547
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "link",
                      "url": "#statebotfsmstatesavailablefromhere",
                      "title": null,
                      "jsdoc": true,
                      "children": [
                        {
                          "type": "text",
                          "value": ".statesAvailableFromHere()"
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 97,
                          "column": 164,
                          "offset": 2547
                        },
                        "end": {
                          "line": 97,
                          "column": 234,
                          "offset": 2617
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 97,
                      "column": 107,
                      "offset": 2490
                    },
                    "end": {
                      "line": 97,
                      "column": 234,
                      "offset": 2617
                    },
                    "indent": []
                  }
                },
                {
                  "type": "tableCell",
                  "children": [
                    {
                      "type": "link",
                      "url": "#statebotfsmemit",
                      "title": null,
                      "jsdoc": true,
                      "children": [
                        {
                          "type": "text",
                          "value": ".emit()"
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 97,
                          "column": 237,
                          "offset": 2620
                        },
                        "end": {
                          "line": 97,
                          "column": 269,
                          "offset": 2652
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " / ",
                      "position": {
                        "start": {
                          "line": 97,
                          "column": 269,
                          "offset": 2652
                        },
                        "end": {
                          "line": 97,
                          "column": 272,
                          "offset": 2655
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "link",
                      "url": "#emit-eventname-curriedargs",
                      "title": null,
                      "jsdoc": true,
                      "children": [
                        {
                          "type": "text",
                          "value": ".Emit()"
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 97,
                          "column": 272,
                          "offset": 2655
                        },
                        "end": {
                          "line": 97,
                          "column": 315,
                          "offset": 2698
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 97,
                      "column": 237,
                      "offset": 2620
                    },
                    "end": {
                      "line": 97,
                      "column": 315,
                      "offset": 2698
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 97,
                  "column": 1,
                  "offset": 2384
                },
                "end": {
                  "line": 97,
                  "column": 317,
                  "offset": 2700
                },
                "indent": []
              }
            },
            {
              "type": "tableRow",
              "children": [
                {
                  "type": "tableCell",
                  "children": [
                    {
                      "type": "link",
                      "url": "#statebotfsmontransitions",
                      "title": null,
                      "jsdoc": true,
                      "children": [
                        {
                          "type": "text",
                          "value": ".onTransitions()"
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 98,
                          "column": 3,
                          "offset": 2703
                        },
                        "end": {
                          "line": 98,
                          "column": 53,
                          "offset": 2753
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 98,
                      "column": 3,
                      "offset": 2703
                    },
                    "end": {
                      "line": 98,
                      "column": 53,
                      "offset": 2753
                    },
                    "indent": []
                  }
                },
                {
                  "type": "tableCell",
                  "children": [
                    {
                      "type": "link",
                      "url": "#statebotfsmcurrentstate",
                      "title": null,
                      "jsdoc": true,
                      "children": [
                        {
                          "type": "text",
                          "value": ".currentState()"
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 98,
                          "column": 56,
                          "offset": 2756
                        },
                        "end": {
                          "line": 98,
                          "column": 104,
                          "offset": 2804
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " / ",
                      "position": {
                        "start": {
                          "line": 98,
                          "column": 104,
                          "offset": 2804
                        },
                        "end": {
                          "line": 98,
                          "column": 107,
                          "offset": 2807
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "link",
                      "url": "#statebotfsmpreviousstate",
                      "title": null,
                      "jsdoc": true,
                      "children": [
                        {
                          "type": "text",
                          "value": ".previousState()"
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 98,
                          "column": 107,
                          "offset": 2807
                        },
                        "end": {
                          "line": 98,
                          "column": 157,
                          "offset": 2857
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " / ",
                      "position": {
                        "start": {
                          "line": 98,
                          "column": 157,
                          "offset": 2857
                        },
                        "end": {
                          "line": 98,
                          "column": 160,
                          "offset": 2860
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "link",
                      "url": "#statebotfsmhistory",
                      "title": null,
                      "jsdoc": true,
                      "children": [
                        {
                          "type": "text",
                          "value": ".history()"
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 98,
                          "column": 160,
                          "offset": 2860
                        },
                        "end": {
                          "line": 98,
                          "column": 198,
                          "offset": 2898
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 98,
                      "column": 56,
                      "offset": 2756
                    },
                    "end": {
                      "line": 98,
                      "column": 198,
                      "offset": 2898
                    },
                    "indent": []
                  }
                },
                {
                  "type": "tableCell",
                  "children": [
                    {
                      "type": "link",
                      "url": "#statebotfsmenter",
                      "title": null,
                      "jsdoc": true,
                      "children": [
                        {
                          "type": "text",
                          "value": ".enter()"
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 98,
                          "column": 201,
                          "offset": 2901
                        },
                        "end": {
                          "line": 98,
                          "column": 235,
                          "offset": 2935
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " / ",
                      "position": {
                        "start": {
                          "line": 98,
                          "column": 235,
                          "offset": 2935
                        },
                        "end": {
                          "line": 98,
                          "column": 238,
                          "offset": 2938
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "link",
                      "url": "#enter-state-curriedargs",
                      "title": null,
                      "jsdoc": true,
                      "children": [
                        {
                          "type": "text",
                          "value": ".Enter()"
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 98,
                          "column": 238,
                          "offset": 2938
                        },
                        "end": {
                          "line": 98,
                          "column": 279,
                          "offset": 2979
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 98,
                      "column": 201,
                      "offset": 2901
                    },
                    "end": {
                      "line": 98,
                      "column": 279,
                      "offset": 2979
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 98,
                  "column": 1,
                  "offset": 2701
                },
                "end": {
                  "line": 98,
                  "column": 281,
                  "offset": 2981
                },
                "indent": []
              }
            },
            {
              "type": "tableRow",
              "children": [
                {
                  "type": "tableCell",
                  "children": [
                    {
                      "type": "link",
                      "url": "#statebotfsmonentering",
                      "title": null,
                      "jsdoc": true,
                      "children": [
                        {
                          "type": "text",
                          "value": ".onEntering()"
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 99,
                          "column": 3,
                          "offset": 2984
                        },
                        "end": {
                          "line": 99,
                          "column": 47,
                          "offset": 3028
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " / ",
                      "position": {
                        "start": {
                          "line": 99,
                          "column": 47,
                          "offset": 3028
                        },
                        "end": {
                          "line": 99,
                          "column": 50,
                          "offset": 3031
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "link",
                      "url": "#statebotfsmonentered",
                      "title": null,
                      "jsdoc": true,
                      "children": [
                        {
                          "type": "text",
                          "value": ".onEntered()"
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 99,
                          "column": 50,
                          "offset": 3031
                        },
                        "end": {
                          "line": 99,
                          "column": 92,
                          "offset": 3073
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 99,
                      "column": 3,
                      "offset": 2984
                    },
                    "end": {
                      "line": 99,
                      "column": 92,
                      "offset": 3073
                    },
                    "indent": []
                  }
                },
                {
                  "type": "tableCell",
                  "children": [
                    {
                      "type": "link",
                      "url": "#statebotfsminstate",
                      "title": null,
                      "jsdoc": true,
                      "children": [
                        {
                          "type": "text",
                          "value": ".inState()"
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 99,
                          "column": 95,
                          "offset": 3076
                        },
                        "end": {
                          "line": 99,
                          "column": 133,
                          "offset": 3114
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " / ",
                      "position": {
                        "start": {
                          "line": 99,
                          "column": 133,
                          "offset": 3114
                        },
                        "end": {
                          "line": 99,
                          "column": 136,
                          "offset": 3117
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "link",
                      "url": "#instate-state-outputwhentrue-curriedfnargs",
                      "title": null,
                      "jsdoc": true,
                      "children": [
                        {
                          "type": "text",
                          "value": ".InState()"
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 99,
                          "column": 136,
                          "offset": 3117
                        },
                        "end": {
                          "line": 99,
                          "column": 198,
                          "offset": 3179
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 99,
                      "column": 95,
                      "offset": 3076
                    },
                    "end": {
                      "line": 99,
                      "column": 198,
                      "offset": 3179
                    },
                    "indent": []
                  }
                },
                {
                  "type": "tableCell",
                  "children": [
                    {
                      "type": "link",
                      "url": "#statebotfsmreset",
                      "title": null,
                      "jsdoc": true,
                      "children": [
                        {
                          "type": "text",
                          "value": ".reset()"
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 99,
                          "column": 201,
                          "offset": 3182
                        },
                        "end": {
                          "line": 99,
                          "column": 235,
                          "offset": 3216
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 99,
                      "column": 201,
                      "offset": 3182
                    },
                    "end": {
                      "line": 99,
                      "column": 235,
                      "offset": 3216
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 99,
                  "column": 1,
                  "offset": 2982
                },
                "end": {
                  "line": 99,
                  "column": 237,
                  "offset": 3218
                },
                "indent": []
              }
            },
            {
              "type": "tableRow",
              "children": [
                {
                  "type": "tableCell",
                  "children": [
                    {
                      "type": "link",
                      "url": "#statebotfsmonexiting",
                      "title": null,
                      "jsdoc": true,
                      "children": [
                        {
                          "type": "text",
                          "value": ".onExiting()"
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 100,
                          "column": 3,
                          "offset": 3221
                        },
                        "end": {
                          "line": 100,
                          "column": 45,
                          "offset": 3263
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " / ",
                      "position": {
                        "start": {
                          "line": 100,
                          "column": 45,
                          "offset": 3263
                        },
                        "end": {
                          "line": 100,
                          "column": 48,
                          "offset": 3266
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "link",
                      "url": "#statebotfsmonexited",
                      "title": null,
                      "jsdoc": true,
                      "children": [
                        {
                          "type": "text",
                          "value": ".onExited()"
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 100,
                          "column": 48,
                          "offset": 3266
                        },
                        "end": {
                          "line": 100,
                          "column": 88,
                          "offset": 3306
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 100,
                      "column": 3,
                      "offset": 3221
                    },
                    "end": {
                      "line": 100,
                      "column": 88,
                      "offset": 3306
                    },
                    "indent": []
                  }
                },
                {
                  "type": "tableCell",
                  "children": [
                    {
                      "type": "link",
                      "url": "#statebotfsminfo",
                      "title": null,
                      "jsdoc": true,
                      "children": [
                        {
                          "type": "text",
                          "value": ".info()"
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 100,
                          "column": 91,
                          "offset": 3309
                        },
                        "end": {
                          "line": 100,
                          "column": 123,
                          "offset": 3341
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " / ",
                      "position": {
                        "start": {
                          "line": 100,
                          "column": 123,
                          "offset": 3341
                        },
                        "end": {
                          "line": 100,
                          "column": 126,
                          "offset": 3344
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "link",
                      "url": "#statebotfsminspect",
                      "title": null,
                      "jsdoc": true,
                      "children": [
                        {
                          "type": "text",
                          "value": ".inspect()"
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 100,
                          "column": 126,
                          "offset": 3344
                        },
                        "end": {
                          "line": 100,
                          "column": 164,
                          "offset": 3382
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " / ",
                      "position": {
                        "start": {
                          "line": 100,
                          "column": 164,
                          "offset": 3382
                        },
                        "end": {
                          "line": 100,
                          "column": 167,
                          "offset": 3385
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "link",
                      "url": "#statebotfsmname",
                      "title": null,
                      "jsdoc": true,
                      "children": [
                        {
                          "type": "text",
                          "value": ".name()"
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 100,
                          "column": 167,
                          "offset": 3385
                        },
                        "end": {
                          "line": 100,
                          "column": 199,
                          "offset": 3417
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 100,
                      "column": 91,
                      "offset": 3309
                    },
                    "end": {
                      "line": 100,
                      "column": 199,
                      "offset": 3417
                    },
                    "indent": []
                  }
                },
                {
                  "type": "tableCell",
                  "children": [],
                  "position": {
                    "start": {
                      "line": 100,
                      "column": 203,
                      "offset": 3421
                    },
                    "end": {
                      "line": 100,
                      "column": 203,
                      "offset": 3421
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 100,
                  "column": 1,
                  "offset": 3219
                },
                "end": {
                  "line": 100,
                  "column": 204,
                  "offset": 3422
                },
                "indent": []
              }
            },
            {
              "type": "tableRow",
              "children": [
                {
                  "type": "tableCell",
                  "children": [
                    {
                      "type": "link",
                      "url": "#statebotfsmonswitching",
                      "title": null,
                      "jsdoc": true,
                      "children": [
                        {
                          "type": "text",
                          "value": ".onSwitching()"
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 101,
                          "column": 3,
                          "offset": 3425
                        },
                        "end": {
                          "line": 101,
                          "column": 49,
                          "offset": 3471
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " / ",
                      "position": {
                        "start": {
                          "line": 101,
                          "column": 49,
                          "offset": 3471
                        },
                        "end": {
                          "line": 101,
                          "column": 52,
                          "offset": 3474
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "link",
                      "url": "#statebotfsmonswitched",
                      "title": null,
                      "jsdoc": true,
                      "children": [
                        {
                          "type": "text",
                          "value": ".onSwitched()"
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 101,
                          "column": 52,
                          "offset": 3474
                        },
                        "end": {
                          "line": 101,
                          "column": 96,
                          "offset": 3518
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 101,
                      "column": 3,
                      "offset": 3425
                    },
                    "end": {
                      "line": 101,
                      "column": 96,
                      "offset": 3518
                    },
                    "indent": []
                  }
                },
                {
                  "type": "tableCell",
                  "children": [],
                  "position": {
                    "start": {
                      "line": 101,
                      "column": 100,
                      "offset": 3522
                    },
                    "end": {
                      "line": 101,
                      "column": 100,
                      "offset": 3522
                    },
                    "indent": []
                  }
                },
                {
                  "type": "tableCell",
                  "children": [],
                  "position": {
                    "start": {
                      "line": 101,
                      "column": 103,
                      "offset": 3525
                    },
                    "end": {
                      "line": 101,
                      "column": 103,
                      "offset": 3525
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 101,
                  "column": 1,
                  "offset": 3423
                },
                "end": {
                  "line": 101,
                  "column": 104,
                  "offset": 3526
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 95,
              "column": 1,
              "offset": 2344
            },
            "end": {
              "line": 101,
              "column": 104,
              "offset": 3526
            },
            "indent": [
              1,
              1,
              1,
              1,
              1,
              1
            ]
          }
        },
        {
          "type": "html",
          "value": "<img src=\"./logo-small.png\" style=\"max-width: 75px; margin: 15px 0 0 5px;\" />",
          "position": {
            "start": {
              "line": 103,
              "column": 1,
              "offset": 3528
            },
            "end": {
              "line": 103,
              "column": 78,
              "offset": 3605
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 103,
          "column": 78,
          "offset": 3605
        }
      }
    },
    "tags": [
      {
        "title": "module",
        "description": null,
        "lineNumber": 105,
        "type": null,
        "name": "statebot"
      }
    ],
    "loc": {
      "start": {
        "line": 10,
        "column": 0
      },
      "end": {
        "line": 116,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 118,
          "column": 0
        },
        "end": {
          "line": 124,
          "column": 1
        }
      },
      "file": "/Users/mostly/Local Projects/statebot/src/index.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "module",
    "name": "statebot",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Create a ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 10,
                        "offset": 9
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "link",
                    "url": "#statebotfsm",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "statebotFsm"
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 10,
                        "offset": 9
                      },
                      "end": {
                        "line": 1,
                        "column": 42,
                        "offset": 41
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 42,
                        "offset": 41
                      },
                      "end": {
                        "line": 1,
                        "column": 43,
                        "offset": 42
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "object",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 43,
                        "offset": 42
                      },
                      "end": {
                        "line": 1,
                        "column": 51,
                        "offset": 50
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ".",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 51,
                        "offset": 50
                      },
                      "end": {
                        "line": 1,
                        "column": 52,
                        "offset": 51
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 52,
                    "offset": 51
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 52,
                "offset": 51
              }
            }
          },
          "tags": [
            {
              "title": "memberof",
              "description": "statebot",
              "lineNumber": 3
            },
            {
              "title": "function",
              "description": null,
              "lineNumber": 4,
              "name": null
            },
            {
              "title": "example",
              "description": "var machine = Statebot('lemming', {\n  chart: `\n    walking -> (digging | building | falling) ->\n      walking\n\n    falling -> splatting\n    walking -> exiting\n  `\n})",
              "lineNumber": 5
            },
            {
              "title": "param",
              "description": "Give your Statebot a name. Used for logging and by {@link #statebotassertroute|assertRoute()}.",
              "lineNumber": 16,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "name"
            },
            {
              "title": "param",
              "description": null,
              "lineNumber": 18,
              "type": {
                "type": "NameExpression",
                "name": "statebotOptions"
              },
              "name": "options"
            }
          ],
          "loc": {
            "start": {
              "line": 164,
              "column": 0
            },
            "end": {
              "line": 183,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 185,
                "column": 0
              },
              "end": {
                "line": 1629,
                "column": 1
              }
            },
            "file": "/Users/mostly/Local Projects/statebot/src/statebot.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "var machine = Statebot('lemming', {\n  chart: `\n    walking -> (digging | building | falling) ->\n      walking\n\n    falling -> splatting\n    walking -> exiting\n  `\n})"
            }
          ],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "name",
              "lineNumber": 16,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Give your Statebot a name. Used for logging and by ",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 52,
                            "offset": 51
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "link",
                        "url": "#statebotassertroute",
                        "title": null,
                        "jsdoc": true,
                        "children": [
                          {
                            "type": "text",
                            "value": "assertRoute()"
                          }
                        ],
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 52,
                            "offset": 51
                          },
                          "end": {
                            "line": 1,
                            "column": 94,
                            "offset": 93
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": ".",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 94,
                            "offset": 93
                          },
                          "end": {
                            "line": 1,
                            "column": 95,
                            "offset": 94
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 95,
                        "offset": 94
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 95,
                    "offset": 94
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "param",
              "name": "options",
              "lineNumber": 18,
              "type": {
                "type": "NameExpression",
                "name": "statebotOptions"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "memberof": "statebot",
          "kind": "function",
          "name": "Statebot",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "statebot",
              "kind": "module"
            },
            {
              "name": "Statebot",
              "kind": "function"
            }
          ],
          "namespace": "statebotStatebot"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Tests that an object is a ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 27,
                        "offset": 26
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "link",
                    "url": "#statebotfsm",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "statebotFsm"
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 27,
                        "offset": 26
                      },
                      "end": {
                        "line": 1,
                        "column": 59,
                        "offset": 58
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ".",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 59,
                        "offset": 58
                      },
                      "end": {
                        "line": 1,
                        "column": 60,
                        "offset": 59
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 60,
                    "offset": 59
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 60,
                "offset": 59
              }
            }
          },
          "tags": [
            {
              "title": "memberof",
              "description": "statebot",
              "lineNumber": 3
            },
            {
              "title": "function",
              "description": null,
              "lineNumber": 4,
              "name": null
            },
            {
              "title": "example",
              "description": "var machine = Statebot(...)\n\nisStatebot(machine)\n// true",
              "lineNumber": 5
            },
            {
              "title": "param",
              "description": "The object to test.",
              "lineNumber": 11,
              "type": {
                "type": "NameExpression",
                "name": "any"
              },
              "name": "object"
            },
            {
              "title": "returns",
              "description": null,
              "lineNumber": 12,
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 1658,
              "column": 0
            },
            "end": {
              "line": 1671,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 1673,
                "column": 0
              },
              "end": {
                "line": 1678,
                "column": 1
              }
            },
            "file": "/Users/mostly/Local Projects/statebot/src/statebot.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "var machine = Statebot(...)\n\nisStatebot(machine)\n// true"
            }
          ],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "object",
              "lineNumber": 11,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The object to test.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 20,
                            "offset": 19
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 20,
                        "offset": 19
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 20,
                    "offset": 19
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "any"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  }
                }
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "memberof": "statebot",
          "kind": "function",
          "name": "isStatebot",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "statebot",
              "kind": "module"
            },
            {
              "name": "isStatebot",
              "kind": "function"
            }
          ],
          "namespace": "statebotisStatebot"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Assert that a certain route can be followed by a\n",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 2,
                        "column": 1,
                        "offset": 49
                      },
                      "indent": [
                        1
                      ]
                    }
                  },
                  {
                    "type": "link",
                    "url": "#statebotfsm",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "statebotFsm"
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 2,
                        "column": 1,
                        "offset": 49
                      },
                      "end": {
                        "line": 2,
                        "column": 33,
                        "offset": 81
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ".",
                    "position": {
                      "start": {
                        "line": 2,
                        "column": 33,
                        "offset": 81
                      },
                      "end": {
                        "line": 2,
                        "column": 34,
                        "offset": 82
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 2,
                    "column": 34,
                    "offset": 82
                  },
                  "indent": [
                    1
                  ]
                }
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "This merely tests that a certain path can be taken through a\nstate-machine. It doesn't assert that the states are moved-through\nwhile the machine is working, as with\n",
                    "position": {
                      "start": {
                        "line": 4,
                        "column": 1,
                        "offset": 84
                      },
                      "end": {
                        "line": 7,
                        "column": 1,
                        "offset": 250
                      },
                      "indent": [
                        1,
                        1,
                        1
                      ]
                    }
                  },
                  {
                    "type": "link",
                    "url": "#statebotassertroute",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "assertRoute()"
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 7,
                        "column": 1,
                        "offset": 250
                      },
                      "end": {
                        "line": 7,
                        "column": 43,
                        "offset": 292
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ".",
                    "position": {
                      "start": {
                        "line": 7,
                        "column": 43,
                        "offset": 292
                      },
                      "end": {
                        "line": 7,
                        "column": 44,
                        "offset": 293
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 4,
                    "column": 1,
                    "offset": 84
                  },
                  "end": {
                    "line": 7,
                    "column": 44,
                    "offset": 293
                  },
                  "indent": [
                    1,
                    1,
                    1
                  ]
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 7,
                "column": 44,
                "offset": 293
              }
            }
          },
          "tags": [
            {
              "title": "memberof",
              "description": "statebot",
              "lineNumber": 9
            },
            {
              "title": "function",
              "description": null,
              "lineNumber": 10,
              "name": null
            },
            {
              "title": "param",
              "description": "The machine to test the route on.",
              "lineNumber": 11,
              "type": {
                "type": "NameExpression",
                "name": "statebotFsm"
              },
              "name": "machine"
            },
            {
              "title": "param",
              "description": "The route to test as an arrow-delimited string:\n\n `\n \"idle -> pending -> success -> done\"\n `",
              "lineNumber": 13,
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "string"
                  },
                  {
                    "type": "TypeApplication",
                    "expression": {
                      "type": "NameExpression",
                      "name": "Array"
                    },
                    "applications": [
                      {
                        "type": "NameExpression",
                        "name": "string"
                      }
                    ]
                  }
                ]
              },
              "name": "route"
            },
            {
              "title": "returns",
              "description": null,
              "lineNumber": 19,
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            },
            {
              "title": "example",
              "description": "var machine = Statebot(...)\n\nrouteIsPossible(machine,\n  'walking -> falling -> splatting -> walking'\n)\n// false",
              "lineNumber": 21
            }
          ],
          "loc": {
            "start": {
              "line": 24,
              "column": 0
            },
            "end": {
              "line": 52,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 54,
                "column": 0
              },
              "end": {
                "line": 74,
                "column": 1
              }
            },
            "file": "/Users/mostly/Local Projects/statebot/src/assertions.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "var machine = Statebot(...)\n\nrouteIsPossible(machine,\n  'walking -> falling -> splatting -> walking'\n)\n// false"
            }
          ],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "machine",
              "lineNumber": 11,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The machine to test the route on.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 34,
                            "offset": 33
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 34,
                        "offset": 33
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 34,
                    "offset": 33
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "statebotFsm"
              }
            },
            {
              "title": "param",
              "name": "route",
              "lineNumber": 13,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The route to test as an arrow-delimited string:",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 48,
                            "offset": 47
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 48,
                        "offset": 47
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": " ",
                        "position": {
                          "start": {
                            "line": 3,
                            "column": 1,
                            "offset": 49
                          },
                          "end": {
                            "line": 3,
                            "column": 2,
                            "offset": 50
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "inlineCode",
                        "value": "\"idle -> pending -> success -> done\"",
                        "position": {
                          "start": {
                            "line": 3,
                            "column": 2,
                            "offset": 50
                          },
                          "end": {
                            "line": 5,
                            "column": 3,
                            "offset": 92
                          },
                          "indent": [
                            1,
                            1
                          ]
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 3,
                        "column": 1,
                        "offset": 49
                      },
                      "end": {
                        "line": 5,
                        "column": 3,
                        "offset": 92
                      },
                      "indent": [
                        1,
                        1
                      ]
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 5,
                    "column": 3,
                    "offset": 92
                  }
                }
              },
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "string"
                  },
                  {
                    "type": "TypeApplication",
                    "expression": {
                      "type": "NameExpression",
                      "name": "Array"
                    },
                    "applications": [
                      {
                        "type": "NameExpression",
                        "name": "string"
                      }
                    ]
                  }
                ]
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  }
                }
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "memberof": "statebot",
          "kind": "function",
          "name": "routeIsPossible",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "statebot",
              "kind": "module"
            },
            {
              "name": "routeIsPossible",
              "kind": "function"
            }
          ],
          "namespace": "statebotrouteIsPossible"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Assert that a ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 15,
                        "offset": 14
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "link",
                    "url": "#statebotfsm",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "statebotFsm"
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 15,
                        "offset": 14
                      },
                      "end": {
                        "line": 1,
                        "column": 47,
                        "offset": 46
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " traced the route specified.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 47,
                        "offset": 46
                      },
                      "end": {
                        "line": 1,
                        "column": 75,
                        "offset": 74
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 75,
                    "offset": 74
                  },
                  "indent": []
                }
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Whereas ",
                    "position": {
                      "start": {
                        "line": 3,
                        "column": 1,
                        "offset": 76
                      },
                      "end": {
                        "line": 3,
                        "column": 9,
                        "offset": 84
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "link",
                    "url": "#statebotrouteispossible",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "routeIsPossible()"
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 3,
                        "column": 9,
                        "offset": 84
                      },
                      "end": {
                        "line": 3,
                        "column": 59,
                        "offset": 134
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " only checks\nthat a particular route can be followed, ",
                    "position": {
                      "start": {
                        "line": 3,
                        "column": 59,
                        "offset": 134
                      },
                      "end": {
                        "line": 4,
                        "column": 42,
                        "offset": 188
                      },
                      "indent": [
                        1
                      ]
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "assertRoute",
                    "position": {
                      "start": {
                        "line": 4,
                        "column": 42,
                        "offset": 188
                      },
                      "end": {
                        "line": 4,
                        "column": 55,
                        "offset": 201
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " will hook-into\na machine and wait for it to trace the specified path within a\ntimeout period.",
                    "position": {
                      "start": {
                        "line": 4,
                        "column": 55,
                        "offset": 201
                      },
                      "end": {
                        "line": 6,
                        "column": 16,
                        "offset": 295
                      },
                      "indent": [
                        1,
                        1
                      ]
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 3,
                    "column": 1,
                    "offset": 76
                  },
                  "end": {
                    "line": 6,
                    "column": 16,
                    "offset": 295
                  },
                  "indent": [
                    1,
                    1,
                    1
                  ]
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 6,
                "column": 16,
                "offset": 295
              }
            }
          },
          "tags": [
            {
              "title": "memberof",
              "description": "statebot",
              "lineNumber": 8
            },
            {
              "title": "function",
              "description": null,
              "lineNumber": 9,
              "name": null
            },
            {
              "title": "async",
              "description": null,
              "lineNumber": 10
            },
            {
              "title": "param",
              "description": "The machine to run the assertion on.",
              "lineNumber": 11,
              "type": {
                "type": "NameExpression",
                "name": "statebotFsm"
              },
              "name": "machine"
            },
            {
              "title": "param",
              "description": "The expected route as an arrow-delimited string:\n\n `\n \"idle -> pending -> success -> done\"\n `",
              "lineNumber": 13,
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "string"
                  },
                  {
                    "type": "TypeApplication",
                    "expression": {
                      "type": "NameExpression",
                      "name": "Array"
                    },
                    "applications": [
                      {
                        "type": "NameExpression",
                        "name": "string"
                      }
                    ]
                  }
                ]
              },
              "name": "expectedRoute"
            },
            {
              "title": "param",
              "description": null,
              "lineNumber": 19,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "assertRouteOptions"
                }
              },
              "name": "options"
            },
            {
              "title": "returns",
              "description": null,
              "lineNumber": 20,
              "type": {
                "type": "NameExpression",
                "name": "Promise"
              }
            },
            {
              "title": "example",
              "description": "var machine = Statebot(...)\n\nassertRoute(\n  machine, 'prepare -> debounce -> sending -> done -> idle',\n  {\n    description: 'Email sent with no issues',\n    fromState: 'idle',\n    timeoutInMs: 1000 * 20,\n    permittedDeviations: 0,\n    logLevel: 3\n  }\n)\n.then(() => console.log('Assertion passed!'))\n.catch(err => console.error(`Whoops: ${err}`))\n\nmachine.enter('idle')",
              "lineNumber": 22
            }
          ],
          "loc": {
            "start": {
              "line": 99,
              "column": 0
            },
            "end": {
              "line": 138,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 140,
                "column": 0
              },
              "end": {
                "line": 268,
                "column": 1
              }
            },
            "file": "/Users/mostly/Local Projects/statebot/src/assertions.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "var machine = Statebot(...)\n\nassertRoute(\n  machine, 'prepare -> debounce -> sending -> done -> idle',\n  {\n    description: 'Email sent with no issues',\n    fromState: 'idle',\n    timeoutInMs: 1000 * 20,\n    permittedDeviations: 0,\n    logLevel: 3\n  }\n)\n.then(() => console.log('Assertion passed!'))\n.catch(err => console.error(`Whoops: ${err}`))\n\nmachine.enter('idle')"
            }
          ],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "machine",
              "lineNumber": 11,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The machine to run the assertion on.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 37,
                            "offset": 36
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 37,
                        "offset": 36
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 37,
                    "offset": 36
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "statebotFsm"
              }
            },
            {
              "title": "param",
              "name": "expectedRoute",
              "lineNumber": 13,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The expected route as an arrow-delimited string:",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 49,
                            "offset": 48
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 49,
                        "offset": 48
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": " ",
                        "position": {
                          "start": {
                            "line": 3,
                            "column": 1,
                            "offset": 50
                          },
                          "end": {
                            "line": 3,
                            "column": 2,
                            "offset": 51
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "inlineCode",
                        "value": "\"idle -> pending -> success -> done\"",
                        "position": {
                          "start": {
                            "line": 3,
                            "column": 2,
                            "offset": 51
                          },
                          "end": {
                            "line": 5,
                            "column": 3,
                            "offset": 93
                          },
                          "indent": [
                            1,
                            1
                          ]
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 3,
                        "column": 1,
                        "offset": 50
                      },
                      "end": {
                        "line": 5,
                        "column": 3,
                        "offset": 93
                      },
                      "indent": [
                        1,
                        1
                      ]
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 5,
                    "column": 3,
                    "offset": 93
                  }
                }
              },
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "string"
                  },
                  {
                    "type": "TypeApplication",
                    "expression": {
                      "type": "NameExpression",
                      "name": "Array"
                    },
                    "applications": [
                      {
                        "type": "NameExpression",
                        "name": "string"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "title": "param",
              "name": "options",
              "lineNumber": 19,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "assertRouteOptions"
                }
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  }
                }
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Promise"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "memberof": "statebot",
          "kind": "function",
          "async": true,
          "name": "assertRoute",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "statebot",
              "kind": "module"
            },
            {
              "name": "assertRoute",
              "kind": "function"
            }
          ],
          "namespace": "statebotassertRoute"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Decompose a ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 13,
                        "offset": 12
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "link",
                    "url": "statebotChart",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "statebotChart"
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 13,
                        "offset": 12
                      },
                      "end": {
                        "line": 1,
                        "column": 34,
                        "offset": 33
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " into an object of ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 34,
                        "offset": 33
                      },
                      "end": {
                        "line": 1,
                        "column": 53,
                        "offset": 52
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "states",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 53,
                        "offset": 52
                      },
                      "end": {
                        "line": 1,
                        "column": 61,
                        "offset": 60
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ", ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 61,
                        "offset": 60
                      },
                      "end": {
                        "line": 1,
                        "column": 63,
                        "offset": 62
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "routes",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 63,
                        "offset": 62
                      },
                      "end": {
                        "line": 1,
                        "column": 71,
                        "offset": 70
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ",\nand ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 71,
                        "offset": 70
                      },
                      "end": {
                        "line": 2,
                        "column": 5,
                        "offset": 76
                      },
                      "indent": [
                        1
                      ]
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "transitions",
                    "position": {
                      "start": {
                        "line": 2,
                        "column": 5,
                        "offset": 76
                      },
                      "end": {
                        "line": 2,
                        "column": 18,
                        "offset": 89
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ".",
                    "position": {
                      "start": {
                        "line": 2,
                        "column": 18,
                        "offset": 89
                      },
                      "end": {
                        "line": 2,
                        "column": 19,
                        "offset": 90
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 2,
                    "column": 19,
                    "offset": 90
                  },
                  "indent": [
                    1
                  ]
                }
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Statebot() uses this internally to parse charts. Exposed for debugging.",
                    "position": {
                      "start": {
                        "line": 4,
                        "column": 1,
                        "offset": 92
                      },
                      "end": {
                        "line": 4,
                        "column": 72,
                        "offset": 163
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 4,
                    "column": 1,
                    "offset": 92
                  },
                  "end": {
                    "line": 4,
                    "column": 72,
                    "offset": 163
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 4,
                "column": 72,
                "offset": 163
              }
            }
          },
          "tags": [
            {
              "title": "memberof",
              "description": "statebot",
              "lineNumber": 6
            },
            {
              "title": "function",
              "description": null,
              "lineNumber": 7,
              "name": null
            },
            {
              "title": "param",
              "description": null,
              "lineNumber": 8,
              "type": {
                "type": "NameExpression",
                "name": "statebotChart"
              },
              "name": "chart"
            },
            {
              "title": "returns",
              "description": null,
              "lineNumber": 9,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              }
            },
            {
              "title": "example",
              "description": "var { states, routes, transitions } = decomposeChart`\n  pending ->\n    success | failure\n`\n// states = ['pending', 'success', 'failure']\n// routes = [ 'pending->success', 'pending->failure']\n// transitions = [\n//   ['pending', 'success'],\n//   ['pending', 'failure']\n// ]",
              "lineNumber": 11
            }
          ],
          "loc": {
            "start": {
              "line": 45,
              "column": 0
            },
            "end": {
              "line": 67,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 69,
                "column": 0
              },
              "end": {
                "line": 104,
                "column": 1
              }
            },
            "file": "/Users/mostly/Local Projects/statebot/src/parsing.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "var { states, routes, transitions } = decomposeChart`\n  pending ->\n    success | failure\n`\n// states = ['pending', 'success', 'failure']\n// routes = [ 'pending->success', 'pending->failure']\n// transitions = [\n//   ['pending', 'success'],\n//   ['pending', 'failure']\n// ]"
            }
          ],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "chart",
              "lineNumber": 8,
              "type": {
                "type": "NameExpression",
                "name": "statebotChart"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  }
                }
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Object"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "memberof": "statebot",
          "kind": "function",
          "name": "decomposeChart",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "statebot",
              "kind": "module"
            },
            {
              "name": "decomposeChart",
              "kind": "function"
            }
          ],
          "namespace": "statebotdecomposeChart"
        }
      ]
    },
    "path": [
      {
        "name": "statebot",
        "kind": "module"
      }
    ],
    "namespace": "statebot"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Options for creating a Statebot.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 33,
                  "offset": 32
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 33,
              "offset": 32
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 33,
          "offset": 32
        }
      }
    },
    "tags": [
      {
        "title": "typedef",
        "description": null,
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "statebotOptions"
      },
      {
        "title": "property",
        "description": "The state-chart.",
        "lineNumber": 4,
        "type": {
          "type": "NameExpression",
          "name": "statebotChart"
        },
        "name": "chart"
      },
      {
        "title": "property",
        "description": "The state in which to start. If unspecified, the first state in the\n chart will be used.",
        "lineNumber": 6,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        },
        "name": "startIn",
        "default": "auto"
      },
      {
        "title": "property",
        "description": "How noisy the logging is, from 1 to 3:\n ```\n 1) console.warn\n 2) console.warn/log/table\n 3) console.warn/log/table/info\n ```\n `3` is the default. Argument type-errors will always `throw`.",
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "logLevel",
        "default": "3"
      },
      {
        "title": "property",
        "description": "Limit how much history the state-machine keeps. Accessed via\n {@link #statebotfsmhistory|statebotFsm#history()}.",
        "lineNumber": 17,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "historyLimit",
        "default": "2"
      },
      {
        "title": "property",
        "description": "If you wish to have your Statebots listen to events coming from\n a shared EventEmitter, you can pass it in here. The `emit()`/`onEvent()`/\n `performTransitions()` methods will use it.\n\n It should have the same signature as {@link https://nodejs.org/api/events.html#events_class_eventemitter|EventEmitter}.",
        "lineNumber": 20,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "events"
          }
        },
        "name": "events"
      }
    ],
    "loc": {
      "start": {
        "line": 11,
        "column": 0
      },
      "end": {
        "line": 37,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 149,
          "column": 0
        },
        "end": {
          "line": 149,
          "column": 33
        }
      },
      "file": "/Users/mostly/Local Projects/statebot/src/statebot.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [
      {
        "title": "property",
        "name": "chart",
        "lineNumber": 4,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The state-chart.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 17,
                  "offset": 16
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 17,
              "offset": 16
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "statebotChart"
        }
      },
      {
        "title": "property",
        "name": "startIn",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The state in which to start. If unspecified, the first state in the\n chart will be used.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 21,
                      "offset": 88
                    },
                    "indent": [
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 21,
                  "offset": 88
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 21,
              "offset": 88
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        }
      },
      {
        "title": "property",
        "name": "logLevel",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "How noisy the logging is, from 1 to 3:",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 39,
                      "offset": 38
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 39,
                  "offset": 38
                },
                "indent": []
              }
            },
            {
              "type": "code",
              "lang": null,
              "value": "1) console.warn\n2) console.warn/log/table\n3) console.warn/log/table/info",
              "position": {
                "start": {
                  "line": 2,
                  "column": 1,
                  "offset": 39
                },
                "end": {
                  "line": 6,
                  "column": 5,
                  "offset": 124
                },
                "indent": [
                  1,
                  1,
                  1,
                  1
                ]
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": " ",
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 1,
                      "offset": 125
                    },
                    "end": {
                      "line": 7,
                      "column": 2,
                      "offset": 126
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "3",
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 2,
                      "offset": 126
                    },
                    "end": {
                      "line": 7,
                      "column": 5,
                      "offset": 129
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " is the default. Argument type-errors will always ",
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 5,
                      "offset": 129
                    },
                    "end": {
                      "line": 7,
                      "column": 55,
                      "offset": 179
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "throw",
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 55,
                      "offset": 179
                    },
                    "end": {
                      "line": 7,
                      "column": 62,
                      "offset": 186
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ".",
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 62,
                      "offset": 186
                    },
                    "end": {
                      "line": 7,
                      "column": 63,
                      "offset": 187
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 7,
                  "column": 1,
                  "offset": 125
                },
                "end": {
                  "line": 7,
                  "column": 63,
                  "offset": 187
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 7,
              "column": 63,
              "offset": 187
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "historyLimit",
        "lineNumber": 17,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Limit how much history the state-machine keeps. Accessed via\n ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 2,
                      "offset": 62
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "link",
                  "url": "#statebotfsmhistory",
                  "title": null,
                  "jsdoc": true,
                  "children": [
                    {
                      "type": "text",
                      "value": "statebotFsm#history()"
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 2,
                      "offset": 62
                    },
                    "end": {
                      "line": 2,
                      "column": 51,
                      "offset": 111
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ".",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 51,
                      "offset": 111
                    },
                    "end": {
                      "line": 2,
                      "column": 52,
                      "offset": 112
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 52,
                  "offset": 112
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 52,
              "offset": 112
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "events",
        "lineNumber": 20,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "If you wish to have your Statebots listen to events coming from\n a shared EventEmitter, you can pass it in here. The ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 54,
                      "offset": 117
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "emit()",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 54,
                      "offset": 117
                    },
                    "end": {
                      "line": 2,
                      "column": 62,
                      "offset": 125
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": "/",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 62,
                      "offset": 125
                    },
                    "end": {
                      "line": 2,
                      "column": 63,
                      "offset": 126
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "onEvent()",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 63,
                      "offset": 126
                    },
                    "end": {
                      "line": 2,
                      "column": 74,
                      "offset": 137
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": "/\n ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 74,
                      "offset": 137
                    },
                    "end": {
                      "line": 3,
                      "column": 2,
                      "offset": 140
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "performTransitions()",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 2,
                      "offset": 140
                    },
                    "end": {
                      "line": 3,
                      "column": 24,
                      "offset": 162
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " methods will use it.",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 24,
                      "offset": 162
                    },
                    "end": {
                      "line": 3,
                      "column": 45,
                      "offset": 183
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 45,
                  "offset": 183
                },
                "indent": [
                  1,
                  1
                ]
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": " It should have the same signature as ",
                  "position": {
                    "start": {
                      "line": 5,
                      "column": 1,
                      "offset": 185
                    },
                    "end": {
                      "line": 5,
                      "column": 39,
                      "offset": 223
                    },
                    "indent": []
                  }
                },
                {
                  "type": "link",
                  "url": "https://nodejs.org/api/events.html#events_class_eventemitter",
                  "title": null,
                  "jsdoc": true,
                  "children": [
                    {
                      "type": "text",
                      "value": "EventEmitter"
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 5,
                      "column": 39,
                      "offset": 223
                    },
                    "end": {
                      "line": 5,
                      "column": 120,
                      "offset": 304
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ".",
                  "position": {
                    "start": {
                      "line": 5,
                      "column": 120,
                      "offset": 304
                    },
                    "end": {
                      "line": 5,
                      "column": 121,
                      "offset": 305
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 5,
                  "column": 1,
                  "offset": 185
                },
                "end": {
                  "line": 5,
                  "column": 121,
                  "offset": 305
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 5,
              "column": 121,
              "offset": 305
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "events"
          }
        }
      }
    ],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "typedef",
    "name": "statebotOptions",
    "type": {
      "type": "NameExpression",
      "name": "Object"
    },
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "statebotOptions",
        "kind": "typedef"
      }
    ],
    "namespace": "statebotOptions"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "A description of all the states in a machine, plus all of the\npermitted transitions between them.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 36,
                  "offset": 97
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 36,
              "offset": 97
            },
            "indent": [
              1
            ]
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "This is defined using a ",
              "position": {
                "start": {
                  "line": 4,
                  "column": 1,
                  "offset": 99
                },
                "end": {
                  "line": 4,
                  "column": 25,
                  "offset": 123
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "string",
              "position": {
                "start": {
                  "line": 4,
                  "column": 25,
                  "offset": 123
                },
                "end": {
                  "line": 4,
                  "column": 33,
                  "offset": 131
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " or an ",
              "position": {
                "start": {
                  "line": 4,
                  "column": 33,
                  "offset": 131
                },
                "end": {
                  "line": 4,
                  "column": 40,
                  "offset": 138
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "array",
              "position": {
                "start": {
                  "line": 4,
                  "column": 40,
                  "offset": 138
                },
                "end": {
                  "line": 4,
                  "column": 47,
                  "offset": 145
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " of strings, but\n ",
              "position": {
                "start": {
                  "line": 4,
                  "column": 47,
                  "offset": 145
                },
                "end": {
                  "line": 5,
                  "column": 2,
                  "offset": 163
                },
                "indent": [
                  1
                ]
              }
            },
            {
              "type": "link",
              "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "Template Literals"
                }
              ],
              "position": {
                "start": {
                  "line": 5,
                  "column": 2,
                  "offset": 163
                },
                "end": {
                  "line": 5,
                  "column": 111,
                  "offset": 272
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": "\nare much more convenient.",
              "position": {
                "start": {
                  "line": 5,
                  "column": 111,
                  "offset": 272
                },
                "end": {
                  "line": 6,
                  "column": 26,
                  "offset": 298
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 4,
              "column": 1,
              "offset": 99
            },
            "end": {
              "line": 6,
              "column": 26,
              "offset": 298
            },
            "indent": [
              1,
              1
            ]
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "An arrow ",
              "position": {
                "start": {
                  "line": 8,
                  "column": 1,
                  "offset": 300
                },
                "end": {
                  "line": 8,
                  "column": 10,
                  "offset": 309
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "->",
              "position": {
                "start": {
                  "line": 8,
                  "column": 10,
                  "offset": 309
                },
                "end": {
                  "line": 8,
                  "column": 14,
                  "offset": 313
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " configures a ",
              "position": {
                "start": {
                  "line": 8,
                  "column": 14,
                  "offset": 313
                },
                "end": {
                  "line": 8,
                  "column": 28,
                  "offset": 327
                },
                "indent": []
              }
            },
            {
              "type": "strong",
              "children": [
                {
                  "type": "text",
                  "value": "permitted transition",
                  "position": {
                    "start": {
                      "line": 8,
                      "column": 30,
                      "offset": 329
                    },
                    "end": {
                      "line": 8,
                      "column": 50,
                      "offset": 349
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 8,
                  "column": 28,
                  "offset": 327
                },
                "end": {
                  "line": 8,
                  "column": 52,
                  "offset": 351
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " between two states:",
              "position": {
                "start": {
                  "line": 8,
                  "column": 52,
                  "offset": 351
                },
                "end": {
                  "line": 8,
                  "column": 72,
                  "offset": 371
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 8,
              "column": 1,
              "offset": 300
            },
            "end": {
              "line": 8,
              "column": 72,
              "offset": 371
            },
            "indent": []
          }
        },
        {
          "type": "code",
          "lang": null,
          "value": "from-state -> to-state",
          "position": {
            "start": {
              "line": 10,
              "column": 1,
              "offset": 373
            },
            "end": {
              "line": 12,
              "column": 4,
              "offset": 403
            },
            "indent": [
              1,
              1
            ]
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "It's the only operator needed to build any chart:",
              "position": {
                "start": {
                  "line": 14,
                  "column": 1,
                  "offset": 405
                },
                "end": {
                  "line": 14,
                  "column": 50,
                  "offset": 454
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 14,
              "column": 1,
              "offset": 405
            },
            "end": {
              "line": 14,
              "column": 50,
              "offset": 454
            },
            "indent": []
          }
        },
        {
          "type": "code",
          "lang": "js",
          "value": "var promiseLikeChart = `\n  pending -> resolved\n  pending -> rejected\n  resolved -> done\n  rejected -> done\n`",
          "position": {
            "start": {
              "line": 16,
              "column": 1,
              "offset": 456
            },
            "end": {
              "line": 23,
              "column": 4,
              "offset": 574
            },
            "indent": [
              1,
              1,
              1,
              1,
              1,
              1,
              1
            ]
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The \"OR\" operator ",
              "position": {
                "start": {
                  "line": 25,
                  "column": 1,
                  "offset": 576
                },
                "end": {
                  "line": 25,
                  "column": 19,
                  "offset": 594
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "|",
              "position": {
                "start": {
                  "line": 25,
                  "column": 19,
                  "offset": 594
                },
                "end": {
                  "line": 25,
                  "column": 22,
                  "offset": 597
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " can help us remove some redundancy from the above example:",
              "position": {
                "start": {
                  "line": 25,
                  "column": 22,
                  "offset": 597
                },
                "end": {
                  "line": 25,
                  "column": 81,
                  "offset": 656
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 25,
              "column": 1,
              "offset": 576
            },
            "end": {
              "line": 25,
              "column": 81,
              "offset": 656
            },
            "indent": []
          }
        },
        {
          "type": "code",
          "lang": "js",
          "value": "var promiseLikeChart = `\n  pending -> resolved | rejected\n  resolved | rejected -> done\n`",
          "position": {
            "start": {
              "line": 27,
              "column": 1,
              "offset": 658
            },
            "end": {
              "line": 32,
              "column": 4,
              "offset": 757
            },
            "indent": [
              1,
              1,
              1,
              1,
              1
            ]
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "In both charts, ",
              "position": {
                "start": {
                  "line": 34,
                  "column": 1,
                  "offset": 759
                },
                "end": {
                  "line": 34,
                  "column": 17,
                  "offset": 775
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "pending",
              "position": {
                "start": {
                  "line": 34,
                  "column": 17,
                  "offset": 775
                },
                "end": {
                  "line": 34,
                  "column": 26,
                  "offset": 784
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " can transition to ",
              "position": {
                "start": {
                  "line": 34,
                  "column": 26,
                  "offset": 784
                },
                "end": {
                  "line": 34,
                  "column": 45,
                  "offset": 803
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "resolved",
              "position": {
                "start": {
                  "line": 34,
                  "column": 45,
                  "offset": 803
                },
                "end": {
                  "line": 34,
                  "column": 55,
                  "offset": 813
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " or ",
              "position": {
                "start": {
                  "line": 34,
                  "column": 55,
                  "offset": 813
                },
                "end": {
                  "line": 34,
                  "column": 59,
                  "offset": 817
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "rejected",
              "position": {
                "start": {
                  "line": 34,
                  "column": 59,
                  "offset": 817
                },
                "end": {
                  "line": 34,
                  "column": 69,
                  "offset": 827
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ", and\n",
              "position": {
                "start": {
                  "line": 34,
                  "column": 69,
                  "offset": 827
                },
                "end": {
                  "line": 35,
                  "column": 1,
                  "offset": 833
                },
                "indent": [
                  1
                ]
              }
            },
            {
              "type": "inlineCode",
              "value": "resolved",
              "position": {
                "start": {
                  "line": 35,
                  "column": 1,
                  "offset": 833
                },
                "end": {
                  "line": 35,
                  "column": 11,
                  "offset": 843
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " or ",
              "position": {
                "start": {
                  "line": 35,
                  "column": 11,
                  "offset": 843
                },
                "end": {
                  "line": 35,
                  "column": 15,
                  "offset": 847
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "rejected",
              "position": {
                "start": {
                  "line": 35,
                  "column": 15,
                  "offset": 847
                },
                "end": {
                  "line": 35,
                  "column": 25,
                  "offset": 857
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " can both transition to ",
              "position": {
                "start": {
                  "line": 35,
                  "column": 25,
                  "offset": 857
                },
                "end": {
                  "line": 35,
                  "column": 49,
                  "offset": 881
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "done",
              "position": {
                "start": {
                  "line": 35,
                  "column": 49,
                  "offset": 881
                },
                "end": {
                  "line": 35,
                  "column": 55,
                  "offset": 887
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ".",
              "position": {
                "start": {
                  "line": 35,
                  "column": 55,
                  "offset": 887
                },
                "end": {
                  "line": 35,
                  "column": 56,
                  "offset": 888
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 34,
              "column": 1,
              "offset": 759
            },
            "end": {
              "line": 35,
              "column": 56,
              "offset": 888
            },
            "indent": [
              1
            ]
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "We can streamline this even further:",
              "position": {
                "start": {
                  "line": 37,
                  "column": 1,
                  "offset": 890
                },
                "end": {
                  "line": 37,
                  "column": 37,
                  "offset": 926
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 37,
              "column": 1,
              "offset": 890
            },
            "end": {
              "line": 37,
              "column": 37,
              "offset": 926
            },
            "indent": []
          }
        },
        {
          "type": "code",
          "lang": "js",
          "value": "var promiseLikeChart = `\n  pending -> (resolved | rejected) -> done\n`",
          "position": {
            "start": {
              "line": 39,
              "column": 1,
              "offset": 928
            },
            "end": {
              "line": 43,
              "column": 4,
              "offset": 1007
            },
            "indent": [
              1,
              1,
              1,
              1
            ]
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Again, this is exactly equivalent to the previous two examples.",
              "position": {
                "start": {
                  "line": 45,
                  "column": 1,
                  "offset": 1009
                },
                "end": {
                  "line": 45,
                  "column": 64,
                  "offset": 1072
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 45,
              "column": 1,
              "offset": 1009
            },
            "end": {
              "line": 45,
              "column": 64,
              "offset": 1072
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Notice in this one that we have parentheses ",
              "position": {
                "start": {
                  "line": 47,
                  "column": 1,
                  "offset": 1074
                },
                "end": {
                  "line": 47,
                  "column": 45,
                  "offset": 1118
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "(",
              "position": {
                "start": {
                  "line": 47,
                  "column": 45,
                  "offset": 1118
                },
                "end": {
                  "line": 47,
                  "column": 48,
                  "offset": 1121
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " ",
              "position": {
                "start": {
                  "line": 47,
                  "column": 48,
                  "offset": 1121
                },
                "end": {
                  "line": 47,
                  "column": 49,
                  "offset": 1122
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": ")",
              "position": {
                "start": {
                  "line": 47,
                  "column": 49,
                  "offset": 1122
                },
                "end": {
                  "line": 47,
                  "column": 52,
                  "offset": 1125
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " surrounding ",
              "position": {
                "start": {
                  "line": 47,
                  "column": 52,
                  "offset": 1125
                },
                "end": {
                  "line": 47,
                  "column": 65,
                  "offset": 1138
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "resolved",
              "position": {
                "start": {
                  "line": 47,
                  "column": 65,
                  "offset": 1138
                },
                "end": {
                  "line": 47,
                  "column": 75,
                  "offset": 1148
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": "\nand ",
              "position": {
                "start": {
                  "line": 47,
                  "column": 75,
                  "offset": 1148
                },
                "end": {
                  "line": 48,
                  "column": 5,
                  "offset": 1153
                },
                "indent": [
                  1
                ]
              }
            },
            {
              "type": "inlineCode",
              "value": "rejected",
              "position": {
                "start": {
                  "line": 48,
                  "column": 5,
                  "offset": 1153
                },
                "end": {
                  "line": 48,
                  "column": 15,
                  "offset": 1163
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ". They are actually completely ignored by the parser, and\nyou can use them as you please to help make your charts more readable.",
              "position": {
                "start": {
                  "line": 48,
                  "column": 15,
                  "offset": 1163
                },
                "end": {
                  "line": 49,
                  "column": 71,
                  "offset": 1291
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 47,
              "column": 1,
              "offset": 1074
            },
            "end": {
              "line": 49,
              "column": 71,
              "offset": 1291
            },
            "indent": [
              1,
              1
            ]
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "A chart works exactly the same without them:",
              "position": {
                "start": {
                  "line": 51,
                  "column": 1,
                  "offset": 1293
                },
                "end": {
                  "line": 51,
                  "column": 45,
                  "offset": 1337
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 51,
              "column": 1,
              "offset": 1293
            },
            "end": {
              "line": 51,
              "column": 45,
              "offset": 1337
            },
            "indent": []
          }
        },
        {
          "type": "code",
          "lang": "js",
          "value": "var promiseLikeChart = `\n  pending -> resolved | rejected -> done\n`",
          "position": {
            "start": {
              "line": 53,
              "column": 1,
              "offset": 1339
            },
            "end": {
              "line": 57,
              "column": 4,
              "offset": 1416
            },
            "indent": [
              1,
              1,
              1,
              1
            ]
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Charts can also be split across multiple-lines:",
              "position": {
                "start": {
                  "line": 59,
                  "column": 1,
                  "offset": 1418
                },
                "end": {
                  "line": 59,
                  "column": 48,
                  "offset": 1465
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 59,
              "column": 1,
              "offset": 1418
            },
            "end": {
              "line": 59,
              "column": 48,
              "offset": 1465
            },
            "indent": []
          }
        },
        {
          "type": "code",
          "lang": "js",
          "value": "var promiseLikeChart = `\n  pending ->\n  resolved |\n  rejected ->\n  done\n`",
          "position": {
            "start": {
              "line": 61,
              "column": 1,
              "offset": 1467
            },
            "end": {
              "line": 68,
              "column": 4,
              "offset": 1550
            },
            "indent": [
              1,
              1,
              1,
              1,
              1,
              1,
              1
            ]
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Notice that all white-space is ignored on either side of the ",
              "position": {
                "start": {
                  "line": 69,
                  "column": 1,
                  "offset": 1551
                },
                "end": {
                  "line": 69,
                  "column": 62,
                  "offset": 1612
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "->",
              "position": {
                "start": {
                  "line": 69,
                  "column": 62,
                  "offset": 1612
                },
                "end": {
                  "line": 69,
                  "column": 66,
                  "offset": 1616
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": "\nand ",
              "position": {
                "start": {
                  "line": 69,
                  "column": 66,
                  "offset": 1616
                },
                "end": {
                  "line": 70,
                  "column": 5,
                  "offset": 1621
                },
                "indent": [
                  1
                ]
              }
            },
            {
              "type": "inlineCode",
              "value": "|",
              "position": {
                "start": {
                  "line": 70,
                  "column": 5,
                  "offset": 1621
                },
                "end": {
                  "line": 70,
                  "column": 8,
                  "offset": 1624
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ".",
              "position": {
                "start": {
                  "line": 70,
                  "column": 8,
                  "offset": 1624
                },
                "end": {
                  "line": 70,
                  "column": 9,
                  "offset": 1625
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 69,
              "column": 1,
              "offset": 1551
            },
            "end": {
              "line": 70,
              "column": 9,
              "offset": 1625
            },
            "indent": [
              1
            ]
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "inlineCode",
              "value": "// Comments of this kind are allowed, too:",
              "position": {
                "start": {
                  "line": 72,
                  "column": 1,
                  "offset": 1627
                },
                "end": {
                  "line": 72,
                  "column": 45,
                  "offset": 1671
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 72,
              "column": 1,
              "offset": 1627
            },
            "end": {
              "line": 72,
              "column": 45,
              "offset": 1671
            },
            "indent": []
          }
        },
        {
          "type": "code",
          "lang": "js",
          "value": "var promiseLikeChart = `\n  pending -> // Where do we go from here?\n    (resolved | rejected) -> // Ah, yes\n\n  // And now we're all finished\n  done\n`",
          "position": {
            "start": {
              "line": 74,
              "column": 1,
              "offset": 1673
            },
            "end": {
              "line": 82,
              "column": 4,
              "offset": 1831
            },
            "indent": [
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1
            ]
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Finally, here's a more full example:",
              "position": {
                "start": {
                  "line": 84,
                  "column": 1,
                  "offset": 1833
                },
                "end": {
                  "line": 84,
                  "column": 37,
                  "offset": 1869
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 84,
              "column": 1,
              "offset": 1833
            },
            "end": {
              "line": 84,
              "column": 37,
              "offset": 1869
            },
            "indent": []
          }
        },
        {
          "type": "code",
          "lang": "js",
          "value": "var dragDropChart = `\n  idle ->\n    drag-detect ->\n      (dragging | clicked)\n\n  // Just a click, bail-out!\n  clicked -> idle\n\n  // Drag detected!\n  dragging ->\n    drag-wait -> dragged -> drag-wait\n\n  // Drag finished...\n  (drag-wait | dragged) ->\n    (drag-done | drag-cancel) ->\n      idle\n`",
          "position": {
            "start": {
              "line": 86,
              "column": 1,
              "offset": 1871
            },
            "end": {
              "line": 104,
              "column": 4,
              "offset": 2175
            },
            "indent": [
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 104,
          "column": 4,
          "offset": 2175
        }
      }
    },
    "tags": [
      {
        "title": "typedef",
        "description": null,
        "lineNumber": 106,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "string"
                }
              ]
            }
          ]
        },
        "name": "statebotChart"
      }
    ],
    "loc": {
      "start": {
        "line": 39,
        "column": 0
      },
      "end": {
        "line": 146,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 149,
          "column": 0
        },
        "end": {
          "line": 149,
          "column": 33
        }
      },
      "file": "/Users/mostly/Local Projects/statebot/src/statebot.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "typedef",
    "name": "statebotChart",
    "type": {
      "type": "UnionType",
      "elements": [
        {
          "type": "NameExpression",
          "name": "string"
        },
        {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        }
      ]
    },
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "statebotChart",
        "kind": "typedef"
      }
    ],
    "namespace": "statebotChart"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "A state-machine object created by\n",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 1,
                  "offset": 34
                },
                "indent": [
                  1
                ]
              }
            },
            {
              "type": "link",
              "url": "#statebotstatebot",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "Statebot()"
                }
              ],
              "position": {
                "start": {
                  "line": 2,
                  "column": 1,
                  "offset": 34
                },
                "end": {
                  "line": 2,
                  "column": 37,
                  "offset": 70
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ".",
              "position": {
                "start": {
                  "line": 2,
                  "column": 37,
                  "offset": 70
                },
                "end": {
                  "line": 2,
                  "column": 38,
                  "offset": 71
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 38,
              "offset": 71
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 38,
          "offset": 71
        }
      }
    },
    "tags": [
      {
        "title": "typedef",
        "description": null,
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "statebotFsm"
      }
    ],
    "loc": {
      "start": {
        "line": 658,
        "column": 2
      },
      "end": {
        "line": 662,
        "column": 5
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 664,
          "column": 2
        },
        "end": {
          "line": 1628,
          "column": 3
        }
      },
      "file": "/Users/mostly/Local Projects/statebot/src/statebot.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "typedef",
    "name": "statebotFsm",
    "type": {
      "type": "NameExpression",
      "name": "Object"
    },
    "members": {
      "global": [],
      "inner": [],
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Tests to see if we can transition to the specified state from\nthe ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 2,
                        "column": 5,
                        "offset": 66
                      },
                      "indent": [
                        1
                      ]
                    }
                  },
                  {
                    "type": "link",
                    "url": "#statebotfsmcurrentstate",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": ".currentState()"
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 2,
                        "column": 5,
                        "offset": 66
                      },
                      "end": {
                        "line": 2,
                        "column": 53,
                        "offset": 114
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ".",
                    "position": {
                      "start": {
                        "line": 2,
                        "column": 53,
                        "offset": 114
                      },
                      "end": {
                        "line": 2,
                        "column": 54,
                        "offset": 115
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 2,
                    "column": 54,
                    "offset": 115
                  },
                  "indent": [
                    1
                  ]
                }
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "If more than one state is specified, ",
                    "position": {
                      "start": {
                        "line": 4,
                        "column": 1,
                        "offset": 117
                      },
                      "end": {
                        "line": 4,
                        "column": 38,
                        "offset": 154
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "true",
                    "position": {
                      "start": {
                        "line": 4,
                        "column": 38,
                        "offset": 154
                      },
                      "end": {
                        "line": 4,
                        "column": 44,
                        "offset": 160
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " is returned only if\n",
                    "position": {
                      "start": {
                        "line": 4,
                        "column": 44,
                        "offset": 160
                      },
                      "end": {
                        "line": 5,
                        "column": 1,
                        "offset": 181
                      },
                      "indent": [
                        1
                      ]
                    }
                  },
                  {
                    "type": "strong",
                    "children": [
                      {
                        "type": "text",
                        "value": "ALL",
                        "position": {
                          "start": {
                            "line": 5,
                            "column": 3,
                            "offset": 183
                          },
                          "end": {
                            "line": 5,
                            "column": 6,
                            "offset": 186
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 5,
                        "column": 1,
                        "offset": 181
                      },
                      "end": {
                        "line": 5,
                        "column": 8,
                        "offset": 188
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " states are available.",
                    "position": {
                      "start": {
                        "line": 5,
                        "column": 8,
                        "offset": 188
                      },
                      "end": {
                        "line": 5,
                        "column": 30,
                        "offset": 210
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 4,
                    "column": 1,
                    "offset": 117
                  },
                  "end": {
                    "line": 5,
                    "column": 30,
                    "offset": 210
                  },
                  "indent": [
                    1
                  ]
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 5,
                "column": 30,
                "offset": 210
              }
            }
          },
          "tags": [
            {
              "title": "memberof",
              "description": "statebotFsm",
              "lineNumber": 7
            },
            {
              "title": "instance",
              "description": null,
              "lineNumber": 8
            },
            {
              "title": "function",
              "description": null,
              "lineNumber": 9,
              "name": null
            },
            {
              "title": "param",
              "description": null,
              "lineNumber": 10,
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "string"
                  },
                  {
                    "type": "TypeApplication",
                    "expression": {
                      "type": "NameExpression",
                      "name": "Array"
                    },
                    "applications": [
                      {
                        "type": "NameExpression",
                        "name": "string"
                      }
                    ]
                  }
                ]
              },
              "name": "states"
            },
            {
              "title": "returns",
              "description": null,
              "lineNumber": 11,
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            },
            {
              "title": "example",
              "description": "var machine = Statebot('game-menus', {\n  chart: `\n    loading ->\n      menu ->\n        play |\n        options |\n        sound |\n        quit\n\n    // Go back to menu\n    play | options | sound -> menu\n\n    // Can quit from main game, too\n    play -> quit\n  `\n})\n\nmachine.canTransitionTo('play')\n// false\n\nmachine.enter('menu')\nmachine.canTransitionTo(['play', 'options'])\n// true",
              "lineNumber": 12
            }
          ],
          "loc": {
            "start": {
              "line": 672,
              "column": 4
            },
            "end": {
              "line": 708,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 709,
                "column": 4
              },
              "end": {
                "line": 709,
                "column": 36
              }
            },
            "file": "/Users/mostly/Local Projects/statebot/src/statebot.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "var machine = Statebot('game-menus', {\n  chart: `\n    loading ->\n      menu ->\n        play |\n        options |\n        sound |\n        quit\n\n    // Go back to menu\n    play | options | sound -> menu\n\n    // Can quit from main game, too\n    play -> quit\n  `\n})\n\nmachine.canTransitionTo('play')\n// false\n\nmachine.enter('menu')\nmachine.canTransitionTo(['play', 'options'])\n// true"
            }
          ],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "states",
              "lineNumber": 10,
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "string"
                  },
                  {
                    "type": "TypeApplication",
                    "expression": {
                      "type": "NameExpression",
                      "name": "Array"
                    },
                    "applications": [
                      {
                        "type": "NameExpression",
                        "name": "string"
                      }
                    ]
                  }
                ]
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  }
                }
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "memberof": "statebotFsm",
          "scope": "instance",
          "kind": "function",
          "name": "canTransitionTo",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "statebotFsm",
              "kind": "typedef"
            },
            {
              "name": "canTransitionTo",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "statebotFsm#canTransitionTo"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Returns the current state.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 27,
                        "offset": 26
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 27,
                    "offset": 26
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 27,
                "offset": 26
              }
            }
          },
          "tags": [
            {
              "title": "memberof",
              "description": "statebotFsm",
              "lineNumber": 3
            },
            {
              "title": "instance",
              "description": null,
              "lineNumber": 4
            },
            {
              "title": "function",
              "description": null,
              "lineNumber": 5,
              "name": null
            },
            {
              "title": "returns",
              "description": null,
              "lineNumber": 6,
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "example",
              "description": "var machine = Statebot('coroutine', {\n  chart: `\n    suspended -> running -> (suspended | dead)\n  `\n})\n\nmachine.currentState()\n// \"suspended\"",
              "lineNumber": 8
            }
          ],
          "loc": {
            "start": {
              "line": 711,
              "column": 4
            },
            "end": {
              "line": 728,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 729,
                "column": 4
              },
              "end": {
                "line": 729,
                "column": 30
              }
            },
            "file": "/Users/mostly/Local Projects/statebot/src/statebot.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "var machine = Statebot('coroutine', {\n  chart: `\n    suspended -> running -> (suspended | dead)\n  `\n})\n\nmachine.currentState()\n// \"suspended\""
            }
          ],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  }
                }
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "memberof": "statebotFsm",
          "scope": "instance",
          "kind": "function",
          "name": "currentState",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "statebotFsm",
              "kind": "typedef"
            },
            {
              "name": "currentState",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "statebotFsm#currentState"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Immediately emits an event, firing any listeners added using\n",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 2,
                        "column": 1,
                        "offset": 61
                      },
                      "indent": [
                        1
                      ]
                    }
                  },
                  {
                    "type": "link",
                    "url": "#statebotfsmperformtransitions",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": ".performTransitions()"
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 2,
                        "column": 1,
                        "offset": 61
                      },
                      "end": {
                        "line": 2,
                        "column": 61,
                        "offset": 121
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " or ",
                    "position": {
                      "start": {
                        "line": 2,
                        "column": 61,
                        "offset": 121
                      },
                      "end": {
                        "line": 2,
                        "column": 65,
                        "offset": 125
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "link",
                    "url": "#statebotfsmonevent",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": ".onEvent()"
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 2,
                        "column": 65,
                        "offset": 125
                      },
                      "end": {
                        "line": 2,
                        "column": 103,
                        "offset": 163
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ".",
                    "position": {
                      "start": {
                        "line": 2,
                        "column": 103,
                        "offset": 163
                      },
                      "end": {
                        "line": 2,
                        "column": 104,
                        "offset": 164
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 2,
                    "column": 104,
                    "offset": 164
                  },
                  "indent": [
                    1
                  ]
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 2,
                "column": 104,
                "offset": 164
              }
            }
          },
          "tags": [
            {
              "title": "memberof",
              "description": "statebotFsm",
              "lineNumber": 4
            },
            {
              "title": "instance",
              "description": null,
              "lineNumber": 5
            },
            {
              "title": "function",
              "description": null,
              "lineNumber": 6,
              "name": null
            },
            {
              "title": "param",
              "description": null,
              "lineNumber": 7,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "eventName"
            },
            {
              "title": "param",
              "description": "Optional arguments to pass to listeners.",
              "lineNumber": 8,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "RestType",
                  "expression": {
                    "type": "AllLiteral"
                  }
                }
              },
              "name": "args"
            },
            {
              "title": "returns",
              "description": "Whether or not the event had listeners.\n\n See: {@link https://nodejs.org/api/events.html#events_emitter_emit_eventname_args|Node Events}\n for more information.\n\nStatebot imports `EventEmitter` from the\n {@link https://www.npmjs.com/package/events|events}\npackage for dealing with events in the browser.",
              "lineNumber": 10,
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            },
            {
              "title": "example",
              "description": "var machine = Statebot('basic-form', {\n  chart: `\n    idle -> sending -> redirect\n  `\n})\n\nmachine.performTransitions({\n  'idle -> sending': {\n    on: 'post-data',\n    then: (...args) => {\n      console.log('Event args: ', args)\n      // setTimeout(machine.Enter('redirect'), 5000)\n    }\n  }\n})\n\nmachine.emit('post-data', 'Hello, world!')\n// Event args: [\"Hello, world!\"]\n\nmachine.currentState()\n// \"sending\"",
              "lineNumber": 20
            }
          ],
          "loc": {
            "start": {
              "line": 731,
              "column": 4
            },
            "end": {
              "line": 773,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 774,
                "column": 4
              },
              "end": {
                "line": 774,
                "column": 14
              }
            },
            "file": "/Users/mostly/Local Projects/statebot/src/statebot.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "var machine = Statebot('basic-form', {\n  chart: `\n    idle -> sending -> redirect\n  `\n})\n\nmachine.performTransitions({\n  'idle -> sending': {\n    on: 'post-data',\n    then: (...args) => {\n      console.log('Event args: ', args)\n      // setTimeout(machine.Enter('redirect'), 5000)\n    }\n  }\n})\n\nmachine.emit('post-data', 'Hello, world!')\n// Event args: [\"Hello, world!\"]\n\nmachine.currentState()\n// \"sending\""
            }
          ],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "eventName",
              "lineNumber": 7,
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "param",
              "name": "args",
              "lineNumber": 8,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Optional arguments to pass to listeners.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 41,
                            "offset": 40
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 41,
                        "offset": 40
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 41,
                    "offset": 40
                  }
                }
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "RestType",
                  "expression": {
                    "type": "AllLiteral"
                  }
                }
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Whether or not the event had listeners.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 40,
                            "offset": 39
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 40,
                        "offset": 39
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": " See: ",
                        "position": {
                          "start": {
                            "line": 3,
                            "column": 1,
                            "offset": 41
                          },
                          "end": {
                            "line": 3,
                            "column": 7,
                            "offset": 47
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "link",
                        "url": "https://nodejs.org/api/events.html#events_emitter_emit_eventname_args",
                        "title": null,
                        "jsdoc": true,
                        "children": [
                          {
                            "type": "text",
                            "value": "Node Events"
                          }
                        ],
                        "position": {
                          "start": {
                            "line": 3,
                            "column": 7,
                            "offset": 47
                          },
                          "end": {
                            "line": 3,
                            "column": 96,
                            "offset": 136
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": "\n for more information.",
                        "position": {
                          "start": {
                            "line": 3,
                            "column": 96,
                            "offset": 136
                          },
                          "end": {
                            "line": 4,
                            "column": 23,
                            "offset": 159
                          },
                          "indent": [
                            1
                          ]
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 3,
                        "column": 1,
                        "offset": 41
                      },
                      "end": {
                        "line": 4,
                        "column": 23,
                        "offset": 159
                      },
                      "indent": [
                        1
                      ]
                    }
                  },
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Statebot imports ",
                        "position": {
                          "start": {
                            "line": 6,
                            "column": 1,
                            "offset": 161
                          },
                          "end": {
                            "line": 6,
                            "column": 18,
                            "offset": 178
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "inlineCode",
                        "value": "EventEmitter",
                        "position": {
                          "start": {
                            "line": 6,
                            "column": 18,
                            "offset": 178
                          },
                          "end": {
                            "line": 6,
                            "column": 32,
                            "offset": 192
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": " from the\n ",
                        "position": {
                          "start": {
                            "line": 6,
                            "column": 32,
                            "offset": 192
                          },
                          "end": {
                            "line": 7,
                            "column": 2,
                            "offset": 203
                          },
                          "indent": [
                            1
                          ]
                        }
                      },
                      {
                        "type": "link",
                        "url": "https://www.npmjs.com/package/events",
                        "title": null,
                        "jsdoc": true,
                        "children": [
                          {
                            "type": "text",
                            "value": "events"
                          }
                        ],
                        "position": {
                          "start": {
                            "line": 7,
                            "column": 2,
                            "offset": 203
                          },
                          "end": {
                            "line": 7,
                            "column": 53,
                            "offset": 254
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": "\npackage for dealing with events in the browser.",
                        "position": {
                          "start": {
                            "line": 7,
                            "column": 53,
                            "offset": 254
                          },
                          "end": {
                            "line": 8,
                            "column": 48,
                            "offset": 302
                          },
                          "indent": [
                            1
                          ]
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 6,
                        "column": 1,
                        "offset": 161
                      },
                      "end": {
                        "line": 8,
                        "column": 48,
                        "offset": 302
                      },
                      "indent": [
                        1,
                        1
                      ]
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 8,
                    "column": 48,
                    "offset": 302
                  }
                }
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "memberof": "statebotFsm",
          "scope": "instance",
          "kind": "function",
          "name": "emit",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "statebotFsm",
              "kind": "typedef"
            },
            {
              "name": "emit",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "statebotFsm#emit"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Creates a function that emits the specified event.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 51,
                        "offset": 50
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 51,
                    "offset": 50
                  },
                  "indent": []
                }
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "(This is essentially a convenience wrapper around ",
                    "position": {
                      "start": {
                        "line": 3,
                        "column": 1,
                        "offset": 52
                      },
                      "end": {
                        "line": 3,
                        "column": 51,
                        "offset": 102
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "link",
                    "url": "#statebotfsmemit",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": ".emit()"
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 3,
                        "column": 51,
                        "offset": 102
                      },
                      "end": {
                        "line": 3,
                        "column": 83,
                        "offset": 134
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ".)",
                    "position": {
                      "start": {
                        "line": 3,
                        "column": 83,
                        "offset": 134
                      },
                      "end": {
                        "line": 3,
                        "column": 85,
                        "offset": 136
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 3,
                    "column": 1,
                    "offset": 52
                  },
                  "end": {
                    "line": 3,
                    "column": 85,
                    "offset": 136
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 3,
                "column": 85,
                "offset": 136
              }
            }
          },
          "tags": [
            {
              "title": "memberof",
              "description": "statebotFsm",
              "lineNumber": 5
            },
            {
              "title": "instance",
              "description": null,
              "lineNumber": 6
            },
            {
              "title": "function",
              "description": null,
              "lineNumber": 7,
              "name": null
            },
            {
              "title": "param",
              "description": "The desired event to {@link #statebotfsmemit|.emit()}.",
              "lineNumber": 8,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "eventName"
            },
            {
              "title": "param",
              "description": "Arguments that will curry into the returned `emit()` function\n whenever it is called.",
              "lineNumber": 10,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "RestType",
                  "expression": {
                    "type": "AllLiteral"
                  }
                }
              },
              "name": "curriedArgs"
            },
            {
              "title": "returns",
              "description": "A function that emits that event.",
              "lineNumber": 13,
              "type": {
                "type": "NameExpression",
                "name": "function"
              }
            },
            {
              "title": "example",
              "description": "var machine = Statebot('traffic-lights', {\n  chart: `\n    go ->\n      prepare-to-stop ->\n      stop\n\n    // ...gotta keep that traffic flowing\n    stop ->\n      prepare-to-go ->\n      go\n  `,\n  startIn: 'stop'\n})\n\nmachine.performTransitions({\n  'stop -> prepare-to-go':   { on: 'timer' },\n  'prepare-to-go -> go':     { on: 'timer' },\n  'go -> prepare-to-stop':   { on: 'timer' },\n  'prepare-to-stop -> stop': { on: 'timer' }\n})\n\nvar nextTrafficLight = machine.Emit('timer')\nmachine.currentState()\n// \"stop\"\n\nnextTrafficLight()\nnextTrafficLight()\nnextTrafficLight()\n\nmachine.currentState()\n// \"prepare-to-stop\"",
              "lineNumber": 15
            }
          ],
          "loc": {
            "start": {
              "line": 776,
              "column": 4
            },
            "end": {
              "line": 823,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 824,
                "column": 4
              },
              "end": {
                "line": 824,
                "column": 14
              }
            },
            "file": "/Users/mostly/Local Projects/statebot/src/statebot.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "var machine = Statebot('traffic-lights', {\n  chart: `\n    go ->\n      prepare-to-stop ->\n      stop\n\n    // ...gotta keep that traffic flowing\n    stop ->\n      prepare-to-go ->\n      go\n  `,\n  startIn: 'stop'\n})\n\nmachine.performTransitions({\n  'stop -> prepare-to-go':   { on: 'timer' },\n  'prepare-to-go -> go':     { on: 'timer' },\n  'go -> prepare-to-stop':   { on: 'timer' },\n  'prepare-to-stop -> stop': { on: 'timer' }\n})\n\nvar nextTrafficLight = machine.Emit('timer')\nmachine.currentState()\n// \"stop\"\n\nnextTrafficLight()\nnextTrafficLight()\nnextTrafficLight()\n\nmachine.currentState()\n// \"prepare-to-stop\""
            }
          ],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "eventName",
              "lineNumber": 8,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The desired event to ",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 22,
                            "offset": 21
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "link",
                        "url": "#statebotfsmemit",
                        "title": null,
                        "jsdoc": true,
                        "children": [
                          {
                            "type": "text",
                            "value": ".emit()"
                          }
                        ],
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 22,
                            "offset": 21
                          },
                          "end": {
                            "line": 1,
                            "column": 54,
                            "offset": 53
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": ".",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 54,
                            "offset": 53
                          },
                          "end": {
                            "line": 1,
                            "column": 55,
                            "offset": 54
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 55,
                        "offset": 54
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 55,
                    "offset": 54
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "param",
              "name": "curriedArgs",
              "lineNumber": 10,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Arguments that will curry into the returned ",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 45,
                            "offset": 44
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "inlineCode",
                        "value": "emit()",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 45,
                            "offset": 44
                          },
                          "end": {
                            "line": 1,
                            "column": 53,
                            "offset": 52
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": " function\n whenever it is called.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 53,
                            "offset": 52
                          },
                          "end": {
                            "line": 2,
                            "column": 24,
                            "offset": 85
                          },
                          "indent": [
                            1
                          ]
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 2,
                        "column": 24,
                        "offset": 85
                      },
                      "indent": [
                        1
                      ]
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 2,
                    "column": 24,
                    "offset": 85
                  }
                }
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "RestType",
                  "expression": {
                    "type": "AllLiteral"
                  }
                }
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "A function that emits that event.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 34,
                            "offset": 33
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 34,
                        "offset": 33
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 34,
                    "offset": 33
                  }
                }
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "function"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "memberof": "statebotFsm",
          "scope": "instance",
          "kind": "function",
          "name": "Emit",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "statebotFsm",
              "kind": "typedef"
            },
            {
              "name": "Emit",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "statebotFsm#Emit"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Immediately changes to the specified state, so long as it is\naccessible from the ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 2,
                        "column": 21,
                        "offset": 81
                      },
                      "indent": [
                        1
                      ]
                    }
                  },
                  {
                    "type": "link",
                    "url": "#statebotfsmcurrentstate",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": ".currentState()"
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 2,
                        "column": 21,
                        "offset": 81
                      },
                      "end": {
                        "line": 2,
                        "column": 69,
                        "offset": 129
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ".",
                    "position": {
                      "start": {
                        "line": 2,
                        "column": 69,
                        "offset": 129
                      },
                      "end": {
                        "line": 2,
                        "column": 70,
                        "offset": 130
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 2,
                    "column": 70,
                    "offset": 130
                  },
                  "indent": [
                    1
                  ]
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 2,
                "column": 70,
                "offset": 130
              }
            }
          },
          "tags": [
            {
              "title": "memberof",
              "description": "statebotFsm",
              "lineNumber": 4
            },
            {
              "title": "instance",
              "description": null,
              "lineNumber": 5
            },
            {
              "title": "function",
              "description": null,
              "lineNumber": 6,
              "name": null
            },
            {
              "title": "param",
              "description": "The desired state to switch-to.",
              "lineNumber": 7,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "state"
            },
            {
              "title": "param",
              "description": "Optional arguments to pass to transition callbacks.",
              "lineNumber": 8,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "RestType",
                  "expression": {
                    "type": "AllLiteral"
                  }
                }
              },
              "name": "args"
            },
            {
              "title": "returns",
              "description": "Whether or not the state changed.",
              "lineNumber": 10,
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            },
            {
              "title": "example",
              "description": "var machine = Statebot('dialog', {\n  chart: `\n    idle -> showing-modal -> (saving | idle)\n      saving -> idle\n  `\n})\n\nmachine.currentState()\n// \"idle\"\n\nmachine.enter('saving')\n// false\n\n// [dialog]: Invalid transition \"idle->saving\", not switching\n// > Previous transition: \"[undefined]->idle\"\n// > From \"idle\", valid states are: [\"showing-modal\"]\n\nmachine.enter('showing-modal')\n// true",
              "lineNumber": 12
            }
          ],
          "loc": {
            "start": {
              "line": 826,
              "column": 4
            },
            "end": {
              "line": 858,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 859,
                "column": 4
              },
              "end": {
                "line": 859,
                "column": 16
              }
            },
            "file": "/Users/mostly/Local Projects/statebot/src/statebot.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "var machine = Statebot('dialog', {\n  chart: `\n    idle -> showing-modal -> (saving | idle)\n      saving -> idle\n  `\n})\n\nmachine.currentState()\n// \"idle\"\n\nmachine.enter('saving')\n// false\n\n// [dialog]: Invalid transition \"idle->saving\", not switching\n// > Previous transition: \"[undefined]->idle\"\n// > From \"idle\", valid states are: [\"showing-modal\"]\n\nmachine.enter('showing-modal')\n// true"
            }
          ],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "state",
              "lineNumber": 7,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The desired state to switch-to.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 32,
                            "offset": 31
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 32,
                        "offset": 31
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 32,
                    "offset": 31
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "param",
              "name": "args",
              "lineNumber": 8,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Optional arguments to pass to transition callbacks.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 52,
                            "offset": 51
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 52,
                        "offset": 51
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 52,
                    "offset": 51
                  }
                }
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "RestType",
                  "expression": {
                    "type": "AllLiteral"
                  }
                }
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Whether or not the state changed.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 34,
                            "offset": 33
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 34,
                        "offset": 33
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 34,
                    "offset": 33
                  }
                }
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "memberof": "statebotFsm",
          "scope": "instance",
          "kind": "function",
          "name": "enter",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "statebotFsm",
              "kind": "typedef"
            },
            {
              "name": "enter",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "statebotFsm#enter"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Creates a function that changes to the specified state, so long\nas it is accessible from the ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 2,
                        "column": 30,
                        "offset": 93
                      },
                      "indent": [
                        1
                      ]
                    }
                  },
                  {
                    "type": "link",
                    "url": "#statebotfsmcurrentstate",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": ".currentState()"
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 2,
                        "column": 30,
                        "offset": 93
                      },
                      "end": {
                        "line": 2,
                        "column": 78,
                        "offset": 141
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ".",
                    "position": {
                      "start": {
                        "line": 2,
                        "column": 78,
                        "offset": 141
                      },
                      "end": {
                        "line": 2,
                        "column": 79,
                        "offset": 142
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 2,
                    "column": 79,
                    "offset": 142
                  },
                  "indent": [
                    1
                  ]
                }
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "(This is essentially a convenience wrapper around ",
                    "position": {
                      "start": {
                        "line": 4,
                        "column": 1,
                        "offset": 144
                      },
                      "end": {
                        "line": 4,
                        "column": 51,
                        "offset": 194
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "link",
                    "url": "#statebotfsmenter",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": ".enter()"
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 4,
                        "column": 51,
                        "offset": 194
                      },
                      "end": {
                        "line": 4,
                        "column": 85,
                        "offset": 228
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ".)",
                    "position": {
                      "start": {
                        "line": 4,
                        "column": 85,
                        "offset": 228
                      },
                      "end": {
                        "line": 4,
                        "column": 87,
                        "offset": 230
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 4,
                    "column": 1,
                    "offset": 144
                  },
                  "end": {
                    "line": 4,
                    "column": 87,
                    "offset": 230
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 4,
                "column": 87,
                "offset": 230
              }
            }
          },
          "tags": [
            {
              "title": "memberof",
              "description": "statebotFsm",
              "lineNumber": 6
            },
            {
              "title": "instance",
              "description": null,
              "lineNumber": 7
            },
            {
              "title": "function",
              "description": null,
              "lineNumber": 8,
              "name": null
            },
            {
              "title": "param",
              "description": "The desired state to switch-to.",
              "lineNumber": 9,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "state"
            },
            {
              "title": "param",
              "description": "Arguments that will curry into the returned `enter()` function\n whenever it is called.",
              "lineNumber": 10,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "RestType",
                  "expression": {
                    "type": "AllLiteral"
                  }
                }
              },
              "name": "curriedArgs"
            },
            {
              "title": "returns",
              "description": "A function that can change the state when called.",
              "lineNumber": 13,
              "type": {
                "type": "NameExpression",
                "name": "function"
              }
            },
            {
              "title": "example",
              "description": "var machine = Statebot('popup-menu', {\n  chart: `\n    idle -> menu-opened ->\n      (item-clicked | idle)\n\n    item-clicked -> idle\n  `,\n  startIn: 'menu-opened'\n})\n\nbutton.onclick = machine.Enter('item-clicked')\nmachine.currentState()\n// \"menu-opened\"\n\nbutton.onclick()\nmachine.currentState()\n// \"item-clicked\"",
              "lineNumber": 16
            }
          ],
          "loc": {
            "start": {
              "line": 861,
              "column": 4
            },
            "end": {
              "line": 895,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 896,
                "column": 4
              },
              "end": {
                "line": 896,
                "column": 16
              }
            },
            "file": "/Users/mostly/Local Projects/statebot/src/statebot.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "var machine = Statebot('popup-menu', {\n  chart: `\n    idle -> menu-opened ->\n      (item-clicked | idle)\n\n    item-clicked -> idle\n  `,\n  startIn: 'menu-opened'\n})\n\nbutton.onclick = machine.Enter('item-clicked')\nmachine.currentState()\n// \"menu-opened\"\n\nbutton.onclick()\nmachine.currentState()\n// \"item-clicked\""
            }
          ],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "state",
              "lineNumber": 9,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The desired state to switch-to.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 32,
                            "offset": 31
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 32,
                        "offset": 31
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 32,
                    "offset": 31
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "param",
              "name": "curriedArgs",
              "lineNumber": 10,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Arguments that will curry into the returned ",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 45,
                            "offset": 44
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "inlineCode",
                        "value": "enter()",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 45,
                            "offset": 44
                          },
                          "end": {
                            "line": 1,
                            "column": 54,
                            "offset": 53
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": " function\n whenever it is called.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 54,
                            "offset": 53
                          },
                          "end": {
                            "line": 2,
                            "column": 24,
                            "offset": 86
                          },
                          "indent": [
                            1
                          ]
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 2,
                        "column": 24,
                        "offset": 86
                      },
                      "indent": [
                        1
                      ]
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 2,
                    "column": 24,
                    "offset": 86
                  }
                }
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "RestType",
                  "expression": {
                    "type": "AllLiteral"
                  }
                }
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "A function that can change the state when called.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 50,
                            "offset": 49
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 50,
                        "offset": 49
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 50,
                    "offset": 49
                  }
                }
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "function"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "memberof": "statebotFsm",
          "scope": "instance",
          "kind": "function",
          "name": "Enter",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "statebotFsm",
              "kind": "typedef"
            },
            {
              "name": "Enter",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "statebotFsm#Enter"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Returns all states the machine has been in so far, up to a limit set\nby ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 2,
                        "column": 4,
                        "offset": 72
                      },
                      "indent": [
                        1
                      ]
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "historyLimit",
                    "position": {
                      "start": {
                        "line": 2,
                        "column": 4,
                        "offset": 72
                      },
                      "end": {
                        "line": 2,
                        "column": 18,
                        "offset": 86
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " in ",
                    "position": {
                      "start": {
                        "line": 2,
                        "column": 18,
                        "offset": 86
                      },
                      "end": {
                        "line": 2,
                        "column": 22,
                        "offset": 90
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "link",
                    "url": "statebotOptions",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "statebotOptions"
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 2,
                        "column": 22,
                        "offset": 90
                      },
                      "end": {
                        "line": 2,
                        "column": 45,
                        "offset": 113
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ".",
                    "position": {
                      "start": {
                        "line": 2,
                        "column": 45,
                        "offset": 113
                      },
                      "end": {
                        "line": 2,
                        "column": 46,
                        "offset": 114
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 2,
                    "column": 46,
                    "offset": 114
                  },
                  "indent": [
                    1
                  ]
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 2,
                "column": 46,
                "offset": 114
              }
            }
          },
          "tags": [
            {
              "title": "memberof",
              "description": "statebotFsm",
              "lineNumber": 4
            },
            {
              "title": "instance",
              "description": null,
              "lineNumber": 5
            },
            {
              "title": "function",
              "description": null,
              "lineNumber": 6,
              "name": null
            },
            {
              "title": "returns",
              "description": "A copy of the state-history.",
              "lineNumber": 7,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "string"
                  }
                ]
              }
            },
            {
              "title": "example",
              "description": "var machine = Statebot('downloader', {\n  chart: `\n    loading -> (failure | success)\n      failure -> loading\n      success -> done\n  `,\n  historyLimit: 4\n})\n\nmachine.enter('failure')\nmachine.enter('loading')\nmachine.enter('success')\nmachine.enter('done')\nmachine.history()\n// [\"failure\", \"loading\", \"success\", \"done\"]",
              "lineNumber": 9
            }
          ],
          "loc": {
            "start": {
              "line": 898,
              "column": 4
            },
            "end": {
              "line": 923,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 924,
                "column": 4
              },
              "end": {
                "line": 924,
                "column": 36
              }
            },
            "file": "/Users/mostly/Local Projects/statebot/src/statebot.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "var machine = Statebot('downloader', {\n  chart: `\n    loading -> (failure | success)\n      failure -> loading\n      success -> done\n  `,\n  historyLimit: 4\n})\n\nmachine.enter('failure')\nmachine.enter('loading')\nmachine.enter('success')\nmachine.enter('done')\nmachine.history()\n// [\"failure\", \"loading\", \"success\", \"done\"]"
            }
          ],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "A copy of the state-history.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 29,
                            "offset": 28
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 29,
                        "offset": 28
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 29,
                    "offset": 28
                  }
                }
              },
              "title": "returns",
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "string"
                  }
                ]
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "memberof": "statebotFsm",
          "scope": "instance",
          "kind": "function",
          "name": "history",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "statebotFsm",
              "kind": "typedef"
            },
            {
              "name": "history",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "statebotFsm#history"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Print information about the current machine to the console.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 60,
                        "offset": 59
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 60,
                    "offset": 59
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 60,
                "offset": 59
              }
            }
          },
          "tags": [
            {
              "title": "memberof",
              "description": "statebotFsm",
              "lineNumber": 3
            },
            {
              "title": "instance",
              "description": null,
              "lineNumber": 4
            },
            {
              "title": "example",
              "description": "var machine = Statebot('half-duplex', {\n  chart: `\n    idle -> sending | receiving -> done\n  `\n})\n\nmachine.info()\n// [half-duplex]: Information about this state-machine.\n// [half-duplex]: Listening for the following state-changes:\n// ┌─────────┬─────────────┬────────┐\n// │ (index) │   states    │   #    │\n// ├─────────┼─────────────┼────────┤\n// │    0    │   'done'    │ 'None' │\n// │    1    │   'idle'    │ 'None' │\n// │    2    │ 'receiving' │ 'None' │\n// │    3    │  'sending'  │ 'None' │\n// └─────────┴─────────────┴────────┘\n// [half-duplex] Listening for the following transitions:\n// ┌─────────┬───────────────────┬────────┐\n// │ (index) │    transitions    │   #    │\n// ├─────────┼───────────────────┼────────┤\n// │    0    │ 'idle->receiving' │ 'None' │\n// │    1    │  'idle->sending'  │ 'None' │\n// │    2    │ 'receiving->done' │ 'None' │\n// │    3    │  'sending->done'  │ 'None' │\n// └─────────┴───────────────────┴────────┘\n// [half-duplex]: Listening for the following events:\n// (No information)",
              "lineNumber": 5
            }
          ],
          "loc": {
            "start": {
              "line": 926,
              "column": 4
            },
            "end": {
              "line": 960,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 961,
                "column": 4
              },
              "end": {
                "line": 961,
                "column": 22
              }
            },
            "file": "/Users/mostly/Local Projects/statebot/src/statebot.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "var machine = Statebot('half-duplex', {\n  chart: `\n    idle -> sending | receiving -> done\n  `\n})\n\nmachine.info()\n// [half-duplex]: Information about this state-machine.\n// [half-duplex]: Listening for the following state-changes:\n// ┌─────────┬─────────────┬────────┐\n// │ (index) │   states    │   #    │\n// ├─────────┼─────────────┼────────┤\n// │    0    │   'done'    │ 'None' │\n// │    1    │   'idle'    │ 'None' │\n// │    2    │ 'receiving' │ 'None' │\n// │    3    │  'sending'  │ 'None' │\n// └─────────┴─────────────┴────────┘\n// [half-duplex] Listening for the following transitions:\n// ┌─────────┬───────────────────┬────────┐\n// │ (index) │    transitions    │   #    │\n// ├─────────┼───────────────────┼────────┤\n// │    0    │ 'idle->receiving' │ 'None' │\n// │    1    │  'idle->sending'  │ 'None' │\n// │    2    │ 'receiving->done' │ 'None' │\n// │    3    │  'sending->done'  │ 'None' │\n// └─────────┴───────────────────┴────────┘\n// [half-duplex]: Listening for the following events:\n// (No information)"
            }
          ],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "memberof": "statebotFsm",
          "scope": "instance",
          "name": "info",
          "kind": "function",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "statebotFsm",
              "kind": "typedef"
            },
            {
              "name": "info",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "statebotFsm#info"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get information about the current machine.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 43,
                        "offset": 42
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 43,
                    "offset": 42
                  },
                  "indent": []
                }
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Same details as ",
                    "position": {
                      "start": {
                        "line": 3,
                        "column": 1,
                        "offset": 44
                      },
                      "end": {
                        "line": 3,
                        "column": 17,
                        "offset": 60
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "link",
                    "url": "#statebotfsminfo",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": ".info()"
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 3,
                        "column": 17,
                        "offset": 60
                      },
                      "end": {
                        "line": 3,
                        "column": 49,
                        "offset": 92
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " in object-form.",
                    "position": {
                      "start": {
                        "line": 3,
                        "column": 49,
                        "offset": 92
                      },
                      "end": {
                        "line": 3,
                        "column": 65,
                        "offset": 108
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 3,
                    "column": 1,
                    "offset": 44
                  },
                  "end": {
                    "line": 3,
                    "column": 65,
                    "offset": 108
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 3,
                "column": 65,
                "offset": 108
              }
            }
          },
          "tags": [
            {
              "title": "memberof",
              "description": "statebotFsm",
              "lineNumber": 5
            },
            {
              "title": "instance",
              "description": null,
              "lineNumber": 6
            },
            {
              "title": "returns",
              "description": null,
              "lineNumber": 7,
              "type": {
                "type": "NameExpression",
                "name": "object"
              }
            },
            {
              "title": "example",
              "description": "var machine = Statebot('half-duplex', {\n  chart: `\n    idle -> sending | receiving -> done\n  `\n})\n\nmachine.inspect()\n// Will return an object with the following signature:\n//  { states, transitions, events }\n\n// These will each have key-values, the key being the name\n// and the value being the number of listeners attached.",
              "lineNumber": 8
            }
          ],
          "loc": {
            "start": {
              "line": 963,
              "column": 4
            },
            "end": {
              "line": 984,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 985,
                "column": 4
              },
              "end": {
                "line": 985,
                "column": 28
              }
            },
            "file": "/Users/mostly/Local Projects/statebot/src/statebot.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "var machine = Statebot('half-duplex', {\n  chart: `\n    idle -> sending | receiving -> done\n  `\n})\n\nmachine.inspect()\n// Will return an object with the following signature:\n//  { states, transitions, events }\n\n// These will each have key-values, the key being the name\n// and the value being the number of listeners attached."
            }
          ],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  }
                }
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "object"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "memberof": "statebotFsm",
          "scope": "instance",
          "name": "inspect",
          "kind": "function",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "statebotFsm",
              "kind": "typedef"
            },
            {
              "name": "inspect",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "statebotFsm#inspect"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Checks if the ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 15,
                        "offset": 14
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "link",
                    "url": "#statebotfsmcurrentstate",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": ".currentState()"
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 15,
                        "offset": 14
                      },
                      "end": {
                        "line": 1,
                        "column": 63,
                        "offset": 62
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": "\nmatches the specified ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 63,
                        "offset": 62
                      },
                      "end": {
                        "line": 2,
                        "column": 23,
                        "offset": 85
                      },
                      "indent": [
                        1
                      ]
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "state",
                    "position": {
                      "start": {
                        "line": 2,
                        "column": 23,
                        "offset": 85
                      },
                      "end": {
                        "line": 2,
                        "column": 30,
                        "offset": 92
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ", immediately returning either\n",
                    "position": {
                      "start": {
                        "line": 2,
                        "column": 30,
                        "offset": 92
                      },
                      "end": {
                        "line": 3,
                        "column": 1,
                        "offset": 123
                      },
                      "indent": [
                        1
                      ]
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "true",
                    "position": {
                      "start": {
                        "line": 3,
                        "column": 1,
                        "offset": 123
                      },
                      "end": {
                        "line": 3,
                        "column": 7,
                        "offset": 129
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " or ",
                    "position": {
                      "start": {
                        "line": 3,
                        "column": 7,
                        "offset": 129
                      },
                      "end": {
                        "line": 3,
                        "column": 11,
                        "offset": 133
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "false",
                    "position": {
                      "start": {
                        "line": 3,
                        "column": 11,
                        "offset": 133
                      },
                      "end": {
                        "line": 3,
                        "column": 18,
                        "offset": 140
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ".",
                    "position": {
                      "start": {
                        "line": 3,
                        "column": 18,
                        "offset": 140
                      },
                      "end": {
                        "line": 3,
                        "column": 19,
                        "offset": 141
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 3,
                    "column": 19,
                    "offset": 141
                  },
                  "indent": [
                    1,
                    1
                  ]
                }
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "If ",
                    "position": {
                      "start": {
                        "line": 5,
                        "column": 1,
                        "offset": 143
                      },
                      "end": {
                        "line": 5,
                        "column": 4,
                        "offset": 146
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "outputWhenTrue",
                    "position": {
                      "start": {
                        "line": 5,
                        "column": 4,
                        "offset": 146
                      },
                      "end": {
                        "line": 5,
                        "column": 20,
                        "offset": 162
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " is specified, then it will be returned\ninstead of ",
                    "position": {
                      "start": {
                        "line": 5,
                        "column": 20,
                        "offset": 162
                      },
                      "end": {
                        "line": 6,
                        "column": 12,
                        "offset": 213
                      },
                      "indent": [
                        1
                      ]
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "true",
                    "position": {
                      "start": {
                        "line": 6,
                        "column": 12,
                        "offset": 213
                      },
                      "end": {
                        "line": 6,
                        "column": 18,
                        "offset": 219
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ", and ",
                    "position": {
                      "start": {
                        "line": 6,
                        "column": 18,
                        "offset": 219
                      },
                      "end": {
                        "line": 6,
                        "column": 24,
                        "offset": 225
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "null",
                    "position": {
                      "start": {
                        "line": 6,
                        "column": 24,
                        "offset": 225
                      },
                      "end": {
                        "line": 6,
                        "column": 30,
                        "offset": 231
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " will be returned instead of\n ",
                    "position": {
                      "start": {
                        "line": 6,
                        "column": 30,
                        "offset": 231
                      },
                      "end": {
                        "line": 7,
                        "column": 2,
                        "offset": 261
                      },
                      "indent": [
                        1
                      ]
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "false",
                    "position": {
                      "start": {
                        "line": 7,
                        "column": 2,
                        "offset": 261
                      },
                      "end": {
                        "line": 7,
                        "column": 9,
                        "offset": 268
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ".",
                    "position": {
                      "start": {
                        "line": 7,
                        "column": 9,
                        "offset": 268
                      },
                      "end": {
                        "line": 7,
                        "column": 10,
                        "offset": 269
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 5,
                    "column": 1,
                    "offset": 143
                  },
                  "end": {
                    "line": 7,
                    "column": 10,
                    "offset": 269
                  },
                  "indent": [
                    1,
                    1
                  ]
                }
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "If a function is specified, then its return-value will be used\nas the ",
                    "position": {
                      "start": {
                        "line": 9,
                        "column": 1,
                        "offset": 271
                      },
                      "end": {
                        "line": 10,
                        "column": 8,
                        "offset": 341
                      },
                      "indent": [
                        1
                      ]
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "true",
                    "position": {
                      "start": {
                        "line": 10,
                        "column": 8,
                        "offset": 341
                      },
                      "end": {
                        "line": 10,
                        "column": 14,
                        "offset": 347
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": "-value.",
                    "position": {
                      "start": {
                        "line": 10,
                        "column": 14,
                        "offset": 347
                      },
                      "end": {
                        "line": 10,
                        "column": 21,
                        "offset": 354
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 9,
                    "column": 1,
                    "offset": 271
                  },
                  "end": {
                    "line": 10,
                    "column": 21,
                    "offset": 354
                  },
                  "indent": [
                    1
                  ]
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 10,
                "column": 21,
                "offset": 354
              }
            }
          },
          "tags": [
            {
              "title": "memberof",
              "description": "statebotFsm",
              "lineNumber": 12
            },
            {
              "title": "instance",
              "description": null,
              "lineNumber": 13
            },
            {
              "title": "function",
              "description": null,
              "lineNumber": 14,
              "name": null
            },
            {
              "title": "param",
              "description": "The state to test against.",
              "lineNumber": 15,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "state"
            },
            {
              "title": "param",
              "description": "Optional `true`-value. If a function is specified, it will be\n called and its return value will be used.",
              "lineNumber": 16,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "UnionType",
                  "elements": [
                    {
                      "type": "NameExpression",
                      "name": "any"
                    },
                    {
                      "type": "NameExpression",
                      "name": "function"
                    }
                  ]
                }
              },
              "name": "outputWhenTrue"
            },
            {
              "title": "param",
              "description": "Arguments that will pass into `outputWhenTrue()` if it has\n been defined as a function.",
              "lineNumber": 19,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "RestType",
                  "expression": {
                    "type": "AllLiteral"
                  }
                }
              },
              "name": "fnArgs"
            },
            {
              "title": "returns",
              "description": null,
              "lineNumber": 22,
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "boolean"
                  },
                  {
                    "type": "NullLiteral"
                  },
                  {
                    "type": "AllLiteral"
                  }
                ]
              }
            },
            {
              "title": "example",
              "description": "var machine = Statebot('little-revver', {\n  chart: `\n    idle ->\n      (gear-1 | gear-2 | reverse) ->\n    idle\n  `\n})\n\nmachine.inState('idle')\n// true\n\nmachine.inState('idle', 'Purrrr...')\n// \"Purrrr...\"\n\nmachine.enter('gear-1')\nmachine.inState('idle', () => {\n  console.log('Idling!')\n  return 'Purrrr...'\n})\n// null\n// ^ the function is not called at all in the `false` case,\n//   so no console.log either.",
              "lineNumber": 24
            }
          ],
          "loc": {
            "start": {
              "line": 987,
              "column": 4
            },
            "end": {
              "line": 1034,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 1035,
                "column": 4
              },
              "end": {
                "line": 1035,
                "column": 20
              }
            },
            "file": "/Users/mostly/Local Projects/statebot/src/statebot.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "var machine = Statebot('little-revver', {\n  chart: `\n    idle ->\n      (gear-1 | gear-2 | reverse) ->\n    idle\n  `\n})\n\nmachine.inState('idle')\n// true\n\nmachine.inState('idle', 'Purrrr...')\n// \"Purrrr...\"\n\nmachine.enter('gear-1')\nmachine.inState('idle', () => {\n  console.log('Idling!')\n  return 'Purrrr...'\n})\n// null\n// ^ the function is not called at all in the `false` case,\n//   so no console.log either."
            }
          ],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "state",
              "lineNumber": 15,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The state to test against.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 27,
                            "offset": 26
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 27,
                        "offset": 26
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 27,
                    "offset": 26
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "param",
              "name": "outputWhenTrue",
              "lineNumber": 16,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Optional ",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 10,
                            "offset": 9
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "inlineCode",
                        "value": "true",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 10,
                            "offset": 9
                          },
                          "end": {
                            "line": 1,
                            "column": 16,
                            "offset": 15
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": "-value. If a function is specified, it will be\n called and its return value will be used.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 16,
                            "offset": 15
                          },
                          "end": {
                            "line": 2,
                            "column": 43,
                            "offset": 104
                          },
                          "indent": [
                            1
                          ]
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 2,
                        "column": 43,
                        "offset": 104
                      },
                      "indent": [
                        1
                      ]
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 2,
                    "column": 43,
                    "offset": 104
                  }
                }
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "UnionType",
                  "elements": [
                    {
                      "type": "NameExpression",
                      "name": "any"
                    },
                    {
                      "type": "NameExpression",
                      "name": "function"
                    }
                  ]
                }
              }
            },
            {
              "title": "param",
              "name": "fnArgs",
              "lineNumber": 19,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Arguments that will pass into ",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 31,
                            "offset": 30
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "inlineCode",
                        "value": "outputWhenTrue()",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 31,
                            "offset": 30
                          },
                          "end": {
                            "line": 1,
                            "column": 49,
                            "offset": 48
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": " if it has\n been defined as a function.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 49,
                            "offset": 48
                          },
                          "end": {
                            "line": 2,
                            "column": 29,
                            "offset": 87
                          },
                          "indent": [
                            1
                          ]
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 2,
                        "column": 29,
                        "offset": 87
                      },
                      "indent": [
                        1
                      ]
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 2,
                    "column": 29,
                    "offset": 87
                  }
                }
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "RestType",
                  "expression": {
                    "type": "AllLiteral"
                  }
                }
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  }
                }
              },
              "title": "returns",
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "boolean"
                  },
                  {
                    "type": "NullLiteral"
                  },
                  {
                    "type": "AllLiteral"
                  }
                ]
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "memberof": "statebotFsm",
          "scope": "instance",
          "kind": "function",
          "name": "inState",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "statebotFsm",
              "kind": "typedef"
            },
            {
              "name": "inState",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "statebotFsm#inState"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Returns a function which, when run, tests that\n",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 2,
                        "column": 1,
                        "offset": 47
                      },
                      "indent": [
                        1
                      ]
                    }
                  },
                  {
                    "type": "link",
                    "url": "#statebotfsmcurrentstate",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": ".currentState()"
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 2,
                        "column": 1,
                        "offset": 47
                      },
                      "end": {
                        "line": 2,
                        "column": 49,
                        "offset": 95
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " matches the\nspecified state, returning either ",
                    "position": {
                      "start": {
                        "line": 2,
                        "column": 49,
                        "offset": 95
                      },
                      "end": {
                        "line": 3,
                        "column": 35,
                        "offset": 142
                      },
                      "indent": [
                        1
                      ]
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "true",
                    "position": {
                      "start": {
                        "line": 3,
                        "column": 35,
                        "offset": 142
                      },
                      "end": {
                        "line": 3,
                        "column": 41,
                        "offset": 148
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " or ",
                    "position": {
                      "start": {
                        "line": 3,
                        "column": 41,
                        "offset": 148
                      },
                      "end": {
                        "line": 3,
                        "column": 45,
                        "offset": 152
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "false",
                    "position": {
                      "start": {
                        "line": 3,
                        "column": 45,
                        "offset": 152
                      },
                      "end": {
                        "line": 3,
                        "column": 52,
                        "offset": 159
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ".",
                    "position": {
                      "start": {
                        "line": 3,
                        "column": 52,
                        "offset": 159
                      },
                      "end": {
                        "line": 3,
                        "column": 53,
                        "offset": 160
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 3,
                    "column": 53,
                    "offset": 160
                  },
                  "indent": [
                    1,
                    1
                  ]
                }
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "If ",
                    "position": {
                      "start": {
                        "line": 5,
                        "column": 1,
                        "offset": 162
                      },
                      "end": {
                        "line": 5,
                        "column": 4,
                        "offset": 165
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "outputWhenTrue",
                    "position": {
                      "start": {
                        "line": 5,
                        "column": 4,
                        "offset": 165
                      },
                      "end": {
                        "line": 5,
                        "column": 20,
                        "offset": 181
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " is specified, then it will be returned\ninstead of ",
                    "position": {
                      "start": {
                        "line": 5,
                        "column": 20,
                        "offset": 181
                      },
                      "end": {
                        "line": 6,
                        "column": 12,
                        "offset": 232
                      },
                      "indent": [
                        1
                      ]
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "true",
                    "position": {
                      "start": {
                        "line": 6,
                        "column": 12,
                        "offset": 232
                      },
                      "end": {
                        "line": 6,
                        "column": 18,
                        "offset": 238
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ", and ",
                    "position": {
                      "start": {
                        "line": 6,
                        "column": 18,
                        "offset": 238
                      },
                      "end": {
                        "line": 6,
                        "column": 24,
                        "offset": 244
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "null",
                    "position": {
                      "start": {
                        "line": 6,
                        "column": 24,
                        "offset": 244
                      },
                      "end": {
                        "line": 6,
                        "column": 30,
                        "offset": 250
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " will be returned instead of\n ",
                    "position": {
                      "start": {
                        "line": 6,
                        "column": 30,
                        "offset": 250
                      },
                      "end": {
                        "line": 7,
                        "column": 2,
                        "offset": 280
                      },
                      "indent": [
                        1
                      ]
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "false",
                    "position": {
                      "start": {
                        "line": 7,
                        "column": 2,
                        "offset": 280
                      },
                      "end": {
                        "line": 7,
                        "column": 9,
                        "offset": 287
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ".",
                    "position": {
                      "start": {
                        "line": 7,
                        "column": 9,
                        "offset": 287
                      },
                      "end": {
                        "line": 7,
                        "column": 10,
                        "offset": 288
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 5,
                    "column": 1,
                    "offset": 162
                  },
                  "end": {
                    "line": 7,
                    "column": 10,
                    "offset": 288
                  },
                  "indent": [
                    1,
                    1
                  ]
                }
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "(This is essentially a convenience wrapper around ",
                    "position": {
                      "start": {
                        "line": 9,
                        "column": 1,
                        "offset": 290
                      },
                      "end": {
                        "line": 9,
                        "column": 51,
                        "offset": 340
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "link",
                    "url": "#statebotfsminstate",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": ".inState()"
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 9,
                        "column": 51,
                        "offset": 340
                      },
                      "end": {
                        "line": 9,
                        "column": 89,
                        "offset": 378
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ".)",
                    "position": {
                      "start": {
                        "line": 9,
                        "column": 89,
                        "offset": 378
                      },
                      "end": {
                        "line": 9,
                        "column": 91,
                        "offset": 380
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 9,
                    "column": 1,
                    "offset": 290
                  },
                  "end": {
                    "line": 9,
                    "column": 91,
                    "offset": 380
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 9,
                "column": 91,
                "offset": 380
              }
            }
          },
          "tags": [
            {
              "title": "memberof",
              "description": "statebotFsm",
              "lineNumber": 11
            },
            {
              "title": "instance",
              "description": null,
              "lineNumber": 12
            },
            {
              "title": "function",
              "description": null,
              "lineNumber": 13,
              "name": null
            },
            {
              "title": "param",
              "description": "The state to test against.",
              "lineNumber": 14,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "state"
            },
            {
              "title": "param",
              "description": "Optional `true`-value. If a function is specified, it will be\n called and its return value will be used.",
              "lineNumber": 15,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "UnionType",
                  "elements": [
                    {
                      "type": "NameExpression",
                      "name": "any"
                    },
                    {
                      "type": "NameExpression",
                      "name": "function"
                    }
                  ]
                }
              },
              "name": "outputWhenTrue"
            },
            {
              "title": "param",
              "description": "Arguments that will curry into `outputWhenTrue()` if it has\n been defined as a function.",
              "lineNumber": 18,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "RestType",
                  "expression": {
                    "type": "AllLiteral"
                  }
                }
              },
              "name": "curriedFnArgs"
            },
            {
              "title": "returns",
              "description": "A function that calls {@link #statebotfsminstate|.inState()}.",
              "lineNumber": 21,
              "type": {
                "type": "NameExpression",
                "name": "function"
              }
            },
            {
              "title": "example",
              "description": "var machine = Statebot('little-revver', {\n  chart: `\n    idle ->\n      (gear-1 | gear-2 | reverse) ->\n    idle\n  `\n})\n\nvar idling = machine.InState('idle')\nvar purring = machine.InState('idle', () => {\n  console.log('Idling!')\n  return 'Purrrr...'\n})\n\nidling()\n// true\n\npurring()\n// Idling!\n// \"Purrrr...\"\n\nmachine.enter('gear-1')\npurring()\n// null\n// ^ the function is not called at all in the `false` case,\n//   so no console.log either.",
              "lineNumber": 24
            }
          ],
          "loc": {
            "start": {
              "line": 1037,
              "column": 4
            },
            "end": {
              "line": 1088,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 1089,
                "column": 4
              },
              "end": {
                "line": 1089,
                "column": 20
              }
            },
            "file": "/Users/mostly/Local Projects/statebot/src/statebot.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "var machine = Statebot('little-revver', {\n  chart: `\n    idle ->\n      (gear-1 | gear-2 | reverse) ->\n    idle\n  `\n})\n\nvar idling = machine.InState('idle')\nvar purring = machine.InState('idle', () => {\n  console.log('Idling!')\n  return 'Purrrr...'\n})\n\nidling()\n// true\n\npurring()\n// Idling!\n// \"Purrrr...\"\n\nmachine.enter('gear-1')\npurring()\n// null\n// ^ the function is not called at all in the `false` case,\n//   so no console.log either."
            }
          ],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "state",
              "lineNumber": 14,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The state to test against.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 27,
                            "offset": 26
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 27,
                        "offset": 26
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 27,
                    "offset": 26
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "param",
              "name": "outputWhenTrue",
              "lineNumber": 15,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Optional ",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 10,
                            "offset": 9
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "inlineCode",
                        "value": "true",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 10,
                            "offset": 9
                          },
                          "end": {
                            "line": 1,
                            "column": 16,
                            "offset": 15
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": "-value. If a function is specified, it will be\n called and its return value will be used.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 16,
                            "offset": 15
                          },
                          "end": {
                            "line": 2,
                            "column": 43,
                            "offset": 104
                          },
                          "indent": [
                            1
                          ]
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 2,
                        "column": 43,
                        "offset": 104
                      },
                      "indent": [
                        1
                      ]
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 2,
                    "column": 43,
                    "offset": 104
                  }
                }
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "UnionType",
                  "elements": [
                    {
                      "type": "NameExpression",
                      "name": "any"
                    },
                    {
                      "type": "NameExpression",
                      "name": "function"
                    }
                  ]
                }
              }
            },
            {
              "title": "param",
              "name": "curriedFnArgs",
              "lineNumber": 18,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Arguments that will curry into ",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 32,
                            "offset": 31
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "inlineCode",
                        "value": "outputWhenTrue()",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 32,
                            "offset": 31
                          },
                          "end": {
                            "line": 1,
                            "column": 50,
                            "offset": 49
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": " if it has\n been defined as a function.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 50,
                            "offset": 49
                          },
                          "end": {
                            "line": 2,
                            "column": 29,
                            "offset": 88
                          },
                          "indent": [
                            1
                          ]
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 2,
                        "column": 29,
                        "offset": 88
                      },
                      "indent": [
                        1
                      ]
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 2,
                    "column": 29,
                    "offset": 88
                  }
                }
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "RestType",
                  "expression": {
                    "type": "AllLiteral"
                  }
                }
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "A function that calls ",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 23,
                            "offset": 22
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "link",
                        "url": "#statebotfsminstate",
                        "title": null,
                        "jsdoc": true,
                        "children": [
                          {
                            "type": "text",
                            "value": ".inState()"
                          }
                        ],
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 23,
                            "offset": 22
                          },
                          "end": {
                            "line": 1,
                            "column": 61,
                            "offset": 60
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": ".",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 61,
                            "offset": 60
                          },
                          "end": {
                            "line": 1,
                            "column": 62,
                            "offset": 61
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 62,
                        "offset": 61
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 62,
                    "offset": 61
                  }
                }
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "function"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "memberof": "statebotFsm",
          "scope": "instance",
          "kind": "function",
          "name": "InState",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "statebotFsm",
              "kind": "typedef"
            },
            {
              "name": "InState",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "statebotFsm#InState"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Returns the name of the state-machine.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 39,
                        "offset": 38
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 39,
                    "offset": 38
                  },
                  "indent": []
                }
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Used for logging and also by ",
                    "position": {
                      "start": {
                        "line": 3,
                        "column": 1,
                        "offset": 40
                      },
                      "end": {
                        "line": 3,
                        "column": 30,
                        "offset": 69
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "link",
                    "url": "#statebotassertroute",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "assertRoute()"
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 3,
                        "column": 30,
                        "offset": 69
                      },
                      "end": {
                        "line": 3,
                        "column": 72,
                        "offset": 111
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": "\nfor the same.",
                    "position": {
                      "start": {
                        "line": 3,
                        "column": 72,
                        "offset": 111
                      },
                      "end": {
                        "line": 4,
                        "column": 14,
                        "offset": 125
                      },
                      "indent": [
                        1
                      ]
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 3,
                    "column": 1,
                    "offset": 40
                  },
                  "end": {
                    "line": 4,
                    "column": 14,
                    "offset": 125
                  },
                  "indent": [
                    1
                  ]
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 4,
                "column": 14,
                "offset": 125
              }
            }
          },
          "tags": [
            {
              "title": "memberof",
              "description": "statebotFsm",
              "lineNumber": 6
            },
            {
              "title": "instance",
              "description": null,
              "lineNumber": 7
            },
            {
              "title": "function",
              "description": null,
              "lineNumber": 8,
              "name": null
            },
            {
              "title": "returns",
              "description": "The name of the state-machine.",
              "lineNumber": 9,
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "example",
              "description": "var machine = Statebot('Ay, there’s the rub.', {\n  chart: `\n    the-question -> (to-be | not-to-be)\n      not-to-be -> perchance-to-dream\n  `\n})\n\nmachine.name()\n// \"Ay, there’s the rub.\"",
              "lineNumber": 11
            }
          ],
          "loc": {
            "start": {
              "line": 1091,
              "column": 4
            },
            "end": {
              "line": 1112,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 1113,
                "column": 4
              },
              "end": {
                "line": 1113,
                "column": 20
              }
            },
            "file": "/Users/mostly/Local Projects/statebot/src/statebot.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "var machine = Statebot('Ay, there’s the rub.', {\n  chart: `\n    the-question -> (to-be | not-to-be)\n      not-to-be -> perchance-to-dream\n  `\n})\n\nmachine.name()\n// \"Ay, there’s the rub.\""
            }
          ],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The name of the state-machine.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 31,
                            "offset": 30
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 31,
                        "offset": 30
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 31,
                    "offset": 30
                  }
                }
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "memberof": "statebotFsm",
          "scope": "instance",
          "kind": "function",
          "name": "name",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "statebotFsm",
              "kind": "typedef"
            },
            {
              "name": "name",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "statebotFsm#name"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Adds a listener that runs a callback immediately ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 50,
                        "offset": 49
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "strong",
                    "children": [
                      {
                        "type": "text",
                        "value": "AFTER",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 52,
                            "offset": 51
                          },
                          "end": {
                            "line": 1,
                            "column": 57,
                            "offset": 56
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 50,
                        "offset": 49
                      },
                      "end": {
                        "line": 1,
                        "column": 59,
                        "offset": 58
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " the\nspecified-state becomes the current one.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 59,
                        "offset": 58
                      },
                      "end": {
                        "line": 2,
                        "column": 41,
                        "offset": 103
                      },
                      "indent": [
                        1
                      ]
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 2,
                    "column": 41,
                    "offset": 103
                  },
                  "indent": [
                    1
                  ]
                }
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "A function is returned that will remove the listener.",
                    "position": {
                      "start": {
                        "line": 4,
                        "column": 1,
                        "offset": 105
                      },
                      "end": {
                        "line": 4,
                        "column": 54,
                        "offset": 158
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 4,
                    "column": 1,
                    "offset": 105
                  },
                  "end": {
                    "line": 4,
                    "column": 54,
                    "offset": 158
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 4,
                "column": 54,
                "offset": 158
              }
            }
          },
          "tags": [
            {
              "title": "memberof",
              "description": "statebotFsm",
              "lineNumber": 6
            },
            {
              "title": "instance",
              "description": null,
              "lineNumber": 7
            },
            {
              "title": "function",
              "description": null,
              "lineNumber": 8,
              "name": null
            },
            {
              "title": "param",
              "description": "The state.",
              "lineNumber": 9,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "state"
            },
            {
              "title": "param",
              "description": "A callback function with the signature:\n\n `(fromState, ...args?)`",
              "lineNumber": 10,
              "type": {
                "type": "NameExpression",
                "name": "enterCallback"
              },
              "name": "cb"
            },
            {
              "title": "returns",
              "description": "A function that removes the listener.",
              "lineNumber": 14,
              "type": {
                "type": "NameExpression",
                "name": "function"
              }
            },
            {
              "title": "example",
              "description": "var machine = Statebot('half-duplex', {\n  chart: `\n    idle -> sending | receiving -> done\n  `\n})\n\nmachine.onEntered('done', fromState => {\n  console.log('Entered from:', fromState)\n})\n\nmachine.enter('receiving')\nmachine.enter('done')\n// Entered from: receiving",
              "lineNumber": 16
            }
          ],
          "loc": {
            "start": {
              "line": 1115,
              "column": 4
            },
            "end": {
              "line": 1145,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 1146,
                "column": 4
              },
              "end": {
                "line": 1146,
                "column": 41
              }
            },
            "file": "/Users/mostly/Local Projects/statebot/src/statebot.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "var machine = Statebot('half-duplex', {\n  chart: `\n    idle -> sending | receiving -> done\n  `\n})\n\nmachine.onEntered('done', fromState => {\n  console.log('Entered from:', fromState)\n})\n\nmachine.enter('receiving')\nmachine.enter('done')\n// Entered from: receiving"
            }
          ],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "state",
              "lineNumber": 9,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The state.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 11,
                            "offset": 10
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 11,
                        "offset": 10
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 11,
                    "offset": 10
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "param",
              "name": "cb",
              "lineNumber": 10,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "A callback function with the signature:",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 40,
                            "offset": 39
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 40,
                        "offset": 39
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": " ",
                        "position": {
                          "start": {
                            "line": 3,
                            "column": 1,
                            "offset": 41
                          },
                          "end": {
                            "line": 3,
                            "column": 2,
                            "offset": 42
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "inlineCode",
                        "value": "(fromState, ...args?)",
                        "position": {
                          "start": {
                            "line": 3,
                            "column": 2,
                            "offset": 42
                          },
                          "end": {
                            "line": 3,
                            "column": 25,
                            "offset": 65
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 3,
                        "column": 1,
                        "offset": 41
                      },
                      "end": {
                        "line": 3,
                        "column": 25,
                        "offset": 65
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 3,
                    "column": 25,
                    "offset": 65
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "enterCallback"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "A function that removes the listener.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 38,
                            "offset": 37
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 38,
                        "offset": 37
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 38,
                    "offset": 37
                  }
                }
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "function"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "memberof": "statebotFsm",
          "scope": "instance",
          "kind": "function",
          "name": "onEntered",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "statebotFsm",
              "kind": "typedef"
            },
            {
              "name": "onEntered",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "statebotFsm#onEntered"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Adds a listener that runs a callback immediately ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 50,
                        "offset": 49
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "strong",
                    "children": [
                      {
                        "type": "text",
                        "value": "BEFORE",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 52,
                            "offset": 51
                          },
                          "end": {
                            "line": 1,
                            "column": 58,
                            "offset": 57
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 50,
                        "offset": 49
                      },
                      "end": {
                        "line": 1,
                        "column": 60,
                        "offset": 59
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " the\nspecified-state becomes the current one.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 60,
                        "offset": 59
                      },
                      "end": {
                        "line": 2,
                        "column": 41,
                        "offset": 104
                      },
                      "indent": [
                        1
                      ]
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 2,
                    "column": 41,
                    "offset": 104
                  },
                  "indent": [
                    1
                  ]
                }
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "A function is returned that will remove the listener.",
                    "position": {
                      "start": {
                        "line": 4,
                        "column": 1,
                        "offset": 106
                      },
                      "end": {
                        "line": 4,
                        "column": 54,
                        "offset": 159
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 4,
                    "column": 1,
                    "offset": 106
                  },
                  "end": {
                    "line": 4,
                    "column": 54,
                    "offset": 159
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 4,
                "column": 54,
                "offset": 159
              }
            }
          },
          "tags": [
            {
              "title": "memberof",
              "description": "statebotFsm",
              "lineNumber": 6
            },
            {
              "title": "instance",
              "description": null,
              "lineNumber": 7
            },
            {
              "title": "function",
              "description": null,
              "lineNumber": 8,
              "name": null
            },
            {
              "title": "param",
              "description": "The state.",
              "lineNumber": 9,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "state"
            },
            {
              "title": "param",
              "description": "A callback function with the signature:\n\n `(fromState, ...args?)`",
              "lineNumber": 10,
              "type": {
                "type": "NameExpression",
                "name": "enterCallback"
              },
              "name": "cb"
            },
            {
              "title": "returns",
              "description": "A function that removes the listener.",
              "lineNumber": 14,
              "type": {
                "type": "NameExpression",
                "name": "function"
              }
            },
            {
              "title": "example",
              "description": "var machine = Statebot('half-duplex', {\n  chart: `\n    idle -> sending | receiving -> done\n  `\n})\n\nmachine.onEntered('done', () => {\n  console.log('We made it!')\n})\n\nmachine.onEntering('done', fromState => {\n  console.log('Entering from:', fromState)\n})\n\nmachine.enter('sending')\nmachine.enter('done')\n// Entering from: sending\n// We made it!",
              "lineNumber": 16
            }
          ],
          "loc": {
            "start": {
              "line": 1148,
              "column": 4
            },
            "end": {
              "line": 1183,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 1184,
                "column": 4
              },
              "end": {
                "line": 1184,
                "column": 43
              }
            },
            "file": "/Users/mostly/Local Projects/statebot/src/statebot.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "var machine = Statebot('half-duplex', {\n  chart: `\n    idle -> sending | receiving -> done\n  `\n})\n\nmachine.onEntered('done', () => {\n  console.log('We made it!')\n})\n\nmachine.onEntering('done', fromState => {\n  console.log('Entering from:', fromState)\n})\n\nmachine.enter('sending')\nmachine.enter('done')\n// Entering from: sending\n// We made it!"
            }
          ],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "state",
              "lineNumber": 9,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The state.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 11,
                            "offset": 10
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 11,
                        "offset": 10
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 11,
                    "offset": 10
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "param",
              "name": "cb",
              "lineNumber": 10,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "A callback function with the signature:",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 40,
                            "offset": 39
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 40,
                        "offset": 39
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": " ",
                        "position": {
                          "start": {
                            "line": 3,
                            "column": 1,
                            "offset": 41
                          },
                          "end": {
                            "line": 3,
                            "column": 2,
                            "offset": 42
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "inlineCode",
                        "value": "(fromState, ...args?)",
                        "position": {
                          "start": {
                            "line": 3,
                            "column": 2,
                            "offset": 42
                          },
                          "end": {
                            "line": 3,
                            "column": 25,
                            "offset": 65
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 3,
                        "column": 1,
                        "offset": 41
                      },
                      "end": {
                        "line": 3,
                        "column": 25,
                        "offset": 65
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 3,
                    "column": 25,
                    "offset": 65
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "enterCallback"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "A function that removes the listener.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 38,
                            "offset": 37
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 38,
                        "offset": 37
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 38,
                    "offset": 37
                  }
                }
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "function"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "memberof": "statebotFsm",
          "scope": "instance",
          "kind": "function",
          "name": "onEntering",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "statebotFsm",
              "kind": "typedef"
            },
            {
              "name": "onEntering",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "statebotFsm#onEntering"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Adds a listener that runs a callback immediately after the specified\nevent is called.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 2,
                        "column": 17,
                        "offset": 85
                      },
                      "indent": [
                        1
                      ]
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 2,
                    "column": 17,
                    "offset": 85
                  },
                  "indent": [
                    1
                  ]
                }
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "A function is returned that will remove the listener.",
                    "position": {
                      "start": {
                        "line": 4,
                        "column": 1,
                        "offset": 87
                      },
                      "end": {
                        "line": 4,
                        "column": 54,
                        "offset": 140
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 4,
                    "column": 1,
                    "offset": 87
                  },
                  "end": {
                    "line": 4,
                    "column": 54,
                    "offset": 140
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 4,
                "column": 54,
                "offset": 140
              }
            }
          },
          "tags": [
            {
              "title": "memberof",
              "description": "statebotFsm",
              "lineNumber": 6
            },
            {
              "title": "instance",
              "description": null,
              "lineNumber": 7
            },
            {
              "title": "function",
              "description": null,
              "lineNumber": 8,
              "name": null
            },
            {
              "title": "param",
              "description": "The event name.",
              "lineNumber": 9,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "name"
            },
            {
              "title": "param",
              "description": "The callback.",
              "lineNumber": 10,
              "type": {
                "type": "NameExpression",
                "name": "function"
              },
              "name": "cb"
            },
            {
              "title": "returns",
              "description": "A function that removes the listener.",
              "lineNumber": 11,
              "type": {
                "type": "NameExpression",
                "name": "function"
              }
            },
            {
              "title": "example",
              "description": "var machine = Statebot('traffic-lights', {\n  chart: `\n    go ->\n      prepare-to-stop ->\n      stop\n\n    // ...gotta keep that traffic flowing\n    stop ->\n      prepare-to-go ->\n      go\n  `\n})\n\nmachine.performTransitions({\n  'stop -> prepare-to-go -> go':   { on: 'timer' },\n  'go -> prepare-to-stop -> stop': { on: 'timer' },\n})\n\nmachine.onEvent('timer', () => {\n  redrawTrafficLights()\n})\n\nsetInterval(machine.Emit('timer'), 2000)",
              "lineNumber": 13
            }
          ],
          "loc": {
            "start": {
              "line": 1197,
              "column": 4
            },
            "end": {
              "line": 1234,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 1235,
                "column": 4
              },
              "end": {
                "line": 1235,
                "column": 20
              }
            },
            "file": "/Users/mostly/Local Projects/statebot/src/statebot.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "var machine = Statebot('traffic-lights', {\n  chart: `\n    go ->\n      prepare-to-stop ->\n      stop\n\n    // ...gotta keep that traffic flowing\n    stop ->\n      prepare-to-go ->\n      go\n  `\n})\n\nmachine.performTransitions({\n  'stop -> prepare-to-go -> go':   { on: 'timer' },\n  'go -> prepare-to-stop -> stop': { on: 'timer' },\n})\n\nmachine.onEvent('timer', () => {\n  redrawTrafficLights()\n})\n\nsetInterval(machine.Emit('timer'), 2000)"
            }
          ],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "name",
              "lineNumber": 9,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The event name.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 16,
                            "offset": 15
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 16,
                        "offset": 15
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 16,
                    "offset": 15
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "param",
              "name": "cb",
              "lineNumber": 10,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The callback.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 14,
                            "offset": 13
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 14,
                        "offset": 13
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 14,
                    "offset": 13
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "function"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "A function that removes the listener.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 38,
                            "offset": 37
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 38,
                        "offset": 37
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 38,
                    "offset": 37
                  }
                }
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "function"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "memberof": "statebotFsm",
          "scope": "instance",
          "kind": "function",
          "name": "onEvent",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "statebotFsm",
              "kind": "typedef"
            },
            {
              "name": "onEvent",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "statebotFsm#onEvent"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Adds a listener that runs a callback immediately ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 50,
                        "offset": 49
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "strong",
                    "children": [
                      {
                        "type": "text",
                        "value": "AFTER",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 52,
                            "offset": 51
                          },
                          "end": {
                            "line": 1,
                            "column": 57,
                            "offset": 56
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 50,
                        "offset": 49
                      },
                      "end": {
                        "line": 1,
                        "column": 59,
                        "offset": 58
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " the\nspecified-state is no longer the current one.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 59,
                        "offset": 58
                      },
                      "end": {
                        "line": 2,
                        "column": 46,
                        "offset": 108
                      },
                      "indent": [
                        1
                      ]
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 2,
                    "column": 46,
                    "offset": 108
                  },
                  "indent": [
                    1
                  ]
                }
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "A function is returned that will remove the listener.",
                    "position": {
                      "start": {
                        "line": 4,
                        "column": 1,
                        "offset": 110
                      },
                      "end": {
                        "line": 4,
                        "column": 54,
                        "offset": 163
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 4,
                    "column": 1,
                    "offset": 110
                  },
                  "end": {
                    "line": 4,
                    "column": 54,
                    "offset": 163
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 4,
                "column": 54,
                "offset": 163
              }
            }
          },
          "tags": [
            {
              "title": "memberof",
              "description": "statebotFsm",
              "lineNumber": 6
            },
            {
              "title": "instance",
              "description": null,
              "lineNumber": 7
            },
            {
              "title": "function",
              "description": null,
              "lineNumber": 8,
              "name": null
            },
            {
              "title": "param",
              "description": "The state.",
              "lineNumber": 9,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "state"
            },
            {
              "title": "param",
              "description": "A callback function with the signature:\n\n `(toState, ...args?)`",
              "lineNumber": 10,
              "type": {
                "type": "NameExpression",
                "name": "exitCallback"
              },
              "name": "cb"
            },
            {
              "title": "returns",
              "description": "A function that removes the listener.",
              "lineNumber": 14,
              "type": {
                "type": "NameExpression",
                "name": "function"
              }
            },
            {
              "title": "example",
              "description": "var machine = Statebot('half-duplex', {\n  chart: `\n    idle -> sending | receiving -> done\n  `\n})\n\nmachine.onExited('idle', toState => {\n  console.log('We are heading to:', toState)\n})\n\nmachine.enter('sending')\n// We are heading to: sending",
              "lineNumber": 16
            }
          ],
          "loc": {
            "start": {
              "line": 1237,
              "column": 4
            },
            "end": {
              "line": 1266,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 1267,
                "column": 4
              },
              "end": {
                "line": 1267,
                "column": 39
              }
            },
            "file": "/Users/mostly/Local Projects/statebot/src/statebot.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "var machine = Statebot('half-duplex', {\n  chart: `\n    idle -> sending | receiving -> done\n  `\n})\n\nmachine.onExited('idle', toState => {\n  console.log('We are heading to:', toState)\n})\n\nmachine.enter('sending')\n// We are heading to: sending"
            }
          ],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "state",
              "lineNumber": 9,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The state.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 11,
                            "offset": 10
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 11,
                        "offset": 10
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 11,
                    "offset": 10
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "param",
              "name": "cb",
              "lineNumber": 10,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "A callback function with the signature:",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 40,
                            "offset": 39
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 40,
                        "offset": 39
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": " ",
                        "position": {
                          "start": {
                            "line": 3,
                            "column": 1,
                            "offset": 41
                          },
                          "end": {
                            "line": 3,
                            "column": 2,
                            "offset": 42
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "inlineCode",
                        "value": "(toState, ...args?)",
                        "position": {
                          "start": {
                            "line": 3,
                            "column": 2,
                            "offset": 42
                          },
                          "end": {
                            "line": 3,
                            "column": 23,
                            "offset": 63
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 3,
                        "column": 1,
                        "offset": 41
                      },
                      "end": {
                        "line": 3,
                        "column": 23,
                        "offset": 63
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 3,
                    "column": 23,
                    "offset": 63
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "exitCallback"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "A function that removes the listener.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 38,
                            "offset": 37
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 38,
                        "offset": 37
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 38,
                    "offset": 37
                  }
                }
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "function"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "memberof": "statebotFsm",
          "scope": "instance",
          "kind": "function",
          "name": "onExited",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "statebotFsm",
              "kind": "typedef"
            },
            {
              "name": "onExited",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "statebotFsm#onExited"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Adds a listener that runs a callback immediately ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 50,
                        "offset": 49
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "strong",
                    "children": [
                      {
                        "type": "text",
                        "value": "BEFORE",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 52,
                            "offset": 51
                          },
                          "end": {
                            "line": 1,
                            "column": 58,
                            "offset": 57
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 50,
                        "offset": 49
                      },
                      "end": {
                        "line": 1,
                        "column": 60,
                        "offset": 59
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " the\nspecified-state is no longer the current one.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 60,
                        "offset": 59
                      },
                      "end": {
                        "line": 2,
                        "column": 46,
                        "offset": 109
                      },
                      "indent": [
                        1
                      ]
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 2,
                    "column": 46,
                    "offset": 109
                  },
                  "indent": [
                    1
                  ]
                }
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "A function is returned that will remove the listener.",
                    "position": {
                      "start": {
                        "line": 4,
                        "column": 1,
                        "offset": 111
                      },
                      "end": {
                        "line": 4,
                        "column": 54,
                        "offset": 164
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 4,
                    "column": 1,
                    "offset": 111
                  },
                  "end": {
                    "line": 4,
                    "column": 54,
                    "offset": 164
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 4,
                "column": 54,
                "offset": 164
              }
            }
          },
          "tags": [
            {
              "title": "memberof",
              "description": "statebotFsm",
              "lineNumber": 6
            },
            {
              "title": "instance",
              "description": null,
              "lineNumber": 7
            },
            {
              "title": "function",
              "description": null,
              "lineNumber": 8,
              "name": null
            },
            {
              "title": "param",
              "description": "The state.",
              "lineNumber": 9,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "state"
            },
            {
              "title": "param",
              "description": "A callback function with the signature:\n\n `(toState, ...args?)`",
              "lineNumber": 10,
              "type": {
                "type": "NameExpression",
                "name": "exitCallback"
              },
              "name": "cb"
            },
            {
              "title": "returns",
              "description": "A function that removes the listener.",
              "lineNumber": 14,
              "type": {
                "type": "NameExpression",
                "name": "function"
              }
            },
            {
              "title": "example",
              "description": "var machine = Statebot('half-duplex', {\n  chart: `\n    idle -> sending | receiving -> done\n  `\n})\n\nmachine.onExited('idle', () => {\n  console.log('Peace out!')\n})\n\nmachine.onExiting('idle', toState => {\n  console.log('Heading to:', toState)\n})\n\nmachine.enter('receiving')\nmachine.enter('done')\n// Heading to: receiving\n// Peace out!",
              "lineNumber": 16
            }
          ],
          "loc": {
            "start": {
              "line": 1269,
              "column": 4
            },
            "end": {
              "line": 1304,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 1305,
                "column": 4
              },
              "end": {
                "line": 1305,
                "column": 41
              }
            },
            "file": "/Users/mostly/Local Projects/statebot/src/statebot.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "var machine = Statebot('half-duplex', {\n  chart: `\n    idle -> sending | receiving -> done\n  `\n})\n\nmachine.onExited('idle', () => {\n  console.log('Peace out!')\n})\n\nmachine.onExiting('idle', toState => {\n  console.log('Heading to:', toState)\n})\n\nmachine.enter('receiving')\nmachine.enter('done')\n// Heading to: receiving\n// Peace out!"
            }
          ],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "state",
              "lineNumber": 9,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The state.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 11,
                            "offset": 10
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 11,
                        "offset": 10
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 11,
                    "offset": 10
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "param",
              "name": "cb",
              "lineNumber": 10,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "A callback function with the signature:",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 40,
                            "offset": 39
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 40,
                        "offset": 39
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": " ",
                        "position": {
                          "start": {
                            "line": 3,
                            "column": 1,
                            "offset": 41
                          },
                          "end": {
                            "line": 3,
                            "column": 2,
                            "offset": 42
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "inlineCode",
                        "value": "(toState, ...args?)",
                        "position": {
                          "start": {
                            "line": 3,
                            "column": 2,
                            "offset": 42
                          },
                          "end": {
                            "line": 3,
                            "column": 23,
                            "offset": 63
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 3,
                        "column": 1,
                        "offset": 41
                      },
                      "end": {
                        "line": 3,
                        "column": 23,
                        "offset": 63
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 3,
                    "column": 23,
                    "offset": 63
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "exitCallback"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "A function that removes the listener.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 38,
                            "offset": 37
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 38,
                        "offset": 37
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 38,
                    "offset": 37
                  }
                }
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "function"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "memberof": "statebotFsm",
          "scope": "instance",
          "kind": "function",
          "name": "onExiting",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "statebotFsm",
              "kind": "typedef"
            },
            {
              "name": "onExiting",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "statebotFsm#onExiting"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Adds a listener that runs a callback immediately after ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 56,
                        "offset": 55
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "strong",
                    "children": [
                      {
                        "type": "text",
                        "value": "ANY",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 58,
                            "offset": 57
                          },
                          "end": {
                            "line": 1,
                            "column": 61,
                            "offset": 60
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 56,
                        "offset": 55
                      },
                      "end": {
                        "line": 1,
                        "column": 63,
                        "offset": 62
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": "\nstate-change.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 63,
                        "offset": 62
                      },
                      "end": {
                        "line": 2,
                        "column": 14,
                        "offset": 76
                      },
                      "indent": [
                        1
                      ]
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 2,
                    "column": 14,
                    "offset": 76
                  },
                  "indent": [
                    1
                  ]
                }
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "A function is returned that will remove the listener.",
                    "position": {
                      "start": {
                        "line": 4,
                        "column": 1,
                        "offset": 78
                      },
                      "end": {
                        "line": 4,
                        "column": 54,
                        "offset": 131
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 4,
                    "column": 1,
                    "offset": 78
                  },
                  "end": {
                    "line": 4,
                    "column": 54,
                    "offset": 131
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 4,
                "column": 54,
                "offset": 131
              }
            }
          },
          "tags": [
            {
              "title": "memberof",
              "description": "statebotFsm",
              "lineNumber": 6
            },
            {
              "title": "instance",
              "description": null,
              "lineNumber": 7
            },
            {
              "title": "function",
              "description": null,
              "lineNumber": 8,
              "name": null
            },
            {
              "title": "param",
              "description": "A callback function with the signature:\n\n `(toState, fromState, ...args?)`",
              "lineNumber": 9,
              "type": {
                "type": "NameExpression",
                "name": "switchCallback"
              },
              "name": "cb"
            },
            {
              "title": "returns",
              "description": "A function that removes the listener.",
              "lineNumber": 13,
              "type": {
                "type": "NameExpression",
                "name": "function"
              }
            },
            {
              "title": "example",
              "description": "var machine = Statebot('half-duplex', {\n  chart: `\n    idle -> sending | receiving -> done\n  `\n})\n\nmachine.onSwitched((toState, fromState) => {\n  console.log(`We went from \"${fromState}\" to \"${toState}\"`)\n})\n\nmachine.enter('receiving')\n// We went from \"idle\" to \"receiving\"",
              "lineNumber": 15
            }
          ],
          "loc": {
            "start": {
              "line": 1318,
              "column": 4
            },
            "end": {
              "line": 1346,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 1347,
                "column": 4
              },
              "end": {
                "line": 1347,
                "column": 40
              }
            },
            "file": "/Users/mostly/Local Projects/statebot/src/statebot.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "var machine = Statebot('half-duplex', {\n  chart: `\n    idle -> sending | receiving -> done\n  `\n})\n\nmachine.onSwitched((toState, fromState) => {\n  console.log(`We went from \"${fromState}\" to \"${toState}\"`)\n})\n\nmachine.enter('receiving')\n// We went from \"idle\" to \"receiving\""
            }
          ],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "cb",
              "lineNumber": 9,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "A callback function with the signature:",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 40,
                            "offset": 39
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 40,
                        "offset": 39
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": " ",
                        "position": {
                          "start": {
                            "line": 3,
                            "column": 1,
                            "offset": 41
                          },
                          "end": {
                            "line": 3,
                            "column": 2,
                            "offset": 42
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "inlineCode",
                        "value": "(toState, fromState, ...args?)",
                        "position": {
                          "start": {
                            "line": 3,
                            "column": 2,
                            "offset": 42
                          },
                          "end": {
                            "line": 3,
                            "column": 34,
                            "offset": 74
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 3,
                        "column": 1,
                        "offset": 41
                      },
                      "end": {
                        "line": 3,
                        "column": 34,
                        "offset": 74
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 3,
                    "column": 34,
                    "offset": 74
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "switchCallback"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "A function that removes the listener.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 38,
                            "offset": 37
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 38,
                        "offset": 37
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 38,
                    "offset": 37
                  }
                }
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "function"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "memberof": "statebotFsm",
          "scope": "instance",
          "kind": "function",
          "name": "onSwitched",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "statebotFsm",
              "kind": "typedef"
            },
            {
              "name": "onSwitched",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "statebotFsm#onSwitched"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Adds a listener that runs a callback immediately before ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 57,
                        "offset": 56
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "strong",
                    "children": [
                      {
                        "type": "text",
                        "value": "ANY",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 59,
                            "offset": 58
                          },
                          "end": {
                            "line": 1,
                            "column": 62,
                            "offset": 61
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 57,
                        "offset": 56
                      },
                      "end": {
                        "line": 1,
                        "column": 64,
                        "offset": 63
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": "\nstate-change.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 64,
                        "offset": 63
                      },
                      "end": {
                        "line": 2,
                        "column": 14,
                        "offset": 77
                      },
                      "indent": [
                        1
                      ]
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 2,
                    "column": 14,
                    "offset": 77
                  },
                  "indent": [
                    1
                  ]
                }
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "A function is returned that will remove the listener.",
                    "position": {
                      "start": {
                        "line": 4,
                        "column": 1,
                        "offset": 79
                      },
                      "end": {
                        "line": 4,
                        "column": 54,
                        "offset": 132
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 4,
                    "column": 1,
                    "offset": 79
                  },
                  "end": {
                    "line": 4,
                    "column": 54,
                    "offset": 132
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 4,
                "column": 54,
                "offset": 132
              }
            }
          },
          "tags": [
            {
              "title": "memberof",
              "description": "statebotFsm",
              "lineNumber": 6
            },
            {
              "title": "instance",
              "description": null,
              "lineNumber": 7
            },
            {
              "title": "function",
              "description": null,
              "lineNumber": 8,
              "name": null
            },
            {
              "title": "param",
              "description": "A callback function with the signature:\n\n `(toState, fromState, ...args?)`",
              "lineNumber": 9,
              "type": {
                "type": "NameExpression",
                "name": "switchCallback"
              },
              "name": "cb"
            },
            {
              "title": "returns",
              "description": "A function that removes the listener.",
              "lineNumber": 13,
              "type": {
                "type": "NameExpression",
                "name": "function"
              }
            },
            {
              "title": "example",
              "description": "var machine = Statebot('half-duplex', {\n  chart: `\n    idle -> sending | receiving -> done\n  `\n})\n\nmachine.onSwitching((toState, fromState) => {\n  console.log(`Going from \"${fromState}\" to \"${toState}\"`)\n})\n\nmachine.enter('receiving')\n// Going from \"idle\" to \"receiving\"",
              "lineNumber": 15
            }
          ],
          "loc": {
            "start": {
              "line": 1349,
              "column": 4
            },
            "end": {
              "line": 1377,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 1378,
                "column": 4
              },
              "end": {
                "line": 1378,
                "column": 42
              }
            },
            "file": "/Users/mostly/Local Projects/statebot/src/statebot.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "var machine = Statebot('half-duplex', {\n  chart: `\n    idle -> sending | receiving -> done\n  `\n})\n\nmachine.onSwitching((toState, fromState) => {\n  console.log(`Going from \"${fromState}\" to \"${toState}\"`)\n})\n\nmachine.enter('receiving')\n// Going from \"idle\" to \"receiving\""
            }
          ],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "cb",
              "lineNumber": 9,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "A callback function with the signature:",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 40,
                            "offset": 39
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 40,
                        "offset": 39
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": " ",
                        "position": {
                          "start": {
                            "line": 3,
                            "column": 1,
                            "offset": 41
                          },
                          "end": {
                            "line": 3,
                            "column": 2,
                            "offset": 42
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "inlineCode",
                        "value": "(toState, fromState, ...args?)",
                        "position": {
                          "start": {
                            "line": 3,
                            "column": 2,
                            "offset": 42
                          },
                          "end": {
                            "line": 3,
                            "column": 34,
                            "offset": 74
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 3,
                        "column": 1,
                        "offset": 41
                      },
                      "end": {
                        "line": 3,
                        "column": 34,
                        "offset": 74
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 3,
                    "column": 34,
                    "offset": 74
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "switchCallback"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "A function that removes the listener.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 38,
                            "offset": 37
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 38,
                        "offset": 37
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 38,
                    "offset": 37
                  }
                }
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "function"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "memberof": "statebotFsm",
          "scope": "instance",
          "kind": "function",
          "name": "onSwitching",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "statebotFsm",
              "kind": "typedef"
            },
            {
              "name": "onSwitching",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "statebotFsm#onSwitching"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Run callbacks when transitions happen.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 39,
                        "offset": 38
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 39,
                    "offset": 38
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 39,
                "offset": 38
              }
            }
          },
          "tags": [
            {
              "title": "memberof",
              "description": "statebotFsm",
              "lineNumber": 3
            },
            {
              "title": "instance",
              "description": null,
              "lineNumber": 4
            },
            {
              "title": "function",
              "description": null,
              "lineNumber": 5,
              "name": null
            },
            {
              "title": "param",
              "description": "Configuration in the form of an object, or a function that\n returns an object. If a function is used, there will be a single\n argument passed-in: an object with the following methods\n attached as a convenience:\n\n - {{@link #statebotfsmenter|.enter()}, {@link #statebotfsmemit|.emit()}, {@link #enter-state-1 .Enter()}, {@link #emit-name .Emit()}}",
              "lineNumber": 6,
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "object"
                  },
                  {
                    "type": "NameExpression",
                    "name": "function"
                  }
                ]
              },
              "name": "transitions"
            },
            {
              "title": "returns",
              "description": "A function that removes all listeners added\n by this method.",
              "lineNumber": 14,
              "type": {
                "type": "NameExpression",
                "name": "function"
              }
            },
            {
              "title": "example",
              "description": "var machine = Statebot('half-duplex', {\n  chart: `\n    idle -> sending | receiving -> done\n  `\n})\n\nmachine.onTransitions({\n  'idle -> sending': () => {\n    sendData()\n      .then(machine.Enter('done', 'sent'))\n      .catch(machine.Enter('done', 'failed'))\n  },\n  'idle -> receiving': () => {\n    receiveData()\n      .then(machine.Enter('done', 'received'))\n      .catch(machine.Enter('done', 'failed'))\n  },\n  'sending | receiving -> done': whatHappened => {\n    console.log('All finished: ', whatHappened)\n  }\n})\n\nmachine.enter('sending')\n\nfunction sendData() {\n  return new Promise((resolve, reject) => {\n    setTimeout(resolve, 1000)\n    setTimeout(reject, 750 + Math.round(Math.random() * 750))\n  })\n}\n\nfunction receiveData() {\n  return new Promise((resolve, reject) => {\n    setTimeout(resolve, 1000)\n    setTimeout(reject, 750 + Math.round(Math.random() * 750))\n  })\n}",
              "lineNumber": 17
            },
            {
              "title": "example",
              "description": "// The above example using a function for config\nmachine.onTransitions(({ Enter }) => ({\n  'idle -> sending': () => {\n    sendData()\n      .then(Enter('done', 'sent'))\n      .catch(Enter('done', 'failed'))\n  },\n  'idle -> receiving': () => {\n    receiveData()\n      .then(Enter('done', 'received'))\n      .catch(Enter('done', 'failed'))\n  },\n  'sending | receiving -> done': whatHappened => {\n    console.log('All finished: ', whatHappened)\n  }\n}))\n\n// etc...",
              "lineNumber": 56
            }
          ],
          "loc": {
            "start": {
              "line": 1392,
              "column": 4
            },
            "end": {
              "line": 1467,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 1468,
                "column": 4
              },
              "end": {
                "line": 1468,
                "column": 76
              }
            },
            "file": "/Users/mostly/Local Projects/statebot/src/statebot.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "var machine = Statebot('half-duplex', {\n  chart: `\n    idle -> sending | receiving -> done\n  `\n})\n\nmachine.onTransitions({\n  'idle -> sending': () => {\n    sendData()\n      .then(machine.Enter('done', 'sent'))\n      .catch(machine.Enter('done', 'failed'))\n  },\n  'idle -> receiving': () => {\n    receiveData()\n      .then(machine.Enter('done', 'received'))\n      .catch(machine.Enter('done', 'failed'))\n  },\n  'sending | receiving -> done': whatHappened => {\n    console.log('All finished: ', whatHappened)\n  }\n})\n\nmachine.enter('sending')\n\nfunction sendData() {\n  return new Promise((resolve, reject) => {\n    setTimeout(resolve, 1000)\n    setTimeout(reject, 750 + Math.round(Math.random() * 750))\n  })\n}\n\nfunction receiveData() {\n  return new Promise((resolve, reject) => {\n    setTimeout(resolve, 1000)\n    setTimeout(reject, 750 + Math.round(Math.random() * 750))\n  })\n}"
            },
            {
              "description": "// The above example using a function for config\nmachine.onTransitions(({ Enter }) => ({\n  'idle -> sending': () => {\n    sendData()\n      .then(Enter('done', 'sent'))\n      .catch(Enter('done', 'failed'))\n  },\n  'idle -> receiving': () => {\n    receiveData()\n      .then(Enter('done', 'received'))\n      .catch(Enter('done', 'failed'))\n  },\n  'sending | receiving -> done': whatHappened => {\n    console.log('All finished: ', whatHappened)\n  }\n}))\n\n// etc..."
            }
          ],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "transitions",
              "lineNumber": 6,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Configuration in the form of an object, or a function that\n returns an object. If a function is used, there will be a single\n argument passed-in: an object with the following methods\n attached as a convenience:",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 4,
                            "column": 28,
                            "offset": 210
                          },
                          "indent": [
                            1,
                            1,
                            1
                          ]
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 4,
                        "column": 28,
                        "offset": 210
                      },
                      "indent": [
                        1,
                        1,
                        1
                      ]
                    }
                  },
                  {
                    "type": "list",
                    "ordered": false,
                    "start": null,
                    "loose": false,
                    "children": [
                      {
                        "type": "listItem",
                        "loose": false,
                        "checked": null,
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "{",
                                "position": {
                                  "start": {
                                    "line": 6,
                                    "column": 4,
                                    "offset": 215
                                  },
                                  "end": {
                                    "line": 6,
                                    "column": 5,
                                    "offset": 216
                                  },
                                  "indent": []
                                }
                              },
                              {
                                "type": "link",
                                "url": "#statebotfsmenter",
                                "title": null,
                                "jsdoc": true,
                                "children": [
                                  {
                                    "type": "text",
                                    "value": ".enter()"
                                  }
                                ],
                                "position": {
                                  "start": {
                                    "line": 6,
                                    "column": 5,
                                    "offset": 216
                                  },
                                  "end": {
                                    "line": 6,
                                    "column": 39,
                                    "offset": 250
                                  },
                                  "indent": []
                                }
                              },
                              {
                                "type": "text",
                                "value": ", ",
                                "position": {
                                  "start": {
                                    "line": 6,
                                    "column": 39,
                                    "offset": 250
                                  },
                                  "end": {
                                    "line": 6,
                                    "column": 41,
                                    "offset": 252
                                  },
                                  "indent": []
                                }
                              },
                              {
                                "type": "link",
                                "url": "#statebotfsmemit",
                                "title": null,
                                "jsdoc": true,
                                "children": [
                                  {
                                    "type": "text",
                                    "value": ".emit()"
                                  }
                                ],
                                "position": {
                                  "start": {
                                    "line": 6,
                                    "column": 41,
                                    "offset": 252
                                  },
                                  "end": {
                                    "line": 6,
                                    "column": 73,
                                    "offset": 284
                                  },
                                  "indent": []
                                }
                              },
                              {
                                "type": "text",
                                "value": ", ",
                                "position": {
                                  "start": {
                                    "line": 6,
                                    "column": 73,
                                    "offset": 284
                                  },
                                  "end": {
                                    "line": 6,
                                    "column": 75,
                                    "offset": 286
                                  },
                                  "indent": []
                                }
                              },
                              {
                                "type": "link",
                                "url": "#enter-state-1",
                                "title": null,
                                "jsdoc": true,
                                "children": [
                                  {
                                    "type": "text",
                                    "value": ".Enter()"
                                  }
                                ],
                                "position": {
                                  "start": {
                                    "line": 6,
                                    "column": 75,
                                    "offset": 286
                                  },
                                  "end": {
                                    "line": 6,
                                    "column": 106,
                                    "offset": 317
                                  },
                                  "indent": []
                                }
                              },
                              {
                                "type": "text",
                                "value": ", ",
                                "position": {
                                  "start": {
                                    "line": 6,
                                    "column": 106,
                                    "offset": 317
                                  },
                                  "end": {
                                    "line": 6,
                                    "column": 108,
                                    "offset": 319
                                  },
                                  "indent": []
                                }
                              },
                              {
                                "type": "link",
                                "url": "#emit-name",
                                "title": null,
                                "jsdoc": true,
                                "children": [
                                  {
                                    "type": "text",
                                    "value": ".Emit()"
                                  }
                                ],
                                "position": {
                                  "start": {
                                    "line": 6,
                                    "column": 108,
                                    "offset": 319
                                  },
                                  "end": {
                                    "line": 6,
                                    "column": 134,
                                    "offset": 345
                                  },
                                  "indent": []
                                }
                              },
                              {
                                "type": "text",
                                "value": "}",
                                "position": {
                                  "start": {
                                    "line": 6,
                                    "column": 134,
                                    "offset": 345
                                  },
                                  "end": {
                                    "line": 6,
                                    "column": 135,
                                    "offset": 346
                                  },
                                  "indent": []
                                }
                              }
                            ],
                            "position": {
                              "start": {
                                "line": 6,
                                "column": 4,
                                "offset": 215
                              },
                              "end": {
                                "line": 6,
                                "column": 135,
                                "offset": 346
                              },
                              "indent": []
                            }
                          }
                        ],
                        "position": {
                          "start": {
                            "line": 6,
                            "column": 1,
                            "offset": 212
                          },
                          "end": {
                            "line": 6,
                            "column": 135,
                            "offset": 346
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 6,
                        "column": 1,
                        "offset": 212
                      },
                      "end": {
                        "line": 6,
                        "column": 135,
                        "offset": 346
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 6,
                    "column": 135,
                    "offset": 346
                  }
                }
              },
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "object"
                  },
                  {
                    "type": "NameExpression",
                    "name": "function"
                  }
                ]
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "A function that removes all listeners added\n by this method.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 2,
                            "column": 17,
                            "offset": 60
                          },
                          "indent": [
                            1
                          ]
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 2,
                        "column": 17,
                        "offset": 60
                      },
                      "indent": [
                        1
                      ]
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 2,
                    "column": 17,
                    "offset": 60
                  }
                }
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "function"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "memberof": "statebotFsm",
          "scope": "instance",
          "kind": "function",
          "name": "onTransitions",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "statebotFsm",
              "kind": "typedef"
            },
            {
              "name": "onTransitions",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "statebotFsm#onTransitions"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Perform transitions when events happen.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 40,
                        "offset": 39
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 40,
                    "offset": 39
                  },
                  "indent": []
                }
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Use ",
                    "position": {
                      "start": {
                        "line": 3,
                        "column": 1,
                        "offset": 41
                      },
                      "end": {
                        "line": 3,
                        "column": 5,
                        "offset": 45
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "then",
                    "position": {
                      "start": {
                        "line": 3,
                        "column": 5,
                        "offset": 45
                      },
                      "end": {
                        "line": 3,
                        "column": 11,
                        "offset": 51
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " to optionally add callbacks to those transitions.",
                    "position": {
                      "start": {
                        "line": 3,
                        "column": 11,
                        "offset": 51
                      },
                      "end": {
                        "line": 3,
                        "column": 61,
                        "offset": 101
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 3,
                    "column": 1,
                    "offset": 41
                  },
                  "end": {
                    "line": 3,
                    "column": 61,
                    "offset": 101
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 3,
                "column": 61,
                "offset": 101
              }
            }
          },
          "tags": [
            {
              "title": "memberof",
              "description": "statebotFsm",
              "lineNumber": 5
            },
            {
              "title": "instance",
              "description": null,
              "lineNumber": 6
            },
            {
              "title": "function",
              "description": null,
              "lineNumber": 7,
              "name": null
            },
            {
              "title": "param",
              "description": "Configuration in the form of an object, or a function that\n returns an object. If a function is used, there will be a single\n argument passed-in: an object with the following methods\n attached as a convenience:\n\n - {{@link #statebotfsmenter|.enter()}, {@link #statebotfsmemit|.emit()}, {@link #enter-state-1 .Enter()}, {@link #emit-name .Emit()}}",
              "lineNumber": 8,
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "object"
                  },
                  {
                    "type": "NameExpression",
                    "name": "function"
                  }
                ]
              },
              "name": "transitions"
            },
            {
              "title": "returns",
              "description": "A function that removes all listeners added\n by this method.",
              "lineNumber": 16,
              "type": {
                "type": "NameExpression",
                "name": "function"
              }
            },
            {
              "title": "example",
              "description": "var machine = Statebot('complex-form', {\n  chart: `\n    idle ->\n      update\n\n    // Maybe things take a long time...\n    update ->\n      waiting -> waiting-a-while\n\n    // Which path will we take?\n    waiting | waiting-a-while ->\n      success | failed | timeout\n\n    // All done!\n    success | failed | timeout ->\n      done\n  `\n})\n\nmachine.performTransitions(({ Enter, emit }) => ({\n  'idle -> update': {\n    on: 'user-saved',\n    then: (data) => {\n      console.log('Sending data: ', data)\n\n      sendData(data)\n        .then(Enter('success'))\n        .catch(Enter('failed'))\n\n      emit('data-sent')\n    }\n  },\n  'update -> waiting': {\n    on: 'data-sent',\n    then: () => {\n      setTimeout(Enter('waiting-a-while'), 750)\n      setTimeout(Enter('timeout'), 5000)\n    }\n  }\n}))\n\n// Just to illustrate that you can mix n' match with onTransitions:\nmachine.onTransitions({\n  'waiting | waiting-a-while -> success': () => {\n    console.log('Lovely!')\n  },\n  'waiting | waiting-a-while -> timeout': () => {\n    console.log('Well, at least you have your shoes')\n  }\n})\n\nmachine.emit('user-saved', ['some', 'data'])\n// Sending data: [\"some\", \"data\"]\n\nfunction sendData() {\n  return new Promise((resolve, reject) => {\n    setTimeout(resolve, 1000)\n    setTimeout(reject, 750 + Math.round(Math.random() * 750))\n  })\n}",
              "lineNumber": 19
            }
          ],
          "loc": {
            "start": {
              "line": 1470,
              "column": 4
            },
            "end": {
              "line": 1550,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 1551,
                "column": 4
              },
              "end": {
                "line": 1551,
                "column": 86
              }
            },
            "file": "/Users/mostly/Local Projects/statebot/src/statebot.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "var machine = Statebot('complex-form', {\n  chart: `\n    idle ->\n      update\n\n    // Maybe things take a long time...\n    update ->\n      waiting -> waiting-a-while\n\n    // Which path will we take?\n    waiting | waiting-a-while ->\n      success | failed | timeout\n\n    // All done!\n    success | failed | timeout ->\n      done\n  `\n})\n\nmachine.performTransitions(({ Enter, emit }) => ({\n  'idle -> update': {\n    on: 'user-saved',\n    then: (data) => {\n      console.log('Sending data: ', data)\n\n      sendData(data)\n        .then(Enter('success'))\n        .catch(Enter('failed'))\n\n      emit('data-sent')\n    }\n  },\n  'update -> waiting': {\n    on: 'data-sent',\n    then: () => {\n      setTimeout(Enter('waiting-a-while'), 750)\n      setTimeout(Enter('timeout'), 5000)\n    }\n  }\n}))\n\n// Just to illustrate that you can mix n' match with onTransitions:\nmachine.onTransitions({\n  'waiting | waiting-a-while -> success': () => {\n    console.log('Lovely!')\n  },\n  'waiting | waiting-a-while -> timeout': () => {\n    console.log('Well, at least you have your shoes')\n  }\n})\n\nmachine.emit('user-saved', ['some', 'data'])\n// Sending data: [\"some\", \"data\"]\n\nfunction sendData() {\n  return new Promise((resolve, reject) => {\n    setTimeout(resolve, 1000)\n    setTimeout(reject, 750 + Math.round(Math.random() * 750))\n  })\n}"
            }
          ],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "transitions",
              "lineNumber": 8,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Configuration in the form of an object, or a function that\n returns an object. If a function is used, there will be a single\n argument passed-in: an object with the following methods\n attached as a convenience:",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 4,
                            "column": 28,
                            "offset": 210
                          },
                          "indent": [
                            1,
                            1,
                            1
                          ]
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 4,
                        "column": 28,
                        "offset": 210
                      },
                      "indent": [
                        1,
                        1,
                        1
                      ]
                    }
                  },
                  {
                    "type": "list",
                    "ordered": false,
                    "start": null,
                    "loose": false,
                    "children": [
                      {
                        "type": "listItem",
                        "loose": false,
                        "checked": null,
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "{",
                                "position": {
                                  "start": {
                                    "line": 6,
                                    "column": 4,
                                    "offset": 215
                                  },
                                  "end": {
                                    "line": 6,
                                    "column": 5,
                                    "offset": 216
                                  },
                                  "indent": []
                                }
                              },
                              {
                                "type": "link",
                                "url": "#statebotfsmenter",
                                "title": null,
                                "jsdoc": true,
                                "children": [
                                  {
                                    "type": "text",
                                    "value": ".enter()"
                                  }
                                ],
                                "position": {
                                  "start": {
                                    "line": 6,
                                    "column": 5,
                                    "offset": 216
                                  },
                                  "end": {
                                    "line": 6,
                                    "column": 39,
                                    "offset": 250
                                  },
                                  "indent": []
                                }
                              },
                              {
                                "type": "text",
                                "value": ", ",
                                "position": {
                                  "start": {
                                    "line": 6,
                                    "column": 39,
                                    "offset": 250
                                  },
                                  "end": {
                                    "line": 6,
                                    "column": 41,
                                    "offset": 252
                                  },
                                  "indent": []
                                }
                              },
                              {
                                "type": "link",
                                "url": "#statebotfsmemit",
                                "title": null,
                                "jsdoc": true,
                                "children": [
                                  {
                                    "type": "text",
                                    "value": ".emit()"
                                  }
                                ],
                                "position": {
                                  "start": {
                                    "line": 6,
                                    "column": 41,
                                    "offset": 252
                                  },
                                  "end": {
                                    "line": 6,
                                    "column": 73,
                                    "offset": 284
                                  },
                                  "indent": []
                                }
                              },
                              {
                                "type": "text",
                                "value": ", ",
                                "position": {
                                  "start": {
                                    "line": 6,
                                    "column": 73,
                                    "offset": 284
                                  },
                                  "end": {
                                    "line": 6,
                                    "column": 75,
                                    "offset": 286
                                  },
                                  "indent": []
                                }
                              },
                              {
                                "type": "link",
                                "url": "#enter-state-1",
                                "title": null,
                                "jsdoc": true,
                                "children": [
                                  {
                                    "type": "text",
                                    "value": ".Enter()"
                                  }
                                ],
                                "position": {
                                  "start": {
                                    "line": 6,
                                    "column": 75,
                                    "offset": 286
                                  },
                                  "end": {
                                    "line": 6,
                                    "column": 106,
                                    "offset": 317
                                  },
                                  "indent": []
                                }
                              },
                              {
                                "type": "text",
                                "value": ", ",
                                "position": {
                                  "start": {
                                    "line": 6,
                                    "column": 106,
                                    "offset": 317
                                  },
                                  "end": {
                                    "line": 6,
                                    "column": 108,
                                    "offset": 319
                                  },
                                  "indent": []
                                }
                              },
                              {
                                "type": "link",
                                "url": "#emit-name",
                                "title": null,
                                "jsdoc": true,
                                "children": [
                                  {
                                    "type": "text",
                                    "value": ".Emit()"
                                  }
                                ],
                                "position": {
                                  "start": {
                                    "line": 6,
                                    "column": 108,
                                    "offset": 319
                                  },
                                  "end": {
                                    "line": 6,
                                    "column": 134,
                                    "offset": 345
                                  },
                                  "indent": []
                                }
                              },
                              {
                                "type": "text",
                                "value": "}",
                                "position": {
                                  "start": {
                                    "line": 6,
                                    "column": 134,
                                    "offset": 345
                                  },
                                  "end": {
                                    "line": 6,
                                    "column": 135,
                                    "offset": 346
                                  },
                                  "indent": []
                                }
                              }
                            ],
                            "position": {
                              "start": {
                                "line": 6,
                                "column": 4,
                                "offset": 215
                              },
                              "end": {
                                "line": 6,
                                "column": 135,
                                "offset": 346
                              },
                              "indent": []
                            }
                          }
                        ],
                        "position": {
                          "start": {
                            "line": 6,
                            "column": 1,
                            "offset": 212
                          },
                          "end": {
                            "line": 6,
                            "column": 135,
                            "offset": 346
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 6,
                        "column": 1,
                        "offset": 212
                      },
                      "end": {
                        "line": 6,
                        "column": 135,
                        "offset": 346
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 6,
                    "column": 135,
                    "offset": 346
                  }
                }
              },
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "object"
                  },
                  {
                    "type": "NameExpression",
                    "name": "function"
                  }
                ]
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "A function that removes all listeners added\n by this method.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 2,
                            "column": 17,
                            "offset": 60
                          },
                          "indent": [
                            1
                          ]
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 2,
                        "column": 17,
                        "offset": 60
                      },
                      "indent": [
                        1
                      ]
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 2,
                    "column": 17,
                    "offset": 60
                  }
                }
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "function"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "memberof": "statebotFsm",
          "scope": "instance",
          "kind": "function",
          "name": "performTransitions",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "statebotFsm",
              "kind": "typedef"
            },
            {
              "name": "performTransitions",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "statebotFsm#performTransitions"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Returns the previous state.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 28,
                        "offset": 27
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 28,
                    "offset": 27
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 28,
                "offset": 27
              }
            }
          },
          "tags": [
            {
              "title": "memberof",
              "description": "statebotFsm",
              "lineNumber": 3
            },
            {
              "title": "instance",
              "description": null,
              "lineNumber": 4
            },
            {
              "title": "function",
              "description": null,
              "lineNumber": 5,
              "name": null
            },
            {
              "title": "returns",
              "description": "The previous state, or `undefined` if there isn't one (ie; you\n have just called {@link #statebotfsmreset|.reset()}, or the\n machine has just started.)",
              "lineNumber": 6,
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "string"
                  },
                  {
                    "type": "UndefinedLiteral"
                  }
                ]
              }
            },
            {
              "title": "example",
              "description": "var machine = Statebot('simple-sender', {\n  chart: `\n    idle -> sending -> done\n  `\n})\n\nmachine.enter('sending')\nmachine.previousState()\n// \"idle\"",
              "lineNumber": 11
            }
          ],
          "loc": {
            "start": {
              "line": 1553,
              "column": 4
            },
            "end": {
              "line": 1574,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 1575,
                "column": 4
              },
              "end": {
                "line": 1575,
                "column": 32
              }
            },
            "file": "/Users/mostly/Local Projects/statebot/src/statebot.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "var machine = Statebot('simple-sender', {\n  chart: `\n    idle -> sending -> done\n  `\n})\n\nmachine.enter('sending')\nmachine.previousState()\n// \"idle\""
            }
          ],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The previous state, or ",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 24,
                            "offset": 23
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "inlineCode",
                        "value": "undefined",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 24,
                            "offset": 23
                          },
                          "end": {
                            "line": 1,
                            "column": 35,
                            "offset": 34
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": " if there isn't one (ie; you\n have just called ",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 35,
                            "offset": 34
                          },
                          "end": {
                            "line": 2,
                            "column": 19,
                            "offset": 81
                          },
                          "indent": [
                            1
                          ]
                        }
                      },
                      {
                        "type": "link",
                        "url": "#statebotfsmreset",
                        "title": null,
                        "jsdoc": true,
                        "children": [
                          {
                            "type": "text",
                            "value": ".reset()"
                          }
                        ],
                        "position": {
                          "start": {
                            "line": 2,
                            "column": 19,
                            "offset": 81
                          },
                          "end": {
                            "line": 2,
                            "column": 53,
                            "offset": 115
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": ", or the\n machine has just started.)",
                        "position": {
                          "start": {
                            "line": 2,
                            "column": 53,
                            "offset": 115
                          },
                          "end": {
                            "line": 3,
                            "column": 28,
                            "offset": 151
                          },
                          "indent": [
                            1
                          ]
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 3,
                        "column": 28,
                        "offset": 151
                      },
                      "indent": [
                        1,
                        1
                      ]
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 3,
                    "column": 28,
                    "offset": 151
                  }
                }
              },
              "title": "returns",
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "string"
                  },
                  {
                    "type": "UndefinedLiteral"
                  }
                ]
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "memberof": "statebotFsm",
          "scope": "instance",
          "kind": "function",
          "name": "previousState",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "statebotFsm",
              "kind": "typedef"
            },
            {
              "name": "previousState",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "statebotFsm#previousState"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Returns the state-machine to its starting-state and clears the\nstate-history.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 2,
                        "column": 15,
                        "offset": 77
                      },
                      "indent": [
                        1
                      ]
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 2,
                    "column": 15,
                    "offset": 77
                  },
                  "indent": [
                    1
                  ]
                }
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "All listeners will still be attached, but no events or transitions will be fired.",
                    "position": {
                      "start": {
                        "line": 4,
                        "column": 1,
                        "offset": 79
                      },
                      "end": {
                        "line": 4,
                        "column": 82,
                        "offset": 160
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 4,
                    "column": 1,
                    "offset": 79
                  },
                  "end": {
                    "line": 4,
                    "column": 82,
                    "offset": 160
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 4,
                "column": 82,
                "offset": 160
              }
            }
          },
          "tags": [
            {
              "title": "memberof",
              "description": "statebotFsm",
              "lineNumber": 6
            },
            {
              "title": "instance",
              "description": null,
              "lineNumber": 7
            },
            {
              "title": "function",
              "description": null,
              "lineNumber": 8,
              "name": null
            },
            {
              "title": "example",
              "description": "var machine = Statebot('carousel', {\n  chart: `\n    page-1 ->\n    page-2 ->\n    page-3 ->\n    page-4 -> page-1\n  `\n})\n\nmachine.enter('page-2')\nmachine.reset()\nmachine.currentState()\n// \"page-1\"",
              "lineNumber": 10
            }
          ],
          "loc": {
            "start": {
              "line": 1577,
              "column": 4
            },
            "end": {
              "line": 1601,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 1602,
                "column": 4
              },
              "end": {
                "line": 1602,
                "column": 16
              }
            },
            "file": "/Users/mostly/Local Projects/statebot/src/statebot.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "var machine = Statebot('carousel', {\n  chart: `\n    page-1 ->\n    page-2 ->\n    page-3 ->\n    page-4 -> page-1\n  `\n})\n\nmachine.enter('page-2')\nmachine.reset()\nmachine.currentState()\n// \"page-1\""
            }
          ],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "memberof": "statebotFsm",
          "scope": "instance",
          "kind": "function",
          "name": "reset",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "statebotFsm",
              "kind": "typedef"
            },
            {
              "name": "reset",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "statebotFsm#reset"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Return an ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 11,
                        "offset": 10
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "array",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 11,
                        "offset": 10
                      },
                      "end": {
                        "line": 1,
                        "column": 18,
                        "offset": 17
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " of states accessible from the state specified.\nIf no state is passed-in, the ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 18,
                        "offset": 17
                      },
                      "end": {
                        "line": 2,
                        "column": 31,
                        "offset": 95
                      },
                      "indent": [
                        1
                      ]
                    }
                  },
                  {
                    "type": "link",
                    "url": "#statebotfsmcurrentstate",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": ".currentState()"
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 2,
                        "column": 31,
                        "offset": 95
                      },
                      "end": {
                        "line": 2,
                        "column": 79,
                        "offset": 143
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " is used.",
                    "position": {
                      "start": {
                        "line": 2,
                        "column": 79,
                        "offset": 143
                      },
                      "end": {
                        "line": 2,
                        "column": 88,
                        "offset": 152
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 2,
                    "column": 88,
                    "offset": 152
                  },
                  "indent": [
                    1
                  ]
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 2,
                "column": 88,
                "offset": 152
              }
            }
          },
          "tags": [
            {
              "title": "memberof",
              "description": "statebotFsm",
              "lineNumber": 4
            },
            {
              "title": "instance",
              "description": null,
              "lineNumber": 5
            },
            {
              "title": "function",
              "description": null,
              "lineNumber": 6,
              "name": null
            },
            {
              "title": "param",
              "description": "The state to check. {@link #statebotfsmcurrentstate|.currentState()}\n if unspecified.",
              "lineNumber": 7,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              "name": "state"
            },
            {
              "title": "returns",
              "description": null,
              "lineNumber": 9,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "String"
                  }
                ]
              }
            },
            {
              "title": "example",
              "description": "var machine = Statebot('half-duplex', {\n  chart: `\n    idle -> sending | receiving -> done\n  `\n})\n\nmachine.statesAvailableFromHere()\n// [\"sending\", \"receiving\"]\n\nmachine.statesAvailableFromHere('receiving')\n// [\"done\"]",
              "lineNumber": 10
            }
          ],
          "loc": {
            "start": {
              "line": 1604,
              "column": 4
            },
            "end": {
              "line": 1626,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 1627,
                "column": 4
              },
              "end": {
                "line": 1627,
                "column": 52
              }
            },
            "file": "/Users/mostly/Local Projects/statebot/src/statebot.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "var machine = Statebot('half-duplex', {\n  chart: `\n    idle -> sending | receiving -> done\n  `\n})\n\nmachine.statesAvailableFromHere()\n// [\"sending\", \"receiving\"]\n\nmachine.statesAvailableFromHere('receiving')\n// [\"done\"]"
            }
          ],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "state",
              "lineNumber": 7,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The state to check. ",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 21,
                            "offset": 20
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "link",
                        "url": "#statebotfsmcurrentstate",
                        "title": null,
                        "jsdoc": true,
                        "children": [
                          {
                            "type": "text",
                            "value": ".currentState()"
                          }
                        ],
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 21,
                            "offset": 20
                          },
                          "end": {
                            "line": 1,
                            "column": 69,
                            "offset": 68
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": "\n if unspecified.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 69,
                            "offset": 68
                          },
                          "end": {
                            "line": 2,
                            "column": 17,
                            "offset": 85
                          },
                          "indent": [
                            1
                          ]
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 2,
                        "column": 17,
                        "offset": 85
                      },
                      "indent": [
                        1
                      ]
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 2,
                    "column": 17,
                    "offset": 85
                  }
                }
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  }
                }
              },
              "title": "returns",
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "String"
                  }
                ]
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "memberof": "statebotFsm",
          "scope": "instance",
          "kind": "function",
          "name": "statesAvailableFromHere",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "statebotFsm",
              "kind": "typedef"
            },
            {
              "name": "statesAvailableFromHere",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "statebotFsm#statesAvailableFromHere"
        }
      ],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "statebotFsm",
        "kind": "typedef"
      }
    ],
    "namespace": "statebotFsm"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "link",
              "url": "#statebotfsmonentering",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": ".onEntering()"
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 45,
                  "offset": 44
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " /\n",
              "position": {
                "start": {
                  "line": 1,
                  "column": 45,
                  "offset": 44
                },
                "end": {
                  "line": 2,
                  "column": 1,
                  "offset": 47
                },
                "indent": [
                  1
                ]
              }
            },
            {
              "type": "link",
              "url": "#statebotfsmonentered",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": ".onEntered()"
                }
              ],
              "position": {
                "start": {
                  "line": 2,
                  "column": 1,
                  "offset": 47
                },
                "end": {
                  "line": 2,
                  "column": 43,
                  "offset": 89
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " callback signature.",
              "position": {
                "start": {
                  "line": 2,
                  "column": 43,
                  "offset": 89
                },
                "end": {
                  "line": 2,
                  "column": 63,
                  "offset": 109
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 63,
              "offset": 109
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 63,
          "offset": 109
        }
      }
    },
    "tags": [
      {
        "title": "callback",
        "description": "enterCallback",
        "lineNumber": 4
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "fromState"
      },
      {
        "title": "param",
        "description": "Arguments passed-down from {@link #statebotfsmenter .enter()} or\n {@link #statebotfsmemit .emit()}",
        "lineNumber": 6,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "RestType",
            "expression": {
              "type": "NameExpression",
              "name": "any"
            }
          }
        },
        "name": "args"
      }
    ],
    "loc": {
      "start": {
        "line": 1186,
        "column": 4
      },
      "end": {
        "line": 1195,
        "column": 7
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1235,
          "column": 4
        },
        "end": {
          "line": 1235,
          "column": 20
        }
      },
      "file": "/Users/mostly/Local Projects/statebot/src/statebot.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "fromState",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "args",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Arguments passed-down from ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 28,
                      "offset": 27
                    },
                    "indent": []
                  }
                },
                {
                  "type": "link",
                  "url": "#statebotfsmenter",
                  "title": null,
                  "jsdoc": true,
                  "children": [
                    {
                      "type": "text",
                      "value": ".enter()"
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 28,
                      "offset": 27
                    },
                    "end": {
                      "line": 1,
                      "column": 62,
                      "offset": 61
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " or\n ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 62,
                      "offset": 61
                    },
                    "end": {
                      "line": 2,
                      "column": 2,
                      "offset": 66
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "link",
                  "url": "#statebotfsmemit",
                  "title": null,
                  "jsdoc": true,
                  "children": [
                    {
                      "type": "text",
                      "value": ".emit()"
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 2,
                      "offset": 66
                    },
                    "end": {
                      "line": 2,
                      "column": 34,
                      "offset": 98
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 34,
                  "offset": 98
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 34,
              "offset": 98
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "RestType",
            "expression": {
              "type": "NameExpression",
              "name": "any"
            }
          }
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "typedef",
    "name": "enterCallback",
    "type": {
      "type": "NameExpression",
      "name": "Function"
    },
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "enterCallback",
        "kind": "typedef"
      }
    ],
    "namespace": "enterCallback"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "link",
              "url": "#statebotfsmonexiting",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": ".onExiting()"
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 43,
                  "offset": 42
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " /\n",
              "position": {
                "start": {
                  "line": 1,
                  "column": 43,
                  "offset": 42
                },
                "end": {
                  "line": 2,
                  "column": 1,
                  "offset": 45
                },
                "indent": [
                  1
                ]
              }
            },
            {
              "type": "link",
              "url": "#statebotfsmonexited",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": ".onExited()"
                }
              ],
              "position": {
                "start": {
                  "line": 2,
                  "column": 1,
                  "offset": 45
                },
                "end": {
                  "line": 2,
                  "column": 41,
                  "offset": 85
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " callback signature.",
              "position": {
                "start": {
                  "line": 2,
                  "column": 41,
                  "offset": 85
                },
                "end": {
                  "line": 2,
                  "column": 61,
                  "offset": 105
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 61,
              "offset": 105
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 61,
          "offset": 105
        }
      }
    },
    "tags": [
      {
        "title": "callback",
        "description": "exitCallback",
        "lineNumber": 4
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "toState"
      },
      {
        "title": "param",
        "description": "Arguments passed-down from {@link #statebotfsmenter .enter()} or\n {@link #statebotfsmemit .emit()}",
        "lineNumber": 6,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "RestType",
            "expression": {
              "type": "NameExpression",
              "name": "any"
            }
          }
        },
        "name": "args"
      }
    ],
    "loc": {
      "start": {
        "line": 1307,
        "column": 4
      },
      "end": {
        "line": 1316,
        "column": 7
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1347,
          "column": 4
        },
        "end": {
          "line": 1347,
          "column": 40
        }
      },
      "file": "/Users/mostly/Local Projects/statebot/src/statebot.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "toState",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "args",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Arguments passed-down from ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 28,
                      "offset": 27
                    },
                    "indent": []
                  }
                },
                {
                  "type": "link",
                  "url": "#statebotfsmenter",
                  "title": null,
                  "jsdoc": true,
                  "children": [
                    {
                      "type": "text",
                      "value": ".enter()"
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 28,
                      "offset": 27
                    },
                    "end": {
                      "line": 1,
                      "column": 62,
                      "offset": 61
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " or\n ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 62,
                      "offset": 61
                    },
                    "end": {
                      "line": 2,
                      "column": 2,
                      "offset": 66
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "link",
                  "url": "#statebotfsmemit",
                  "title": null,
                  "jsdoc": true,
                  "children": [
                    {
                      "type": "text",
                      "value": ".emit()"
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 2,
                      "offset": 66
                    },
                    "end": {
                      "line": 2,
                      "column": 34,
                      "offset": 98
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 34,
                  "offset": 98
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 34,
              "offset": 98
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "RestType",
            "expression": {
              "type": "NameExpression",
              "name": "any"
            }
          }
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "typedef",
    "name": "exitCallback",
    "type": {
      "type": "NameExpression",
      "name": "Function"
    },
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "exitCallback",
        "kind": "typedef"
      }
    ],
    "namespace": "exitCallback"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "link",
              "url": "#statebotfsmonswitching",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": ".onSwitching()"
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 47,
                  "offset": 46
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " /\n",
              "position": {
                "start": {
                  "line": 1,
                  "column": 47,
                  "offset": 46
                },
                "end": {
                  "line": 2,
                  "column": 1,
                  "offset": 49
                },
                "indent": [
                  1
                ]
              }
            },
            {
              "type": "link",
              "url": "#statebotfsmonswitched",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": ".onSwitched()"
                }
              ],
              "position": {
                "start": {
                  "line": 2,
                  "column": 1,
                  "offset": 49
                },
                "end": {
                  "line": 2,
                  "column": 45,
                  "offset": 93
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " callback signature.",
              "position": {
                "start": {
                  "line": 2,
                  "column": 45,
                  "offset": 93
                },
                "end": {
                  "line": 2,
                  "column": 65,
                  "offset": 113
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 65,
              "offset": 113
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 65,
          "offset": 113
        }
      }
    },
    "tags": [
      {
        "title": "callback",
        "description": "switchCallback",
        "lineNumber": 4
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "toState"
      },
      {
        "title": "param",
        "description": null,
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "fromState"
      },
      {
        "title": "param",
        "description": "Arguments passed-down from {@link #statebotfsmenter .enter()} or\n {@link #statebotfsmemit .emit()}",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "RestType",
            "expression": {
              "type": "NameExpression",
              "name": "any"
            }
          }
        },
        "name": "args"
      }
    ],
    "loc": {
      "start": {
        "line": 1380,
        "column": 4
      },
      "end": {
        "line": 1390,
        "column": 7
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1468,
          "column": 4
        },
        "end": {
          "line": 1468,
          "column": 76
        }
      },
      "file": "/Users/mostly/Local Projects/statebot/src/statebot.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "toState",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "fromState",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "args",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Arguments passed-down from ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 28,
                      "offset": 27
                    },
                    "indent": []
                  }
                },
                {
                  "type": "link",
                  "url": "#statebotfsmenter",
                  "title": null,
                  "jsdoc": true,
                  "children": [
                    {
                      "type": "text",
                      "value": ".enter()"
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 28,
                      "offset": 27
                    },
                    "end": {
                      "line": 1,
                      "column": 62,
                      "offset": 61
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " or\n ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 62,
                      "offset": 61
                    },
                    "end": {
                      "line": 2,
                      "column": 2,
                      "offset": 66
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "link",
                  "url": "#statebotfsmemit",
                  "title": null,
                  "jsdoc": true,
                  "children": [
                    {
                      "type": "text",
                      "value": ".emit()"
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 2,
                      "offset": 66
                    },
                    "end": {
                      "line": 2,
                      "column": 34,
                      "offset": 98
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 34,
                  "offset": 98
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 34,
              "offset": 98
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "RestType",
            "expression": {
              "type": "NameExpression",
              "name": "any"
            }
          }
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "typedef",
    "name": "switchCallback",
    "type": {
      "type": "NameExpression",
      "name": "Function"
    },
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "switchCallback",
        "kind": "typedef"
      }
    ],
    "namespace": "switchCallback"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "link",
              "url": "#statebotassertroute",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "assertRoute()"
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 43,
                  "offset": 42
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " options.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 43,
                  "offset": 42
                },
                "end": {
                  "line": 1,
                  "column": 52,
                  "offset": 51
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 52,
              "offset": 51
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 52,
          "offset": 51
        }
      }
    },
    "tags": [
      {
        "title": "typedef",
        "description": null,
        "lineNumber": 2,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "assertRouteOptions"
      },
      {
        "title": "property",
        "description": "Describe the success-condition for this assertion.",
        "lineNumber": 3,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        },
        "name": "description"
      },
      {
        "title": "property",
        "description": "Wait for the machine to be in this state before assertion begins.",
        "lineNumber": 5,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        },
        "name": "fromState",
        "default": "\"\""
      },
      {
        "title": "property",
        "description": "Run this function just before starting the assertion.",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "function"
          }
        },
        "name": "run"
      },
      {
        "title": "property",
        "description": "If we hit an unexpected state during assertion, this is a \"deviation\".\n It might be that the FSM will come back to the expected state again\n after a certain number of these. For example, if your FSM has a\n \"retry\" route configured, this number can account for it.",
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "permittedDeviations",
        "default": "0"
      },
      {
        "title": "property",
        "description": "Permitted length of time for the entire assertion, in milliseconds.",
        "lineNumber": 14,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "timeoutInMs",
        "default": "1000"
      },
      {
        "title": "property",
        "description": "Normally we want logs for assertions, right? Well, you can tune\n them just like you can with {@link #statebotoptions|statebotOptions}.",
        "lineNumber": 16,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "logLevel",
        "default": "3"
      }
    ],
    "loc": {
      "start": {
        "line": 78,
        "column": 0
      },
      "end": {
        "line": 97,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 140,
          "column": 0
        },
        "end": {
          "line": 268,
          "column": 1
        }
      },
      "file": "/Users/mostly/Local Projects/statebot/src/assertions.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [
      {
        "title": "property",
        "name": "description",
        "lineNumber": 3,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Describe the success-condition for this assertion.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 51,
                      "offset": 50
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 51,
                  "offset": 50
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 51,
              "offset": 50
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        }
      },
      {
        "title": "property",
        "name": "fromState",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Wait for the machine to be in this state before assertion begins.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 66,
                      "offset": 65
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 66,
                  "offset": 65
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 66,
              "offset": 65
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        }
      },
      {
        "title": "property",
        "name": "run",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Run this function just before starting the assertion.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 54,
                      "offset": 53
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 54,
                  "offset": 53
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 54,
              "offset": 53
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "function"
          }
        }
      },
      {
        "title": "property",
        "name": "permittedDeviations",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "If we hit an unexpected state during assertion, this is a \"deviation\".\n It might be that the FSM will come back to the expected state again\n after a certain number of these. For example, if your FSM has a\n \"retry\" route configured, this number can account for it.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 4,
                      "column": 59,
                      "offset": 263
                    },
                    "indent": [
                      1,
                      1,
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 4,
                  "column": 59,
                  "offset": 263
                },
                "indent": [
                  1,
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 4,
              "column": 59,
              "offset": 263
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "timeoutInMs",
        "lineNumber": 14,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Permitted length of time for the entire assertion, in milliseconds.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 68,
                      "offset": 67
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 68,
                  "offset": 67
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 68,
              "offset": 67
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "logLevel",
        "lineNumber": 16,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Normally we want logs for assertions, right? Well, you can tune\n them just like you can with ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 30,
                      "offset": 93
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "link",
                  "url": "#statebotoptions",
                  "title": null,
                  "jsdoc": true,
                  "children": [
                    {
                      "type": "text",
                      "value": "statebotOptions"
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 30,
                      "offset": 93
                    },
                    "end": {
                      "line": 2,
                      "column": 70,
                      "offset": 133
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ".",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 70,
                      "offset": 133
                    },
                    "end": {
                      "line": 2,
                      "column": 71,
                      "offset": 134
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 71,
                  "offset": 134
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 71,
              "offset": 134
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      }
    ],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "typedef",
    "name": "assertRouteOptions",
    "type": {
      "type": "NameExpression",
      "name": "Object"
    },
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "assertRouteOptions",
        "kind": "typedef"
      }
    ],
    "namespace": "assertRouteOptions"
  }
]