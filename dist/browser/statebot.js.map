{"version":3,"file":"statebot.js","sources":["../../node_modules/.pnpm/mitt@3.0.0/node_modules/mitt/dist/mitt.mjs","../../src/types.js","../../src/utils.js","../../src/parsing.js","../../src/statebot.js","../../assert/index.mjs","../../src/mermaid.js","../../hooks/make-hooks.mjs","../../src/browser.js"],"sourcesContent":["export default function(n){return{all:n=n||new Map,on:function(t,e){var i=n.get(t);i?i.push(e):n.set(t,[e])},off:function(t,e){var i=n.get(t);i&&(e?i.splice(i.indexOf(e)>>>0,1):n.set(t,[]))},emit:function(t,e){var i=n.get(t);i&&i.slice().map(function(n){n(e)}),(i=n.get(\"*\"))&&i.slice().map(function(n){n(t,e)})}}}\n//# sourceMappingURL=mitt.mjs.map\n","//\n// RUNTIME TYPE CHECKING\n//\n\nexport {\n  isArray,\n  isArguments,\n  isBoolean,\n  isEventEmitter,\n  isFunction,\n  isPojo,\n  isString,\n  isAllStrings,\n  isTemplateLiteral,\n  isNumber,\n  isThisValue,\n  isNull,\n  isUnset,\n  isUndefined,\n  ArgTypeError,\n  ObjTypeError\n}\n\n//\n// isType\n//\n\n// isEventEmitter\n//\nfunction isEventEmitter(obj) {\n  return (\n    isObject(obj) &&\n    isFunction(obj.emit) &&\n    (isFunction(obj.addListener) || isFunction(obj.on)) &&\n    (isFunction(obj.removeListener) || isFunction(obj.off))\n  )\n}\n\nisEventEmitter.displayName = 'isEventEmitter'\n\n// isUnset\n//\nfunction isUnset(obj) {\n  return isNull(obj) || isUndefined(obj)\n}\n\nisArray.displayName = 'isUnset'\n\n// isArray\n//\nfunction isArray(obj) {\n  return Array.isArray(obj)\n}\n\nisArray.displayName = 'isArray'\n\n// isArguments\n//\nfunction isArguments(obj) {\n  return Object.prototype.toString.call(obj) === '[object Arguments]'\n}\n\nisArguments.displayName = 'isArguments'\n\n// isBoolean\n//\nfunction isBoolean(obj) {\n  return obj === true || obj === false\n}\n\nisBoolean.displayName = 'isBoolean'\n\n// isFunction\n//\nfunction isFunction(obj) {\n  return typeof obj === 'function'\n}\n\nisFunction.displayName = 'isFunction'\n\n// isString\n//\nfunction isString(obj) {\n  return typeof obj === 'string'\n}\n\nisString.displayName = 'isString'\n\n// isAllStrings\n//\nfunction isAllStrings (arr) {\n  return isArray(arr) && arr.every(isString)\n}\n\nisAllStrings.displayName = 'isAllStrings'\n\n// isUndefined\n//\nfunction isUndefined(obj) {\n  return obj === undefined\n}\n\nisUndefined.displayName = 'isUndefined'\n\n// isNull\n//\nfunction isNull(obj) {\n  return obj === null\n}\n\nisNull.displayName = 'isNull'\n\n// isNumber\n//\nfunction isNumber(obj) {\n  return typeof obj === 'number'\n}\n\nisNumber.displayName = 'isNumber'\n\n// isObject\n//\nfunction isObject(obj) {\n  return typeof obj === 'object' && !isNull(obj)\n}\n\nisObject.displayName = 'isObject'\n\n// isPojo\n//\nfunction isPojo(obj) {\n  if (isNull(obj) || !isObject(obj) || isArguments(obj)) {\n    return false\n  }\n  return Object.getPrototypeOf(obj) === Object.prototype\n}\n\nisPojo.displayName = 'isPojo'\n\n// isTemplateLiteral\n//\nfunction isTemplateLiteral(obj) {\n  if (isString(obj)) {\n    return true\n  }\n  if (!isArray(obj)) {\n    return false\n  }\n  return obj.every(isString)\n}\n\nisTemplateLiteral.displayName = 'isTemplateLiteral'\n\n// isThisValue\n//\nfunction isThisValue(value) {\n  function inObject(obj) {\n    return obj === value\n  }\n  inObject.displayName = `isThisValue(${value})`\n  return inObject\n}\n\n//\n// ArgTypeError\n//\n\nconst typeErrorStringIfFnReturnsFalse = (argName, argTypeFn, arg) => {\n  return argTypeFn(arg)\n    ? undefined\n    : (argTypeFn.displayName || argTypeFn.name) +\n        `(${argName}) did not return true`\n}\n\nconst typeErrorStringIfTypeOfFails = (argName, argType, arg) => {\n  return typeof arg === argType\n    ? undefined\n    : `Argument \"${argName}\" should be a ${argType}`\n}\n\nconst typeErrorStringFromArgument = argMap => (arg, index) => {\n  if (index >= argMap.length) {\n    return\n  }\n\n  const { argName, argType } = argMap[index]\n  if (isUndefined(arg)) {\n    return `Argument undefined: \"${argName}\"`\n  }\n\n  const permittedArgTypes = Array.isArray(argType) ? argType : [argType]\n\n  const errorDescs = permittedArgTypes\n    .map(argType =>\n      isFunction(argType)\n        ? typeErrorStringIfFnReturnsFalse(argName, argType, arg)\n        : typeErrorStringIfTypeOfFails(argName, argType, arg)\n    )\n    .filter(isString)\n\n  const multipleTypesSpecified = permittedArgTypes.length > 1\n  const shouldError = multipleTypesSpecified\n    ? errorDescs.length > 1\n    : errorDescs.length\n\n  if (shouldError) {\n    return (\n      errorDescs.join('\\n| ') +\n      `\\n> typeof ${argName} === ${typeof arg}(${JSON.stringify(arg)})`\n    )\n  }\n}\n\nfunction ArgTypeError(namespace) {\n  return typeMap => {\n    const argMap = Object.entries(typeMap).map(([argName, argType]) => ({\n      argName,\n      argType\n    }))\n\n    return fnName =>\n      (...args) => {\n        const processedArgs = Array\n          .from(args, x => isArguments(x) ? Array.from(x) : x)\n          .flat(1)\n\n        const err = processedArgs\n          .map(typeErrorStringFromArgument(argMap))\n          .filter(isString)\n\n        if (!err.length) {\n          return\n        }\n\n        const signature = Object.keys(typeMap).join(', ')\n        return (\n          `\\n${namespace || ''}${fnName}(${signature}):\\n` +\n          `${err.map(err => `| ${err}`).join('\\n')}`\n        )\n      }\n  }\n}\n\nfunction ObjTypeError(namespace) {\n  return typeMap => {\n    const keys = Object.keys(typeMap)\n    const objTypeError = ArgTypeError(namespace)(typeMap)\n    return fnName => obj => {\n      const values = valuesOf(obj, { keys })\n      const err = objTypeError(fnName)(...values)\n      return err\n    }\n  }\n}\n\nfunction valuesOf(obj, options) {\n  const { keys } = options\n  if (!Array.isArray(keys)) {\n    return Object.values(obj)\n  }\n  return keys.reduce((acc, key) => {\n    return [...acc, obj[key]]\n  }, [])\n}\n","\n//\n// STATEBOT UTILS\n//\n\nexport {\n  Defer,\n  Definitions,\n  Logger,\n  Once,\n  Pausables,\n  ReferenceCounter,\n  Revokable,\n  uniq,\n  wrapEmitter,\n}\n\nimport { isString } from './types'\n\nfunction wrapEmitter (events) {\n  const emit = (eventName, ...args) =>\n    events.emit(eventName, args)\n\n  const addListener = events.addListener\n    ? (...args) => events.addListener(...args)\n    : (...args) => events.on(...args)\n\n  const removeListener = events.removeListener\n    ? (...args) => events.removeListener(...args)\n    : (...args) => events.off(...args)\n\n  const wrapMap = new Map()\n\n  function on (eventName, fn) {\n    let fnMeta = wrapMap.get(fn)\n    if (!fnMeta) {\n      fnMeta = {\n        handleEvent: (args = []) => fn(...[args].flat()),\n        refCount: 0\n      }\n      wrapMap.set(fn, fnMeta)\n    }\n\n    fnMeta.refCount += 1\n    addListener(eventName, fnMeta.handleEvent)\n  }\n\n  function off (eventName, fn) {\n    let fnMeta = wrapMap.get(fn)\n    if (!fnMeta) {\n      return\n    }\n\n    removeListener(eventName, fnMeta.handleEvent)\n    fnMeta.refCount -= 1\n    if (fnMeta.refCount === 0) {\n      wrapMap.delete(fn)\n    }\n  }\n\n  return {\n    emit,\n    on,\n    off\n  }\n}\n\n//\n// uniq\n//\n\nfunction uniq (input) {\n  return input.reduce((acc, one) =>\n    acc.indexOf(one) === -1\n      ? (acc.push(one), acc)\n      : acc\n    , []\n  )\n}\n\n//\n// defer\n//\n\nfunction defer (fn, ...args) {\n  const timer = setTimeout(fn, 0, ...args)\n  return () => { clearTimeout(timer) }\n}\n\nfunction Defer (fn) {\n  return (...args) => defer(fn, ...args)\n}\n\n//\n// Revokable\n//\n\nfunction Once (fn) {\n  const { revoke, fn: _fn } = Revokable(fn)\n  let result\n  return function (...args) {\n    result = _fn(...args)\n    revoke()\n    return result\n  }\n}\n\nfunction Revokable (fn) {\n  let revoked = false\n  let result\n  return {\n    fn: (...args) => {\n      if (!revoked) {\n        result = fn(...args)\n      }\n      return result\n    },\n    revoke: () => {\n      revoked = true\n    }\n  }\n}\n\n//\n// Pausables\n//\n\nfunction Pausables (startPaused, runFnWhenPaused) {\n  runFnWhenPaused = runFnWhenPaused || function () {}\n  let paused = !!startPaused\n\n  function Pausable (fn) {\n    return (...args) => {\n      if (paused) {\n        runFnWhenPaused()\n        return false\n      }\n      return fn(...args)\n    }\n  }\n\n  return {\n    Pausable,\n    paused: () => paused,\n    pause: () => { paused = true },\n    resume: () => { paused = false },\n  }\n}\n\n//\n// ReferenceCounter\n//\n\nfunction ReferenceCounter (logPrefix, kind, description, ...expecting) {\n  const _refs = [...expecting]\n    .flat()\n    .reduce((acc, ref) => ({ ...acc, [ref]: 0 }), {})\n\n  function increase (ref) {\n    _refs[ref] = countOf(ref) + 1\n    return () => { decrease(ref) }\n  }\n  function decrease (ref) {\n    const count = countOf(ref) - 1\n    _refs[ref] = Math.max(count, 0)\n  }\n  function countOf (ref) {\n    return _refs[ref] || 0\n  }\n  function refs () {\n    return { ..._refs }\n  }\n  function table () {\n    return Object.keys(_refs).sort()\n      .map(key => [key, _refs[key]])\n      .map(([ref, count]) => {\n        return {\n          [kind]: ref,\n          refs: count || 'None'\n        }\n      })\n  }\n  function toValue () {\n    return {\n      description: `${logPrefix}: ${description}:`,\n      table: table()\n    }\n  }\n  return {\n    increase,\n    decrease,\n    countOf,\n    toValue,\n    refs\n  }\n}\n\n//\n// Definitions\n//\n\nfunction Definitions() {\n  const dictionary = {}\n\n  function undefine(word, definition) {\n    dictionary[word] = (dictionary[word] || []).filter(\n      (next) => next !== definition\n    )\n    if (dictionary[word].length === 0) {\n      delete dictionary[word]\n    }\n  }\n\n  function define(word, definition) {\n    dictionary[word] = dictionary[word] || []\n    dictionary[word].push(definition)\n    return () => undefine(word, definition)\n  }\n\n  function definitionsOf(word) {\n    return dictionary[word] || []\n  }\n\n  return {\n    define,\n    undefine,\n    definitionsOf,\n  }\n}\n\n//\n// Logger\n//\n\nfunction Logger (level, _console) {\n  if (isString(level)) {\n    level = ({\n      info: 3,\n      log: 2,\n      warn: 1,\n      none: 0\n    })[level] || 3\n  }\n  function canWarn () {\n    return level >= 1\n  }\n  function canLog () {\n    return level >= 2\n  }\n  function canInfo () {\n    return level >= 3\n  }\n  const { info, table, log, warn, error } = _console || console\n  return {\n    canWarn,\n    canLog,\n    canInfo,\n\n    info: (...args) => { canInfo() && info(...args) },\n    table: (...args) => { canLog() && table(...args) },\n    log: (...args) => { canLog() && log(...args) },\n    warn: (...args) => { canWarn() && warn(...args) },\n    error: (...args) => { error(...args) }\n  }\n}\n","\n//\n// STATEBOT CHART/ROUTE PARSING\n//\n\nconst rxCRLF = /[\\r\\n]/\nconst cxPipe = '|'\nconst cxArrow = '->'\nconst rxOperators = [cxPipe, cxArrow]\n  .map(rxUnsafe => rxUnsafe.replace('|', '\\\\|'))\n  .join('|')\n\nconst rxLineContinuations = new RegExp(`(${rxOperators})$`)\nconst rxDisallowedCharacters = /[^a-z0-9!@#$%^&*:_+=<>|~.\\x2D]/gi\nconst rxComment = /(\\/\\/[^\\n\\r]*)/\n\nexport {\n  cxPipe,\n  cxArrow,\n  rxDisallowedCharacters,\n  decomposeChart,\n  decomposeRoute\n}\n\nimport { uniq } from './utils'\nimport { isTemplateLiteral, ArgTypeError } from './types'\n\nconst argTypeError = ArgTypeError('statebot.')\n\nfunction decomposeRoute (templateLiteral) {\n  const err = argTypeError(\n    { templateLiteral: isTemplateLiteral }\n  )('decomposeRoute')(templateLiteral)\n  if (err) {\n    throw TypeError(err)\n  }\n\n  const lines = condensedLines(templateLiteral)\n  const linesOfTokens = tokenisedLines(lines)\n  const route = linesOfTokens.flat(2)\n\n  return route\n}\n\nfunction decomposeChart (chart) {\n  const err = argTypeError(\n    { chart: isTemplateLiteral }\n  )('decomposeChart')(chart)\n  if (err) {\n    throw TypeError(err)\n  }\n\n  const lines = condensedLines(chart)\n  const linesOfTokens = tokenisedLines(lines)\n  const linesOfRoutes = linesOfTokens\n    .flatMap(decomposeRouteFromTokens)\n\n  const linesOfTransitions = linesOfRoutes\n    .flatMap(decomposeTransitionsFromRoute)\n\n  let emptyStateFound = false\n  const routeKeys = linesOfTransitions.map(route => {\n    if (route.includes('')) {\n      emptyStateFound = true\n    }\n    return route.join(cxArrow)\n  })\n\n  const filteredRoutes = uniq(routeKeys)\n  const filteredStates = uniq(linesOfTokens.flat(3))\n\n  return {\n    transitions: filteredRoutes.map(route => route.split(cxArrow)),\n    routes: filteredRoutes,\n    states: !emptyStateFound\n      ? filteredStates.filter(Boolean)\n      : filteredStates\n  }\n}\n\nexport function linesFrom (strOrArr) {\n  return [strOrArr]\n    .flat()\n    .reduce((acc, line) => [...acc, ...line.split(rxCRLF)], [])\n}\n\nfunction condensedLines (strOrArr) {\n  const input = linesFrom(strOrArr)\n  const output = []\n\n  let previousLineHasContinuation = false\n\n  const condenseLine = (condensedLine, line) => {\n    const sanitisedLine = line\n      .replace(rxComment, '')\n      .replace(rxDisallowedCharacters, '')\n\n    if (!sanitisedLine) {\n      return condensedLine\n    }\n\n    previousLineHasContinuation = rxLineContinuations\n      .test(sanitisedLine)\n\n    if (previousLineHasContinuation) {\n      return condensedLine + sanitisedLine\n    }\n\n    output.push(condensedLine + sanitisedLine)\n    return ''\n  }\n\n  const finalCondensedLine = input\n    .reduce(condenseLine, '')\n\n  if (previousLineHasContinuation || finalCondensedLine) {\n    return [...output, finalCondensedLine]\n  }\n\n  return [...output]\n}\n\nfunction tokenisedLines (lines) {\n  return lines\n    .map(line => line\n      .split(cxArrow)\n      .map(str => str.split(cxPipe))\n    )\n}\n\nfunction decomposeRouteFromTokens (line) {\n  const output = []\n\n  line.reduce((previousStates, states) => {\n    if (previousStates === false) {\n      return [...states]\n    }\n\n    output.push([previousStates, [...states]])\n    return [...states]\n  }, false)\n\n  return output\n}\n\nfunction decomposeTransitionsFromRoute([fromStates, toStates]) {\n  return fromStates.reduce(\n    (acc, fromState) => (\n      acc.push(...toStates.map(toState => [fromState, toState])), acc\n    ),\n    []\n  )\n}\n","\n//\n// STATEBOT FSM\n//\n\nexport {\n  Statebot,\n  isStatebot\n}\n\nconst ON_EXITING = 'onExiting'\nconst ON_ENTERING = 'onEntering'\nconst ON_EXITED = 'onExited'\nconst ON_ENTERED = 'onEntered'\nconst ON_SWITCHING = 'onSwitching'\nconst ON_SWITCHED = 'onSwitched'\n\nconst INTERNAL_EVENTS = {\n  [ON_SWITCHING]: '(ANY)state:changing',\n  [ON_SWITCHED]: '(ANY)state:changed'\n}\n\nimport mitt from 'mitt'\n\nimport {\n  wrapEmitter,\n  Definitions,\n  Logger,\n  ReferenceCounter,\n  Pausables,\n  Once,\n} from './utils'\n\nimport {\n  isArray,\n  isNumber,\n  isEventEmitter,\n  isFunction,\n  isPojo,\n  isString,\n  isAllStrings,\n  isUndefined,\n  ArgTypeError,\n} from './types'\n\nimport { decomposeChart, cxArrow } from './parsing'\n\nfunction Statebot (name, options) {\n  if (!isString(name)) {\n    throw new TypeError('\\nStatebot: Please specify a name for this machine')\n  }\n\n  const logPrefix = `Statebot[${name}]`\n  if (!isPojo(options)) {\n    throw new TypeError(`\\n${logPrefix}: Please specify options for this machine`)\n  }\n\n  const {\n    chart = undefined,\n    logLevel = 3,\n    historyLimit = 2\n  } = options || {}\n\n  const events = isUndefined(options.events)\n    ? wrapEmitter(mitt())\n    : isEventEmitter(options.events) && wrapEmitter(options.events)\n\n  if (!events) {\n    throw new TypeError(`\\n${logPrefix}: Invalid event-emitter specified in options`)\n  }\n\n  const { states = [], routes = [] } = chart\n    ? decomposeChart(chart)\n    : options\n\n  const { startIn = states[0] } = options\n\n  if (!states.includes(startIn)) {\n    throw new Error(`${logPrefix}: Starting-state not in chart: \"${startIn}\"`)\n  }\n\n  const argTypeError = ArgTypeError(`${logPrefix}#`)\n  const _console = Logger(logLevel, console)\n  const { canWarn } = _console\n\n  const stateHistory = [startIn]\n  const stateHistoryLimit = Math.max(historyLimit, 2)\n\n  let transitionId = 0\n\n  const { pause, resume, paused, Pausable } = Pausables(false, () =>\n    _console.warn(`${logPrefix}: Ignoring callback, paused`)\n  )\n\n  const transitionsFromEvents = Definitions()\n\n  const internalEvents = wrapEmitter(mitt())\n  const emitInternalEvent = Pausable(internalEvents.emit)\n\n  function onInternalEvent (eventName, cb) {\n    internalEvents.on(eventName, cb)\n    return () => internalEvents.off(eventName, cb)\n  }\n\n  const statesHandled = ReferenceCounter(\n    logPrefix,\n    'states',\n    'Listening for the following state-changes',\n    [...states]\n  )\n  const routesHandled = ReferenceCounter(\n    logPrefix,\n    'transitions',\n    'Listening for the following transitions',\n    [...routes]\n  )\n  const eventsHandled = ReferenceCounter(\n    logPrefix,\n    'events',\n    'Listening for the following events'\n  )\n\n  // Interprets onTransitions() and performTransitions()\n  function applyHitcher (hitcher, fnName) {\n    const hitcherActions =\n      isFunction(hitcher)\n        ? hitcher({ enter, emit, Enter, Emit })\n        : isPojo(hitcher) ? hitcher : null\n\n    if (!isPojo(hitcherActions)) {\n      throw new TypeError(\n        `${logPrefix}#${fnName}(): Expected an object, or a function that returns an object`\n      )\n    }\n\n    const allStates = []\n    const allRoutes = []\n    const {\n      transitionsForEvents,\n      transitionsOnly\n    } = decomposeHitcherActions(hitcherActions)\n\n    // Handle performTransitions() signature\n    // (configs with an event, and maybe a then-method too)\n    const eventsMappedToTransitionConfigs = Object\n      .entries(transitionsForEvents)\n      .reduce(decomposeTransitionsForEvent, {})\n\n    // Handle onTransitions() signature\n    // (transition-only, and maybe a then-function too)\n    const transitionConfigs = expandTransitions(transitionsOnly, canWarn)\n\n    // Now install handlers for on/performTransitions:\n    const allCleanupFns =\n      Object\n        .entries(eventsMappedToTransitionConfigs)\n        .map(createEventHandlerForTransition)\n        .concat(transitionConfigs.configs.map(runThenMethodOnTransition))\n        .flat()\n\n    // Debugging\n    // (if we're at the right level)\n    if (canWarn()) {\n      allStates.push(...transitionConfigs.states)\n      allRoutes.push(...transitionConfigs.routes)\n\n      const invalidStates = allStates.filter(state => !states.includes(state))\n      const invalidRoutes = allRoutes.filter(route => !routes.includes(route))\n\n      if (invalidStates.length) {\n        _console.warn(\n          `${logPrefix}#${fnName}(): Invalid states specified:\\n` +\n          invalidStates.map(state => `  > \"${state}\"`).join('\\n')\n        )\n      }\n      if (invalidRoutes.length) {\n        _console.warn(\n          `${logPrefix}#${fnName}(): Invalid transitions specified:\\n` +\n          invalidRoutes.map(route => `  > \"${route}\"`).join('\\n')\n        )\n      }\n    }\n\n    return () => allCleanupFns.map(fn => fn())\n\n    // Helper for onTransitions()\n    function runThenMethodOnTransition (config) {\n      const { fromState, toState, action } = config\n      const route = `${fromState}->${toState}`\n      return [\n        routesHandled.increase(route),\n        onInternalEvent(route, bindActionTo(toState, action))\n      ]\n    }\n\n    // Helpers for performTransitions()\n    function decomposeTransitionsForEvent (acc, [eventName, transitionsAndAction]) {\n      const {\n        states,\n        routes,\n        configs\n      } = expandTransitions(transitionsAndAction, canWarn)\n\n      if (canWarn()) {\n        allStates.push(...states)\n        allRoutes.push(...routes)\n      }\n\n      return {\n        ...acc,\n        [eventName]: configs\n      }\n    }\n\n    function ifStateThenEnterState ({ fromState, toState, action, args }) {\n      return inState(fromState, () => {\n        enter(toState, ...args)\n        isFunction(action) && runActionFor(toState, action, ...args)\n        return true\n      })\n    }\n\n    function createEventHandlerForTransition ([eventName, configs]) {\n      return [\n        eventsHandled.increase(eventName),\n        onEvent(eventName, (...args) => {\n          const eventWasHandled = configs\n            .map(config => ({ ...config, args }))\n            .some(ifStateThenEnterState)\n\n          if (!eventWasHandled) {\n            transitionNoOp(`Event not handled: \"${eventName}\"`)\n          }\n        })\n      ].concat(\n        configs.map(({ fromState, toState }) =>\n          transitionsFromEvents.define(`${eventName}:${fromState}`, toState)\n        )\n      )\n    }\n\n    function runActionFor (state, actionFn, ...args) {\n      const onExitingState = actionFn(...args)\n      if (isFunction(onExitingState)) {\n        const uninstall = Once(enterExitMethods[ON_EXITING](state, (toState) => {\n          uninstall()\n          onExitingState(toState)\n        }))\n\n        allCleanupFns.push(uninstall)\n      }\n    }\n\n    function bindActionTo (state, actionFn) {\n      return (...args) => runActionFor(state, actionFn, ...args)\n    }\n  }\n\n  function _peek (eventName, stateObject, calledInternally = true) {\n    const err1 = argTypeError({ eventName: isString })('peek')(eventName)\n    if (err1) {\n      throw new TypeError(err1)\n    }\n\n    const eventAndState = eventName + ':' + currentState()\n    const statesFromEvent = transitionsFromEvents.definitionsOf(eventAndState)\n\n    if (statesFromEvent.length > 1) {\n      const reason =\n        `${logPrefix}: Event \"${eventName}\" causes multiple transitions.\\n` +\n        `  > From state: \"${currentState()}\"\\n` +\n        `  > To states: \"${statesFromEvent.join(', ')}\"\\n\\n` +\n        `Check your performTransitions() config.`\n\n      throw new RangeError(reason)\n    }\n\n    if (!calledInternally && statesFromEvent.length === 0) {\n      if (eventsHandled.countOf(eventName) === 0) {\n        _console.warn(`${logPrefix}: Event not handled: \"${eventName}\"`)\n      } else {\n        _console.warn(`${logPrefix}: Will not transition after emitting: \"${eventName}\"`)\n      }\n    }\n\n    const toState = statesFromEvent[0]\n\n    if (isUndefined(stateObject)) {\n      return isUndefined(toState) ? currentState() : toState\n    }\n\n    const err2 = argTypeError({ stateObject: isPojo })('peek')(stateObject)\n    if (err2) {\n      throw new TypeError(err2)\n    }\n\n    if (Object.prototype.hasOwnProperty.call(stateObject, toState)) {\n      const anyOrFn = stateObject[toState]\n      return isFunction(anyOrFn)\n        ? anyOrFn()\n        : anyOrFn\n    }\n    return null\n  }\n\n  function peek (eventName, stateObject) {\n    return _peek(eventName, stateObject, false)\n  }\n\n  function previousState () {\n    return stateHistory[stateHistory.length - 2]\n  }\n\n  function currentState () {\n    return stateHistory[stateHistory.length - 1]\n  }\n\n  function _state_canTransitionTo (...states) {\n    const err = argTypeError(\n      { states: isAllStrings }\n    )('canTransitionTo')([states])\n    if (err) {\n      throw new TypeError(err)\n    }\n\n    if (!states.length) {\n      return false\n    }\n\n    const nextStates = statesAvailableFromHere()\n    return states.every(state => nextStates.includes(state))\n  }\n\n  function canTransitionTo (...states) {\n    const testStates = states.flat()\n    if (\n      testStates.length === 2 &&\n      isString(testStates[0]) &&\n      isPojo(testStates[1])\n    ) {\n      const thisState = testStates[0]\n      const { afterEmitting } = testStates[1]\n      const err = argTypeError(\n        { thisState: isString, '{ afterEmitting }': isString }\n      )('canTransitionTo')(thisState, afterEmitting)\n      if (err) {\n        throw new TypeError(err)\n      }\n      return (\n        thisState !== currentState() &&\n        _peek(afterEmitting) === thisState\n      )\n    }\n\n    return _state_canTransitionTo(...testStates)\n  }\n\n  function statesAvailableFromHere (state) {\n    const _state = !isUndefined(state)\n      ? state\n      : currentState()\n\n    const err = argTypeError(\n      { state: isString }\n    )('statesAvailableFromHere')(_state)\n    if (err) {\n      throw new TypeError(err)\n    }\n\n    return routes.reduce((acc, route) => {\n      const [fromState, toState] = route\n        .split(cxArrow)\n        .map(state => state.trim())\n\n      return (fromState === _state)\n        ? [...acc, toState]\n        : acc\n    }, [])\n  }\n\n  function _inState (state, anyOrFn, ...fnArgs) {\n    const conditionMatches = currentState() === state\n\n    if (isUndefined(anyOrFn)) {\n      return conditionMatches\n    }\n    if (!conditionMatches) {\n      return null\n    }\n    if (isFunction(anyOrFn)) {\n      return anyOrFn(...fnArgs)\n    }\n\n    return anyOrFn\n  }\n\n  function _inStateObject(stateObject, ...fnArgs) {\n    const match = Object\n      .entries(stateObject)\n      .find(([state]) => _inState(state))\n\n    return match\n      ? _inState(...match.concat(fnArgs))\n      : null\n  }\n\n  function inState (...args) {\n    const err = argTypeError(\n      { state: [isString, isPojo] }\n    )('inState')(args[0])\n    if (err) {\n      throw new TypeError(err)\n    }\n\n    return isPojo(args[0])\n      ? _inStateObject(...args)\n      : _inState(...args)\n  }\n\n  const emit = (eventName, ...args) => {\n    const err = argTypeError(\n      { eventName: isString }\n    )('emit')(eventName)\n    if (err) {\n      throw new TypeError(err)\n    }\n    _peek(eventName)\n    return events.emit(eventName, ...args)\n  }\n\n  const enter = (state, ...args) => {\n    const err = argTypeError(\n      { state: isString }\n    )('enter')(state)\n    if (err) {\n      throw new TypeError(err)\n    }\n\n    const inState = currentState()\n    const toState = state\n\n    if (toState === inState) {\n      transitionNoOp(`Already in state: \"${toState}\"`)\n      return false\n    }\n\n    if (!states.includes(toState)) {\n      transitionNoOp(`Invalid state \"${toState}\", not switching`)\n      return false\n    }\n\n    const nextRoute = `${inState}->${toState}`\n    if (!routes.includes(nextRoute)) {\n      transitionNoOp(`Invalid transition \"${nextRoute}\", not switching`)\n      return false\n    }\n\n    // Fell-through, can enter next state\n    _console.info(`${logPrefix}: tId<${++transitionId}>: ${nextRoute}`)\n\n    stateHistory.push(toState)\n    if (stateHistory.length > stateHistoryLimit) {\n      stateHistory.shift()\n    }\n\n    emitInternalEvent(INTERNAL_EVENTS[ON_SWITCHING], toState, inState, ...args)\n    emitInternalEvent(nextRoute, ...args)\n    emitInternalEvent(INTERNAL_EVENTS[ON_SWITCHED], toState, inState, ...args)\n\n    return true\n  }\n\n  function onEvent (eventName, cb) {\n    const err = argTypeError(\n      { eventName: isString, cb: isFunction }\n    )('onEvent')(eventName, cb)\n    if (err) {\n      throw new TypeError(err)\n    }\n\n    events.on(eventName, cb)\n    return () => events.off(eventName, cb)\n  }\n\n  const switchMethods = Object\n    .keys(INTERNAL_EVENTS)\n    .reduce((obj, methodName) => ({\n      ...obj,\n      [methodName]: cb => {\n        const err = argTypeError({ cb: isFunction })(methodName)(cb)\n        if (err) {\n          throw new TypeError(err)\n        }\n\n        const decreaseRefCount = statesHandled.increase(\n          INTERNAL_EVENTS[methodName]\n        )\n        const removeEvent = onInternalEvent(\n          INTERNAL_EVENTS[methodName], cb\n        )\n\n        return () => {\n          removeEvent()\n          decreaseRefCount()\n        }\n      }\n    }), {})\n\n  const enterExitMethods = [\n    [ON_EXITING, ON_SWITCHING],\n    [ON_ENTERING, ON_SWITCHING],\n    [ON_EXITED, ON_SWITCHED],\n    [ON_ENTERED, ON_SWITCHED]\n  ]\n    .reduce((obj, names) => {\n      const [methodName, switchMethod] = names\n      const name = methodName.slice(2)\n      const eventName = name.toLowerCase()\n\n      return {\n        ...obj,\n        [methodName]: (state, cb) => {\n          const err = argTypeError(\n            { state: isString, cb: isFunction }\n          )(methodName)(state, cb)\n          if (err) {\n            throw new TypeError(err)\n          }\n\n          const decreaseRefCounts = [\n            statesHandled.increase(state),\n            statesHandled.increase(`${state}:${eventName}`)\n          ]\n\n          const removeEvent = switchMethods[switchMethod](\n            (toState, fromState, ...args) => {\n              if (name.indexOf('Exit') === 0) {\n                state === fromState && cb(toState, ...args)\n              } else {\n                state === toState && cb(fromState, ...args)\n              }\n            }\n          )\n\n          return () => {\n            removeEvent()\n            decreaseRefCounts.map(fn => fn())\n          }\n        }\n      }\n    }, {})\n\n  function Emit (eventName, ...curriedArgs) {\n    const err = argTypeError({ eventName: isString })('Emit')(eventName)\n    if (err) {\n      throw new TypeError(err)\n    }\n\n    return (...args) => emit(eventName, ...[...curriedArgs, ...args])\n  }\n\n  function Enter (state, ...curriedArgs) {\n    const err = argTypeError({ state: isString })('Enter')(state)\n    if (err) {\n      throw new TypeError(err)\n    }\n\n    return (...args) => enter(state, ...[...curriedArgs, ...args])\n  }\n\n  function _InState (state, anyOrFn, ...curriedFnArgs) {\n    return (...fnArgs) =>\n      inState(state, anyOrFn, ...[...curriedFnArgs, ...fnArgs])\n  }\n\n  function _InStateObject(stateObject, ...curriedFnArgs) {\n    return (...fnArgs) =>\n      inState(stateObject, ...[...curriedFnArgs, ...fnArgs])\n  }\n\n  function InState (...args) {\n    const err = argTypeError({ state: [isString, isPojo] })('InState')(args[0])\n    if (err) {\n      throw new TypeError(err)\n    }\n\n    return isPojo(args[0])\n      ? _InStateObject(...args)\n      : _InState(...args)\n  }\n\n  function reset () {\n    _console.warn(`${logPrefix}: State-machine reset!`)\n\n    stateHistory.length = 0\n    stateHistory.push(startIn)\n  }\n\n  function transitionNoOp (message) {\n    const lastState = previousState()\n    const inState = currentState()\n    const prevRoute =\n      `${isUndefined(lastState) ? '[undefined]' : lastState}->${inState}`\n\n    const availableStates = statesAvailableFromHere()\n    if (!availableStates.length) {\n      _console.info(\n        `${logPrefix}: ${message}\\n` +\n          `  > Previous transition: \"${prevRoute}\"\\n` +\n          `  > There are no states available from \"${inState}\"`\n      )\n    } else {\n      _console.info(\n        `${logPrefix}: ${message}\\n` +\n          `  > Previous transition: \"${prevRoute}\"\\n` +\n          `  > From \"${inState}\", valid states are: [${availableStates\n            .map(state => `\"${state}\"`)\n            .join(', ')}]`\n      )\n    }\n  }\n\n  function inspect () {\n    return {\n      states: statesHandled.refs(),\n      transitions: routesHandled.refs(),\n      events: eventsHandled.refs()\n    }\n  }\n\n  function info () {\n    _console.log(`${logPrefix}: Information about this state-machine`)\n\n    logRefCounterInfo(statesHandled)\n    logRefCounterInfo(routesHandled)\n    logRefCounterInfo(eventsHandled)\n  }\n\n  function logRefCounterInfo (refCounter) {\n    const { description, table } = refCounter.toValue()\n    _console.log(description)\n    if (table.length) {\n      _console.table(table)\n    } else {\n      _console.log('  > No information')\n    }\n  }\n\n  return {\n    __STATEBOT__: 1,\n    statesAvailableFromHere,\n    canTransitionTo,\n    currentState,\n    previousState,\n    history: () => [...stateHistory],\n\n    emit: Pausable(emit),\n    Emit: Pausable(Emit),\n    enter: Pausable(enter),\n    Enter: Pausable(Enter),\n    inState,\n    InState,\n\n    info: () => info(),\n    inspect: () => inspect(),\n    name: () => name,\n\n    onEntered: enterExitMethods[ON_ENTERED],\n    onEntering: enterExitMethods[ON_ENTERING],\n    onExited: enterExitMethods[ON_EXITED],\n    onExiting: enterExitMethods[ON_EXITING],\n    onSwitched: switchMethods[ON_SWITCHED],\n    onSwitching: switchMethods[ON_SWITCHING],\n\n    onEvent,\n    onTransitions: transitions => applyHitcher(transitions, 'onTransitions'),\n    performTransitions: transitions => applyHitcher(transitions, 'performTransitions'),\n\n    pause,\n    paused,\n    peek,\n    reset,\n    resume,\n  }\n}\n\nfunction decomposeHitcherActions (hitcherActions) {\n  // For: performTransitions()\n  const transitionsForEvents = {}\n\n  // For: onTransitions()\n  const transitionsOnly = []\n\n  Object\n    .entries(hitcherActions)\n    .map(([routeChart, actionFnOrConfigObj]) => {\n      if (isFunction(actionFnOrConfigObj)) {\n        transitionsOnly.push({ routeChart, action: actionFnOrConfigObj })\n        return\n      }\n      if (!isPojo(actionFnOrConfigObj)) {\n        return\n      }\n\n      const { on: _on, then: _then } = actionFnOrConfigObj\n      const hasValidEventNames = isString(_on) || isArray(_on)\n      if (hasValidEventNames) {\n        const eventNames = [_on].flat()\n        eventNames.map(name => {\n          transitionsForEvents[name] = transitionsForEvents[name] || []\n          transitionsForEvents[name].push({ routeChart, action: _then })\n        })\n        return\n      }\n\n      // Behave like onTransitions() if a \"then\" is specified but\n      // there is no \"on\" event that triggers it\n      if (isFunction(_then)) {\n        transitionsOnly.push({ routeChart, action: actionFnOrConfigObj })\n      }\n    })\n\n  return { transitionsForEvents, transitionsOnly }\n}\n\nfunction expandTransitions (configs, canWarn) {\n  const allStates = []\n  const allRoutes = []\n\n  const _configs = configs.reduce((acc, config) => {\n    const { routeChart, action } = config\n    const { states, routes, transitions } = decomposeChart(routeChart)\n    if (canWarn()) {\n      allStates.push(...states)\n      allRoutes.push(...routes)\n    }\n    return [\n      ...acc,\n      ...transitions.map(([fromState, toState]) =>\n        ({ fromState, toState, action })\n      )\n    ]\n  }, [])\n\n  return {\n    configs: _configs,\n    states: allStates,\n    routes: allRoutes\n  }\n}\n\nfunction isStatebot (object) {\n  return (\n    isPojo(object) &&\n    isNumber(object.__STATEBOT__)\n  )\n}\n","\n//\n// STATEBOT ASSERTION HELPERS\n//\n\nexport {\n  routeIsPossible,\n  assertRoute\n}\n\nimport { isStatebot } from '../src/statebot'\nimport { decomposeRoute } from '../src/parsing'\nimport { isTemplateLiteral, ArgTypeError } from '../src/types'\nimport {\n  Defer,\n  Once,\n  Revokable,\n  Logger,\n} from '../src/utils'\n\nconst argTypeError = ArgTypeError('statebot.')\n\nfunction routeIsPossible (machine, route) {\n  const err = argTypeError(\n    { machine: isStatebot, route: isTemplateLiteral }\n  )('routeIsPossible')(machine, route)\n  if (err) {\n    throw TypeError(err)\n  }\n\n  const _route = decomposeRoute(route)\n  return _route.every((state, index) => {\n    if (index === _route.length - 1) {\n      return true\n    } else {\n      const nextState = _route[index + 1]\n      const availableStates = machine.statesAvailableFromHere(state)\n      const passes = availableStates.includes(nextState)\n      return passes\n    }\n  })\n}\n\nlet assertionId = 0\n\nfunction assertRoute (machine, expectedRoute, options) {\n  const err = argTypeError(\n    { machine: isStatebot, expectedRoute: isTemplateLiteral }\n  )('assertRoute')(machine, expectedRoute)\n  if (err) {\n    throw TypeError(err)\n  }\n\n  assertionId += 1\n\n  const {\n    description = 'Assertion complete',\n    fromState = '',\n    run = () => {},\n    permittedDeviations = 0,\n    timeoutInMs = 1000,\n    logLevel = 3\n  } = options || {}\n\n  const console = Logger(logLevel)\n\n  const prefix = `Statebot[${machine.name()}]: aId<${assertionId}>`\n  const route = decomposeRoute(expectedRoute)\n\n  console.log(`\\n${prefix}: Asserting route: [${route.join(' > ')}]`)\n  console.log(`${prefix}: > Assertion will start from state: \"${fromState}\"`)\n\n  const fromStateActionFn = Defer(run)\n  let removeFromStateActionFn = () => { }\n\n  const totalTimeTaken = TimeTaken()\n  let stateTimeTaken = TimeTaken()\n  let assertionTimeoutTimer\n  let deviations = 0\n  let pending = true\n  let unexpected = false\n\n  const consumeRoute = [...route]\n  const report = Table(\n    ['state', 'expected', 'info', 'took'],\n    ['center', 'center', 'left', 'right']\n  )\n\n  const finaliseReport = Once(err => {\n    addRow('', '', '', 'TOTAL: ' + totalTimeTaken())\n    report.lock()\n    console.log(`\\n${prefix}: ${description}: [${err ? 'FAILED' : 'SUCCESS'}]`)\n    console.table(report.content())\n    return err\n  })\n\n  const { addRow } = report\n  function enteredState (state) {\n    if (pending) {\n      addRow(state, '-', 'PENDING')\n    } else {\n      const expectedState = consumeRoute[0]\n      if (expectedState === state) {\n        addRow(state, expectedState, unexpected ? 'REALIGNED' : 'OKAY', stateTimeTaken())\n        unexpected = false\n        consumeRoute.shift()\n      } else {\n        addRow(state, expectedState, 'WRONG STATE', stateTimeTaken())\n        unexpected = true\n        deviations += 1\n      }\n      stateTimeTaken = TimeTaken()\n    }\n  }\n\n  return new Promise((resolve, reject) => {\n    if (consumeRoute.length === 0) {\n      reject(finaliseReport(new Error('NO ROUTE TO TEST')))\n      return\n    }\n\n    const clearTimeoutAndResolve = (...args) => {\n      clearTimeout(assertionTimeoutTimer)\n      removeFromStateActionFn()\n      removeOnSwitchingListener()\n      resolve(...args)\n    }\n\n    const clearTimeoutAndReject = err => {\n      clearTimeout(assertionTimeoutTimer)\n      removeFromStateActionFn()\n      removeOnSwitchingListener()\n      reject(err)\n    }\n\n    const bailout = message => {\n      while (consumeRoute.length) {\n        const expectedState = consumeRoute.shift()\n        addRow(machine.currentState(), `(${expectedState})`, message)\n        unexpected = false\n      }\n      clearTimeoutAndReject(finaliseReport(new Error(message)))\n    }\n\n    if (machine.inState(fromState)) {\n      pending = false\n      removeFromStateActionFn = fromStateActionFn()\n    }\n\n    const { revoke, fn } = Revokable(state => {\n      assertionTimeoutTimer = setTimeout(() => {\n        revoke()\n        bailout('TIMEOUT')\n      }, timeoutInMs)\n\n      enteredState(state)\n      if (pending && state === fromState) {\n        pending = false\n        removeFromStateActionFn = fromStateActionFn()\n      }\n      if (deviations > permittedDeviations) {\n        revoke()\n        bailout('TOO MANY DEVIATIONS')\n      }\n      if (consumeRoute.length <= 0) {\n        revoke()\n        clearTimeoutAndResolve(finaliseReport())\n      }\n    })\n\n    const removeOnSwitchingListener = machine.onSwitching(fn)\n  })\n}\n\nfunction Table (columns, alignments) {\n  columns = columns || []\n  alignments = alignments || []\n\n  const table = []\n  const alignment = columns.map((_, index) => alignments[index] || 'center')\n\n  let locked = false\n  function lock () {\n    locked = true\n  }\n\n  function addRow (...args) {\n    if (locked) {\n      return\n    }\n    const obj = columns.reduce((acc, col, index) => {\n      const row = args[index] || ''\n      return {\n        ...acc,\n        [col]: row\n      }\n    }, {})\n    table.push(obj)\n  }\n\n  function colSizes () {\n    return table.reduce(\n      (acc, row) => columns.map(\n        (col, index) => Math.max(row[col].length, acc[index])\n      ), columns.map(() => 0)\n    )\n  }\n\n  function content () {\n    const sizes = colSizes()\n    function formatField (value, index) {\n      const size = sizes[index]\n      const align = alignment[index]\n      if (align === 'left') {\n        return value.padEnd(size)\n      }\n      if (align === 'right') {\n        return value.padStart(size)\n      }\n      return value\n    }\n    const output = table.reduce((acc, row) => {\n      const formattedRow = columns.reduce((acc, col, index) => ({\n        ...acc,\n        [col]: formatField(row[col], index)\n      }), {})\n      return [...acc, formattedRow]\n    }, [])\n    return output\n  }\n\n  return {\n    lock: lock,\n    addRow: addRow,\n    content: content\n  }\n}\n\nfunction TimeTaken () {\n  const startTime = Date.now()\n\n  function fmt (num, digits) {\n    return num.toFixed(digits).replace(/\\.0+$/, '')\n  }\n\n  return function () {\n    const duration = Date.now() - startTime\n\n    if (duration < 500) {\n      return `${fmt(duration)} ms`\n    } else if (duration < 5000) {\n      return `${fmt(duration / 1000, 2)} s `\n    } else if (duration < 60000) {\n      return `${fmt(duration / 1000, 1)} s `\n    } else {\n      return `${fmt(duration / 1000 / 60, 1)} m `\n    }\n  }\n}\n","import { cxArrow, linesFrom } from './parsing'\n\nconst rxFrontMatter = /---[\\r\\n]+[\\w\\W]*---[\\r\\n]+[\\r\\n\\s]*/m\nconst rxMermaidHeader = /stateDiagram(-v2)?[\\r\\n\\s]*/g\nconst rxMermaidDirection = /direction\\s+(TB|TD|BT|RL|LR)[\\r\\n\\s]*/g\nconst rxMermaidComment = /%%/g\nconst rxMermaidArrow = /-->/g\nconst rxMermaidStartState = /\\[\\*\\]\\s*-->/g\nconst rxMermaidStopState = /-->\\s*\\[\\*\\]/g\n\n/**\n * Support the Mermaid Preview extension for VS Code using\n * VSTS syntax for code blocks.\n *\n * @link https://marketplace.visualstudio.com/items?itemName=vstirbu.vscode-mermaid-preview\n * @link https://github.com/vstirbu/vscode-mermaid-preview\n *\n * For RegExp, see:\n * @see https://github.com/vstirbu/vscode-mermaid-preview/blob/v1.6.3/lib/find-diagram.js#L38\n *\n * @example\n   // If you have the extension installed, enable the preview\n   // window and place your cursor in the code block below.\n\n   let mmd = `\n   ::: mermaid\n   stateDiagram\n   direction LR\n     go --> prepareToStop\n       prepareToStop --> stop\n\n     %% ...gotta keep that traffic flowing\n     stop --> prepareToGo\n       prepareToGo --> go\n   :::\n   `\n */\nconst rxMermaidPreviewVsts = /::: ?mermaid([\\s\\S]*?):::/g\n\nexport function mermaid(mmd) {\n  return linesFrom(mmd)\n    .join('\\n')\n    .replace(rxMermaidPreviewVsts, '$1')\n    .replace(rxFrontMatter, '')\n    .replace(rxMermaidHeader, '')\n    .replace(rxMermaidDirection, '')\n    .replace(rxMermaidComment, '//')\n    .replace(rxMermaidStartState, '__START__ -->')\n    .replace(rxMermaidStopState, '--> __STOP__')\n    .replace(rxMermaidArrow, cxArrow)\n}\n","export const makeHooks = ({ Statebot, useEffect, useState, useMemo }) => {\n  if (![useEffect, useState, useMemo].every(x => typeof x === 'function')) {\n    console.warn('Statebot Hooks unavailable: React or Mithril not found')\n  }\n\n  function useStatebot(bot) {\n    const [state, setState] = useState(bot.currentState())\n\n    useEffect(() => {\n      let done = false\n\n      const removeListener = bot.onSwitched((toState) => {\n        if (done) {\n          return\n        }\n        setState(toState)\n      })\n\n      return () => {\n        done = true\n        removeListener()\n      }\n    }, [bot])\n\n    return state\n  }\n\n  function useStatebotFactory(name, config) {\n    // We memoise Statebot since it's based on EventEmitter,\n    // so we create it once and add/remove listeners for\n    // the life-cycle of the component\n    const { bot, listeners } = useMemo(() => {\n      const {\n        performTransitions = {},\n        onTransitions = {},\n        ...botConfig\n      } = config || {}\n\n      const bot = Statebot(name, botConfig)\n      const listeners = [\n        bot.performTransitions(performTransitions),\n        bot.onTransitions(onTransitions),\n      ]\n\n      return {\n        bot,\n        listeners,\n      }\n    }, [])\n\n    useEffect(\n      () => () => {\n        if (typeof bot.pause === 'function') {\n          bot.pause()\n        }\n        listeners.forEach((off) => off())\n      },\n      [bot, listeners]\n    )\n\n    const state = useStatebot(bot)\n\n    return { state, bot }\n  }\n\n  function useStatebotEvent(bot, eventName, stateOrFn, maybeFn) {\n    useEffect(() => {\n      let done = false\n\n      function onSwitchFn(...args) {\n        if (done) {\n          return\n        }\n        stateOrFn(...args)\n      }\n      function onEnterOrExitFn(...args) {\n        if (done) {\n          return\n        }\n        maybeFn(...args)\n      }\n\n      const args =\n        typeof maybeFn === 'function'\n          ? [stateOrFn, onEnterOrExitFn]\n          : [onSwitchFn]\n\n      const removeListener = bot[eventName](...args)\n\n      return () => {\n        done = true\n        removeListener()\n      }\n    }, [bot, eventName, stateOrFn, maybeFn])\n  }\n\n  return {\n    useStatebot,\n    useStatebotFactory,\n    useStatebotEvent,\n  }\n}\n","//\n// STATEBOT EXPORTS\n//\n\nimport { Statebot, isStatebot } from './statebot'\nimport { assertRoute, routeIsPossible } from '../assert'\nimport { decomposeChart } from './parsing'\nimport { mermaid } from './mermaid'\nimport { makeHooks } from '../hooks/make-hooks.mjs'\n\nconst { useEffect, useState, useMemo } = (global =>\n  typeof React !== 'undefined'\n    ? // eslint-disable-next-line no-undef\n      React\n    : global)(window)\n\nconst { useStatebot, useStatebotFactory, useStatebotEvent } = makeHooks({\n  Statebot,\n  useEffect,\n  useState,\n  useMemo\n})\n\nexport {\n  Statebot,\n  isStatebot,\n  routeIsPossible,\n  assertRoute,\n  decomposeChart,\n  mermaid,\n  useStatebot,\n  useStatebotFactory,\n  useStatebotEvent\n}\n"],"names":["n","all","Map","on","t","e","i","get","push","set","off","splice","indexOf","emit","slice","map","isEventEmitter","obj","isObject","isFunction","addListener","removeListener","displayName","isArray","Array","isArguments","Object","prototype","toString","call","isString","isAllStrings","arr","every","isUndefined","undefined","isNull","isNumber","isPojo","getPrototypeOf","isTemplateLiteral","typeErrorStringIfFnReturnsFalse","argName","argTypeFn","arg","name","typeErrorStringIfTypeOfFails","argType","typeErrorStringFromArgument","argMap","index","length","permittedArgTypes","errorDescs","filter","multipleTypesSpecified","shouldError","join","JSON","stringify","ArgTypeError","namespace","typeMap","entries","_ref","fnName","_len","arguments","args","_key","processedArgs","from","x","flat","err","signature","keys","wrapEmitter","events","eventName","wrapMap","fn","fnMeta","handleEvent","refCount","delete","uniq","input","reduce","acc","one","defer","_len2","_key2","timer","setTimeout","clearTimeout","Defer","_len3","_key3","Once","revoke","_fn","Revokable","result","revoked","Pausables","startPaused","runFnWhenPaused","paused","Pausable","pause","resume","ReferenceCounter","logPrefix","kind","description","_len4","expecting","_key4","_refs","ref","increase","countOf","decrease","count","Math","max","refs","table","sort","key","toValue","Definitions","dictionary","undefine","word","definition","next","define","definitionsOf","Logger","level","_console","info","log","warn","none","canWarn","canLog","canInfo","error","console","rxCRLF","cxPipe","cxArrow","rxOperators","rxUnsafe","replace","rxLineContinuations","RegExp","rxDisallowedCharacters","rxComment","argTypeError","decomposeRoute","templateLiteral","TypeError","lines","condensedLines","linesOfTokens","tokenisedLines","route","decomposeChart","chart","linesOfRoutes","flatMap","decomposeRouteFromTokens","linesOfTransitions","decomposeTransitionsFromRoute","emptyStateFound","routeKeys","includes","filteredRoutes","filteredStates","transitions","split","routes","states","Boolean","linesFrom","strOrArr","line","output","previousLineHasContinuation","condenseLine","condensedLine","sanitisedLine","test","finalCondensedLine","str","previousStates","fromStates","toStates","fromState","toState","ON_EXITING","ON_ENTERING","ON_EXITED","ON_ENTERED","ON_SWITCHING","ON_SWITCHED","INTERNAL_EVENTS","Statebot","options","logLevel","historyLimit","mitt","startIn","Error","stateHistory","stateHistoryLimit","transitionId","transitionsFromEvents","internalEvents","emitInternalEvent","onInternalEvent","cb","statesHandled","routesHandled","eventsHandled","applyHitcher","hitcher","hitcherActions","enter","Enter","Emit","allStates","allRoutes","transitionsForEvents","transitionsOnly","decomposeHitcherActions","eventsMappedToTransitionConfigs","decomposeTransitionsForEvent","transitionConfigs","expandTransitions","allCleanupFns","createEventHandlerForTransition","concat","configs","runThenMethodOnTransition","invalidStates","state","invalidRoutes","config","action","bindActionTo","transitionsAndAction","ifStateThenEnterState","_ref2","inState","runActionFor","_ref3","onEvent","eventWasHandled","some","transitionNoOp","_ref4","actionFn","onExitingState","uninstall","enterExitMethods","_peek","stateObject","calledInternally","err1","eventAndState","currentState","statesFromEvent","reason","RangeError","err2","hasOwnProperty","anyOrFn","peek","previousState","_state_canTransitionTo","nextStates","statesAvailableFromHere","canTransitionTo","_len5","_key5","testStates","thisState","afterEmitting","_state","trim","_inState","conditionMatches","_len6","fnArgs","_key6","_inStateObject","match","find","_ref5","_len7","_key7","_len8","_key8","nextRoute","shift","_len9","_key9","switchMethods","methodName","decreaseRefCount","removeEvent","names","switchMethod","toLowerCase","decreaseRefCounts","_len10","_key10","_len11","curriedArgs","_key11","_len12","_key12","_len13","_key13","_len14","_key14","_InState","_len15","curriedFnArgs","_key15","_len16","_key16","_InStateObject","_len17","_key17","_len18","_key18","InState","reset","message","lastState","prevRoute","availableStates","inspect","logRefCounterInfo","refCounter","__STATEBOT__","history","onEntered","onEntering","onExited","onExiting","onSwitched","onSwitching","onTransitions","performTransitions","_ref6","routeChart","actionFnOrConfigObj","_on","then","_then","hasValidEventNames","eventNames","_configs","_ref7","isStatebot","object","routeIsPossible","machine","_route","nextState","passes","assertionId","assertRoute","expectedRoute","run","permittedDeviations","timeoutInMs","prefix","fromStateActionFn","removeFromStateActionFn","totalTimeTaken","TimeTaken","stateTimeTaken","assertionTimeoutTimer","deviations","pending","unexpected","consumeRoute","report","Table","finaliseReport","addRow","lock","content","enteredState","expectedState","Promise","resolve","reject","clearTimeoutAndResolve","removeOnSwitchingListener","clearTimeoutAndReject","bailout","columns","alignments","alignment","_","locked","col","row","colSizes","sizes","formatField","value","size","align","padEnd","padStart","formattedRow","startTime","Date","now","fmt","num","digits","toFixed","duration","rxFrontMatter","rxMermaidHeader","rxMermaidDirection","rxMermaidComment","rxMermaidArrow","rxMermaidStartState","rxMermaidStopState","rxMermaidPreviewVsts","mermaid","mmd","makeHooks","useEffect","useState","useMemo","useStatebot","bot","setState","done","useStatebotFactory","listeners","botConfig","forEach","useStatebotEvent","stateOrFn","maybeFn","onSwitchFn","onEnterOrExitFn","global","React","window"],"mappings":"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"}