{"version":3,"file":"statebot.dev.js","sources":["../../node_modules/.pnpm/rollup-plugin-node-builtins@2.1.2/node_modules/rollup-plugin-node-builtins/src/es6/events.js","../../src/utils.js","../../src/parsing.js","../../src/statebot.js","../../src/assertions.js"],"sourcesContent":["'use strict';\n\nvar domain;\n\n// This constructor is used to store event handlers. Instantiating this is\n// faster than explicitly calling `Object.create(null)` to get a \"clean\" empty\n// object (tested with v8 v4.9).\nfunction EventHandlers() {}\nEventHandlers.prototype = Object.create(null);\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nexport default EventEmitter;\nexport {EventEmitter};\n\n// nodejs oddity\n// require('events') === require('events').EventEmitter\nEventEmitter.EventEmitter = EventEmitter\n\nEventEmitter.usingDomains = false;\n\nEventEmitter.prototype.domain = undefined;\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\nEventEmitter.init = function() {\n  this.domain = null;\n  if (EventEmitter.usingDomains) {\n    // if there is an active domain, then attach to it.\n    if (domain.active && !(this instanceof domain.Domain)) {\n      this.domain = domain.active;\n    }\n  }\n\n  if (!this._events || this._events === Object.getPrototypeOf(this)._events) {\n    this._events = new EventHandlers();\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || isNaN(n))\n    throw new TypeError('\"n\" argument must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\n// These standalone emit* functions are used to optimize calling of event\n// handlers for fast cases because emit() itself often has a variable number of\n// arguments and can be deoptimized because of that. These functions always have\n// the same number of arguments and thus do not get deoptimized, so the code\n// inside them can execute faster.\nfunction emitNone(handler, isFn, self) {\n  if (isFn)\n    handler.call(self);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self);\n  }\n}\nfunction emitOne(handler, isFn, self, arg1) {\n  if (isFn)\n    handler.call(self, arg1);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1);\n  }\n}\nfunction emitTwo(handler, isFn, self, arg1, arg2) {\n  if (isFn)\n    handler.call(self, arg1, arg2);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2);\n  }\n}\nfunction emitThree(handler, isFn, self, arg1, arg2, arg3) {\n  if (isFn)\n    handler.call(self, arg1, arg2, arg3);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2, arg3);\n  }\n}\n\nfunction emitMany(handler, isFn, self, args) {\n  if (isFn)\n    handler.apply(self, args);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].apply(self, args);\n  }\n}\n\nEventEmitter.prototype.emit = function emit(type) {\n  var er, handler, len, args, i, events, domain;\n  var needDomainExit = false;\n  var doError = (type === 'error');\n\n  events = this._events;\n  if (events)\n    doError = (doError && events.error == null);\n  else if (!doError)\n    return false;\n\n  domain = this.domain;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    er = arguments[1];\n    if (domain) {\n      if (!er)\n        er = new Error('Uncaught, unspecified \"error\" event');\n      er.domainEmitter = this;\n      er.domain = domain;\n      er.domainThrown = false;\n      domain.emit('error', er);\n    } else if (er instanceof Error) {\n      throw er; // Unhandled 'error' event\n    } else {\n      // At least give some kind of context to the user\n      var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n      err.context = er;\n      throw err;\n    }\n    return false;\n  }\n\n  handler = events[type];\n\n  if (!handler)\n    return false;\n\n  var isFn = typeof handler === 'function';\n  len = arguments.length;\n  switch (len) {\n    // fast cases\n    case 1:\n      emitNone(handler, isFn, this);\n      break;\n    case 2:\n      emitOne(handler, isFn, this, arguments[1]);\n      break;\n    case 3:\n      emitTwo(handler, isFn, this, arguments[1], arguments[2]);\n      break;\n    case 4:\n      emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);\n      break;\n    // slower\n    default:\n      args = new Array(len - 1);\n      for (i = 1; i < len; i++)\n        args[i - 1] = arguments[i];\n      emitMany(handler, isFn, this, args);\n  }\n\n  if (needDomainExit)\n    domain.exit();\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n\n  events = target._events;\n  if (!events) {\n    events = target._events = new EventHandlers();\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (!existing) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] = prepend ? [listener, existing] :\n                                          [existing, listener];\n    } else {\n      // If we've already got an array, just append.\n      if (prepend) {\n        existing.unshift(listener);\n      } else {\n        existing.push(listener);\n      }\n    }\n\n    // Check for listener leak\n    if (!existing.warned) {\n      m = $getMaxListeners(target);\n      if (m && m > 0 && existing.length > m) {\n        existing.warned = true;\n        var w = new Error('Possible EventEmitter memory leak detected. ' +\n                            existing.length + ' ' + type + ' listeners added. ' +\n                            'Use emitter.setMaxListeners() to increase limit');\n        w.name = 'MaxListenersExceededWarning';\n        w.emitter = target;\n        w.type = type;\n        w.count = existing.length;\n        emitWarning(w);\n      }\n    }\n  }\n\n  return target;\n}\nfunction emitWarning(e) {\n  typeof console.warn === 'function' ? console.warn(e) : console.log(e);\n}\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction _onceWrap(target, type, listener) {\n  var fired = false;\n  function g() {\n    target.removeListener(type, g);\n    if (!fired) {\n      fired = true;\n      listener.apply(target, arguments);\n    }\n  }\n  g.listener = listener;\n  return g;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      list = events[type];\n      if (!list)\n        return this;\n\n      if (list === listener || (list.listener && list.listener === listener)) {\n        if (--this._eventsCount === 0)\n          this._events = new EventHandlers();\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length; i-- > 0;) {\n          if (list[i] === listener ||\n              (list[i].listener && list[i].listener === listener)) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (list.length === 1) {\n          list[0] = undefined;\n          if (--this._eventsCount === 0) {\n            this._events = new EventHandlers();\n            return this;\n          } else {\n            delete events[type];\n          }\n        } else {\n          spliceOne(list, position);\n        }\n\n        if (events.removeListener)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events;\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (!events.removeListener) {\n        if (arguments.length === 0) {\n          this._events = new EventHandlers();\n          this._eventsCount = 0;\n        } else if (events[type]) {\n          if (--this._eventsCount === 0)\n            this._events = new EventHandlers();\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        for (var i = 0, key; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = new EventHandlers();\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners) {\n        // LIFO order\n        do {\n          this.removeListener(type, listeners[listeners.length - 1]);\n        } while (listeners[0]);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  var evlistener;\n  var ret;\n  var events = this._events;\n\n  if (!events)\n    ret = [];\n  else {\n    evlistener = events[type];\n    if (!evlistener)\n      ret = [];\n    else if (typeof evlistener === 'function')\n      ret = [evlistener.listener || evlistener];\n    else\n      ret = unwrapListeners(evlistener);\n  }\n\n  return ret;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [];\n};\n\n// About 1.5x faster than the two-arg version of Array#splice().\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1)\n    list[i] = list[k];\n  list.pop();\n}\n\nfunction arrayClone(arr, i) {\n  var copy = new Array(i);\n  while (i--)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n","\n//\n// STATEBOT UTILS\n//\n\nexport {\n  isArray,\n  isEventEmitter,\n  isFunction,\n  isPojo,\n  isString,\n  isTemplateLiteral,\n  uniq,\n  Defer,\n  Once,\n  Revokable,\n  ReferenceCounter,\n  ArgTypeError,\n  Logger,\n  Pausables\n}\n\nfunction isArray (obj) {\n  return Array.isArray(obj)\n}\n\nfunction isFunction (obj) {\n  return typeof obj === 'function'\n}\n\nfunction isString (obj) {\n  return typeof obj === 'string'\n}\n\nfunction isObject (obj) {\n  return typeof obj === 'object'\n}\n\nfunction isEventEmitter (obj) {\n  return (\n    isObject(obj) &&\n    isFunction(obj.emit) &&\n    (isFunction(obj.addListener) || isFunction(obj.on)) &&\n    (isFunction(obj.removeListener) || isFunction(obj.off))\n  )\n}\n\nfunction isPojo (obj) {\n  if (obj === null || (!isObject(obj))) {\n    return false\n  }\n  return Object.getPrototypeOf(obj) === Object.prototype\n}\n\nfunction isTemplateLiteral (obj) {\n  if (isString(obj)) {\n    return true\n  }\n  if (isArray(obj)) {\n    return obj.every(item => isString(item))\n  }\n  return false\n}\n\nfunction uniq (input) {\n  return input.reduce((acc, one) =>\n    acc.indexOf(one) === -1\n      ? [...acc, one]\n      : acc\n    , []\n  )\n}\n\nfunction defer (fn, ...args) {\n  const timer = setTimeout(fn, 0, ...args)\n  return () => {\n    clearTimeout(timer)\n  }\n}\n\nfunction Defer (fn) {\n  return (...args) => defer(fn, ...args)\n}\n\nfunction Once (fn) {\n  const { revoke, fn: _fn } = Revokable(fn)\n  let result\n  return function (...args) {\n    result = _fn(...args)\n    revoke()\n    return result\n  }\n}\n\nfunction Revokable (fn) {\n  let revoked = false\n  let result\n  return {\n    fn: (...args) => {\n      if (!revoked) {\n        result = fn(...args)\n      }\n      return result\n    },\n    revoke: () => {\n      revoked = true\n    }\n  }\n}\n\nfunction Pausables (startPaused = false, runWhenPaused = () => {}) {\n  let paused = !!startPaused\n\n  function Pausable (fn) {\n    return (...args) => {\n      if (paused) {\n        runWhenPaused()\n        return false\n      }\n      return fn(...args)\n    }\n  }\n\n  return {\n    Pausable,\n    paused: () => paused,\n    pause: () => { paused = true },\n    resume: () => { paused = false },\n  }\n}\n\nfunction ReferenceCounter (name, kind, description, ...expecting) {\n  const _refs = [...expecting]\n    .flat()\n    .reduce((acc, ref) => ({ ...acc, [ref]: 0 }), {})\n\n  function increase (ref) {\n    _refs[ref] = countOf(ref) + 1\n    return () => decrease(ref)\n  }\n  function decrease (ref) {\n    const count = countOf(ref) - 1\n    _refs[ref] = Math.max(count, 0)\n  }\n  function countOf (ref) {\n    return _refs[ref] || 0\n  }\n  function refs () {\n    return { ..._refs }\n  }\n  function table () {\n    return Object.keys(_refs).sort()\n      .map(key => [key, _refs[key]])\n      .map(([ref, count]) => {\n        return {\n          [kind]: ref,\n          refs: count || 'None'\n        }\n      })\n  }\n  function toValue () {\n    return {\n      description: `Statebot[${name}]: ${description}:`,\n      table: table()\n    }\n  }\n  return {\n    increase,\n    decrease,\n    countOf,\n    toValue,\n    refs\n  }\n}\n\nfunction ArgTypeError (errPrefix = '') {\n  return function (fnName, typeMap, ...args) {\n    const signature = Object.keys(typeMap).join(', ')\n    const argMap = Object\n      .entries(typeMap)\n      .map(([argName, argType]) => ({ argName, argType }))\n\n    const err = args\n      .map((arg, index) => {\n        const { argName, argType } = argMap[index]\n        if (arg === undefined) {\n          return `Argument undefined: \"${argName}\"`\n        }\n\n        let errorDesc\n        let typeName\n        let typeMatches\n\n        if (isFunction(argType)) {\n          typeMatches = argType(arg) === true\n          typeName = argType.name\n          errorDesc = `${typeName}(${argName}) did not return true`\n        } else {\n          // eslint-disable-next-line valid-typeof\n          typeMatches = typeof arg === argType\n          typeName = argType\n          errorDesc = `Argument \"${argName}\" should be a ${typeName}`\n        }\n\n        if (!typeMatches) {\n          return (\n            `${errorDesc}: ${argName} === ${typeof arg}(${arg})`\n          )\n        }\n      })\n      .filter(Boolean)\n\n    if (!err.length) {\n      return\n    }\n\n    return (\n      `\\n${errPrefix}${fnName}(${signature}):\\n` +\n      `${err.map(err => `> ${err}`).join('\\n')}`\n    )\n  }\n}\n\nfunction Logger (level) {\n  let _level = level\n  if (isString(_level)) {\n    _level = ({\n      info: 3,\n      log: 2,\n      warn: 1,\n      none: 0\n    })[_level] || 3\n  }\n  function canWarn () {\n    return _level >= 1\n  }\n  function canLog () {\n    return _level >= 2\n  }\n  function canInfo () {\n    return _level >= 3\n  }\n  return {\n    canWarn,\n    canLog,\n    canInfo,\n\n    info: (...args) => canInfo() && console.info(...args),\n    table: (...args) => canLog() && console.table(...args),\n    log: (...args) => canLog() && console.log(...args),\n    warn: (...args) => canWarn() && console.warn(...args),\n    error: (...args) => console.error(...args)\n  }\n}\n","\n//\n// STATEBOT CHART/ROUTE PARSING\n//\n\nconst rxCRLF = /[\\r\\n]/\nconst cxPipe = '|'\nconst cxArrow = '->'\nconst rxOperators = [cxPipe, cxArrow]\n  .map(rxUnsafe => rxUnsafe.replace('|', '\\\\|'))\n  .join('|')\n\nconst rxLineContinuations = new RegExp(`(${rxOperators})$`)\nconst rxDisallowedCharacters = /[^a-z0-9!@#$%^&*:_+=<>|~.\\x2D]/gi\nconst rxComment = /(\\/\\/[^\\n\\r]*)/\n\nexport {\n  cxPipe,\n  cxArrow,\n  rxDisallowedCharacters,\n  decomposeChart,\n  decomposeRoute\n}\n\nimport { uniq, ArgTypeError, isTemplateLiteral } from './utils'\n\nconst argTypeError = ArgTypeError('statebot.')\n\nfunction decomposeRoute (templateLiteral) {\n  const err = argTypeError('decomposeRoute',\n    { templateLiteral: isTemplateLiteral },\n    templateLiteral\n  )\n  if (err) {\n    throw TypeError(err)\n  }\n\n  const lines = condensedLines(templateLiteral)\n  const linesOfTokens = tokenisedLines(lines)\n  const route = linesOfTokens.flat(2)\n\n  return route\n}\n\n/**\n * Decompose a {@link statebotChart} into an object of `states`, `routes`,\n * and `transitions`.\n *\n * Statebot() uses this internally to parse charts. Exposed for debugging.\n *\n * @memberof statebot\n * @function\n * @param {statebotChart} chart\n * @returns {Object}\n *\n * @example\n * var { states, routes, transitions } = decomposeChart`\n *   pending ->\n *     success | failure\n * `\n * // states = ['pending', 'success', 'failure']\n * // routes = [ 'pending->success', 'pending->failure']\n * // transitions = [\n * //   ['pending', 'success'],\n * //   ['pending', 'failure']\n * // ]\n */\n\nfunction decomposeChart (chart) {\n  const err = argTypeError('decomposeChart',\n    { chart: isTemplateLiteral },\n    chart\n  )\n  if (err) {\n    throw TypeError(err)\n  }\n\n  const lines = condensedLines(chart)\n  const linesOfTokens = tokenisedLines(lines)\n  const linesOfRoutes = linesOfTokens\n    .map(decomposeRouteFromTokens)\n    .flat(1)\n\n  const linesOfTransitions = linesOfRoutes\n    .map(decomposeTransitionsFromRoute)\n    .flat(1)\n\n  let emptyStateFound = false\n  const routeKeys = linesOfTransitions.map(route => {\n    if (route.includes('')) {\n      emptyStateFound = true\n    }\n    return route.join(cxArrow)\n  })\n\n  const filteredRoutes = uniq(routeKeys)\n  const filteredStates = uniq(linesOfTokens.flat(3))\n\n  return {\n    transitions: filteredRoutes.map(route => route.split(cxArrow)),\n    routes: filteredRoutes,\n    states: !emptyStateFound\n      ? filteredStates.filter(Boolean)\n      : filteredStates\n  }\n}\n\nfunction linesFrom (strOrArr) {\n  return [strOrArr]\n    .flat()\n    .reduce((acc, line) => [...acc, line.split(rxCRLF)], [])\n    .flat()\n}\n\nfunction condensedLines (strOrArr) {\n  const input = linesFrom(strOrArr)\n  const output = []\n\n  let previousLineHasContinuation = false\n\n  const finalCondensedLine = input\n    .reduce((condensedLine, line) => {\n      const sanitisedLine = line\n        .replace(rxComment, '')\n        .replace(rxDisallowedCharacters, '')\n\n      if (!sanitisedLine) {\n        return condensedLine\n      }\n\n      previousLineHasContinuation = rxLineContinuations\n        .test(sanitisedLine)\n\n      if (previousLineHasContinuation) {\n        return condensedLine + sanitisedLine\n      }\n\n      output.push(condensedLine + sanitisedLine)\n      return ''\n    }, '')\n\n  if (previousLineHasContinuation || finalCondensedLine) {\n    return [...output, finalCondensedLine]\n  }\n\n  return [...output]\n}\n\nfunction tokenisedLines (lines) {\n  return lines\n    .map(line => line\n      .split(cxArrow)\n      .map(str => str.split(cxPipe))\n    )\n}\n\nfunction decomposeRouteFromTokens (line) {\n  const output = []\n\n  line.reduce((previousStates, states) => {\n    if (previousStates === false) {\n      return [...states]\n    }\n\n    output.push([previousStates, [...states]])\n    return [...states]\n  }, false)\n\n  return output\n}\n\nfunction decomposeTransitionsFromRoute ([fromStates, toStates]) {\n  return fromStates.reduce((acc, fromState) => [\n    ...acc,\n    ...toStates.map(toState => [fromState, toState])\n  ], [])\n}\n","\n//\n// STATEBOT FSM\n//\n\nexport {\n  Statebot,\n  isStatebot\n}\n\n/**\n * Options for creating a Statebot.\n *\n * @typedef {Object} statebotOptions\n * @property {statebotChart} chart\n *  The state-chart.\n * @property {string} [startIn=auto]\n *  The state in which to start. If unspecified, the first state in the\n *  chart will be used.\n * @property {number} [logLevel=3]\n *  How noisy the logging is, from 1 to 3:\n *  ```\n *  1) console.warn\n *  2) console.warn/log/table\n *  3) console.warn/log/table/info\n *  ```\n *  `3` is the default. Argument type-errors will always `throw`.\n * @property {number} [historyLimit=2]\n *  Limit how much history the state-machine keeps. Accessed via\n *  {@link #statebotfsmhistory|statebotFsm#history()}.\n * @property {events} [events]\n *  If you wish to have your Statebots listen to events coming from\n *  a shared EventEmitter, you can pass it in here. The `emit()`/`onEvent()`/\n *  `performTransitions()` methods will use it.\n *\n *  It should have the same signature as {@link https://nodejs.org/api/events.html#events_class_eventemitter|EventEmitter}.\n *\n * Since Statebot 2.5.0 {@link https://npmjs.com/mitt|mitt} is also compatible.\n */\n\n/**\n * A description of all the states in a machine, plus all of the\n * permitted transitions between them.\n *\n * This is defined using a `string` or an `array` of strings, but\n *  {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals|Template Literals}\n * are much more convenient.\n *\n * An arrow `->` configures a **permitted transition** between two states:\n *\n * ```\n * from-state -> to-state\n * ```\n *\n * It's the only operator needed to build any chart:\n *\n * ```js\n * var promiseLikeChart = `\n *   pending -> resolved\n *   pending -> rejected\n *   resolved -> done\n *   rejected -> done\n * `\n * ```\n *\n * The \"OR\" operator `|` can help us remove some redundancy from the above example:\n *\n * ```js\n * var promiseLikeChart = `\n *   pending -> resolved | rejected\n *   resolved | rejected -> done\n * `\n * ```\n *\n * In both charts, `pending` can transition to `resolved` or `rejected`, and\n * `resolved` or `rejected` can both transition to `done`.\n *\n * We can streamline this even further:\n *\n * ```js\n * var promiseLikeChart = `\n *   pending -> (resolved | rejected) -> done\n * `\n * ```\n *\n * Again, this is exactly equivalent to the previous two examples.\n *\n * Notice in this one that we have parentheses `(` `)` surrounding `resolved`\n * and `rejected`. They are actually completely ignored by the parser, and\n * you can use them as you please to help make your charts more readable.\n *\n * A chart works exactly the same without them:\n *\n * ```js\n * var promiseLikeChart = `\n *   pending -> resolved | rejected -> done\n * `\n * ```\n *\n * Charts can also be split across multiple-lines:\n *\n * ```js\n * var promiseLikeChart = `\n *   pending ->\n *   resolved |\n *   rejected ->\n *   done\n * `\n * ```\n * Notice that all white-space is ignored on either side of the `->`\n * and `|`.\n *\n * `// Comments of this kind are allowed, too:`\n *\n * ```js\n * var promiseLikeChart = `\n *   pending -> // Where do we go from here?\n *     (resolved | rejected) -> // Ah, yes\n *\n *   // And now we're all finished\n *   done\n * `\n * ```\n *\n * Finally, here's a more full example:\n *\n * ```js\n * var dragDropChart = `\n *   idle ->\n *     drag-detect ->\n *       (dragging | clicked)\n *\n *   // Just a click, bail-out!\n *   clicked -> idle\n *\n *   // Drag detected!\n *   dragging ->\n *     drag-wait -> dragged -> drag-wait\n *\n *   // Drag finished...\n *   (drag-wait | dragged) ->\n *     (drag-done | drag-cancel) ->\n *       idle\n * `\n * ```\n *\n * @typedef {string|string[]} statebotChart\n */\n\nconst ON_EXITING = 'onExiting'\nconst ON_ENTERING = 'onEntering'\nconst ON_EXITED = 'onExited'\nconst ON_ENTERED = 'onEntered'\nconst ON_SWITCHING = 'onSwitching'\nconst ON_SWITCHED = 'onSwitched'\n\nconst INTERNAL_EVENTS = {\n  [ON_SWITCHING]: '(ANY)state:changing',\n  [ON_SWITCHED]: '(ANY)state:changed'\n}\n\nimport EventEmitter from 'events'\n\nimport {\n  isArray,\n  isEventEmitter,\n  isFunction,\n  isPojo,\n  isString,\n  ArgTypeError,\n  Logger,\n  ReferenceCounter,\n  Pausables\n} from './utils'\n\nimport { decomposeChart, cxArrow } from './parsing'\n\n/**\n * Create a {@link #statebotfsm|statebotFsm} `object`.\n *\n * @memberof statebot\n * @function\n * @example\n * var machine = Statebot('lemming', {\n *   chart: `\n *     walking -> (digging | building | falling) ->\n *       walking\n *\n *     falling -> splatting\n *     walking -> exiting\n *   `\n * })\n *\n * @param {string} name\n *  Give your Statebot a name. Used for logging and by {@link #statebotassertroute|assertRoute()}.\n * @param {statebotOptions} options\n */\n\nfunction Statebot (name, options) {\n  if (!isString(name)) {\n    throw TypeError('\\nStatebot: Please specify a name for this machine')\n  }\n\n  const logPrefix = `Statebot[${name}]`\n  if (!isPojo(options)) {\n    throw TypeError(`\\n${logPrefix}: Please specify options for this machine`)\n  }\n\n  const {\n    chart = undefined,\n    logLevel = 3,\n    historyLimit = 2\n  } = options || {}\n\n  const eventOption = options.events === undefined\n    ? new EventEmitter()\n    : isEventEmitter(options.events) && options.events\n\n  if (!eventOption) {\n    throw TypeError(`\\n${logPrefix}: Invalid event-emitter specified in options`)\n  }\n\n  const events = wrapEmitter(eventOption)\n\n  const { states = [], routes = [] } = chart\n    ? decomposeChart(chart)\n    : options\n\n  const { startIn = states[0] } = options\n\n  if (!states.includes(startIn)) {\n    throw Error(`${logPrefix}: Starting-state not in chart: \"${startIn}\"`)\n  }\n\n  const argTypeError = ArgTypeError(`${logPrefix}#`)\n  const console = Logger(logLevel)\n  const { canWarn } = console\n\n  const stateHistory = [startIn]\n  const stateHistoryLimit = Math.max(historyLimit, 2)\n  const internalEvents = wrapEmitter(new EventEmitter())\n\n  let transitionId = 0\n\n  const { pause, resume, paused, Pausable } = Pausables(false, () =>\n    console.warn(`${logPrefix}: Ignoring callback, paused`)\n  )\n\n  const emitInternalEvent = Pausable((eventName, ...args) =>\n    internalEvents.emit(eventName, args)\n  )\n\n  function onInternalEvent (eventName, cb) {\n    // curried to support mitt, which only\n    // allows two arguments to be passed to emit(),\n    // rather than an arbitrary number.\n    // Not actually using mitt internally, yet! :)\n    const cbWithCurriedArgs = args => cb(...args)\n    internalEvents.on(eventName, cbWithCurriedArgs)\n    return () => internalEvents.off(eventName, cbWithCurriedArgs)\n  }\n\n  const statesHandled = ReferenceCounter(\n    name,\n    'states',\n    'Listening for the following state-changes',\n    [...states]\n  )\n  const routesHandled = ReferenceCounter(\n    name,\n    'transitions',\n    'Listening for the following transitions',\n    [...routes]\n  )\n  const eventsHandled = ReferenceCounter(\n    name,\n    'events',\n    'Listening for the following events'\n  )\n\n  const ifStateThenEnterState = ({ fromState, toState, action, args }) =>\n    inState(fromState, () => {\n      enter(toState, ...args)\n      isFunction(action) && action(...args)\n      return true\n    })\n\n  // Interprets onTransitions() and performTransitions()\n  function applyHitcher (hitcher, fnName) {\n    const hitcherActions =\n      isFunction(hitcher)\n        ? hitcher({ enter, emit, Enter, Emit })\n        : isPojo(hitcher) ? hitcher : null\n\n    if (!isPojo(hitcherActions)) {\n      throw TypeError(\n        `Statebot[${name}]#${fnName}(): Expected an object, or a function that returns an object`\n      )\n    }\n\n    // For: performTransitions()\n    const events = {}\n\n    // For: onTransitions()\n    const transitions = []\n\n    Object\n      .entries(hitcherActions)\n      .map(([routeChart, actionOrConfig]) => {\n        if (isFunction(actionOrConfig)) {\n          transitions.push({ routeChart, action: actionOrConfig })\n        } else if (!isPojo(actionOrConfig)) {\n          return\n        }\n\n        const { on: _on, then: _then } = actionOrConfig\n        if (isString(_on) || isArray(_on)) {\n          const eventNames = [_on].flat()\n          eventNames.map(eventName => {\n            events[eventName] = events[eventName] || []\n            events[eventName].push({ routeChart, action: _then })\n          })\n        } else if (isFunction(_then)) {\n          // Behave like onTransitions() if a \"then\" is specified but\n          // there is no \"on\" event that triggers it\n          transitions.push({ routeChart, action: actionOrConfig })\n        }\n      })\n\n    const allStates = []\n    const allRoutes = []\n    const allCleanupFns = []\n\n    // performTransitions()\n    const decomposedEvents = Object\n      .entries(events)\n      .reduce((acc, [eventName, _configs]) => {\n        const { states, routes, configs } = decomposeConfigs(_configs, canWarn)\n        if (canWarn()) {\n          allStates.push(...states)\n          allRoutes.push(...routes)\n        }\n        return {\n          ...acc,\n          [eventName]: configs\n        }\n      }, {})\n\n    allCleanupFns.push(\n      ...Object\n        .entries(decomposedEvents)\n        .map(([eventName, configs]) => [\n          eventsHandled.increase(eventName),\n          onEvent(eventName, (...args) => {\n            const eventWasHandled = configs\n              .map(config => ({ ...config, args }))\n              .some(ifStateThenEnterState)\n\n            if (!eventWasHandled) {\n              transitionNoOp(`Event not handled: \"${eventName}\"`)\n            }\n          })\n        ])\n        .flat()\n    )\n\n    // onTransitions()\n    const transitionConfigs = decomposeConfigs(transitions, canWarn)\n\n    if (canWarn()) {\n      allStates.push(...transitionConfigs.states)\n      allRoutes.push(...transitionConfigs.routes)\n    }\n\n    allCleanupFns.push(\n      ...transitionConfigs.configs\n        .map(transition => {\n          const { fromState, toState, action } = transition\n          const route = `${fromState}->${toState}`\n          return [\n            routesHandled.increase(route),\n            onInternalEvent(route, action)\n          ]\n        })\n        .flat()\n    )\n\n    // Debugging, if we're at the right level\n    if (canWarn()) {\n      const invalidStates = allStates.filter(state => !states.includes(state))\n      const invalidRoutes = allRoutes.filter(route => !routes.includes(route))\n      if (invalidStates.length) {\n        console.warn(\n          `Statebot[${name}]#${fnName}(): Invalid states specified:\\n` +\n          invalidStates.map(state => `  > \"${state}\"`).join('\\n')\n        )\n      }\n      if (invalidRoutes.length) {\n        console.warn(\n          `Statebot[${name}]#${fnName}(): Invalid transitions specified:\\n` +\n          invalidRoutes.map(route => `  > \"${route}\"`).join('\\n')\n        )\n      }\n    }\n\n    return () => allCleanupFns.map(fn => fn())\n  }\n\n  function previousState () {\n    return stateHistory[stateHistory.length - 2]\n  }\n\n  function currentState () {\n    return stateHistory[stateHistory.length - 1]\n  }\n\n  function canTransitionTo (...states) {\n    const testStates = states.flat()\n    const err = argTypeError('canTransitionTo', { state: isString }, testStates[0])\n    if (err) {\n      throw TypeError(err)\n    }\n\n    if (!testStates.length) {\n      return false\n    }\n\n    const nextStates = statesAvailableFromHere()\n    return testStates.every(state => nextStates.includes(state))\n  }\n\n  function statesAvailableFromHere (state) {\n    const _state = state !== undefined\n      ? state\n      : currentState()\n\n    const err = argTypeError('statesAvailableFromHere', { state: isString }, _state)\n    if (err) {\n      throw TypeError(err)\n    }\n\n    return routes.reduce((acc, route) => {\n      const [fromState, toState] = route\n        .split(cxArrow)\n        .map(state => state.trim())\n\n      return (fromState === _state)\n        ? [...acc, toState]\n        : acc\n    }, [])\n  }\n\n  function inState (state, anyOrFn, ...fnArgs) {\n    const err = argTypeError('inState', { state: isString }, state)\n    if (err) {\n      throw TypeError(err)\n    }\n\n    const conditionMatches = currentState() === state\n\n    if (anyOrFn === undefined) {\n      return conditionMatches\n    }\n    if (!conditionMatches) {\n      return null\n    }\n    if (isFunction(anyOrFn)) {\n      return anyOrFn(...fnArgs)\n    }\n\n    return anyOrFn\n  }\n\n  const emit = Pausable((eventName, ...args) => {\n    const err = argTypeError('emit', { eventName: isString }, eventName)\n    if (err) {\n      throw TypeError(err)\n    }\n\n    return events.emit(eventName, ...args)\n  })\n\n  const enter = Pausable((state, ...args) => {\n    const err = argTypeError('enter', { state: isString }, state)\n    if (err) {\n      throw TypeError(err)\n    }\n\n    const inState = currentState()\n    const toState = state\n\n    if (toState === inState) {\n      transitionNoOp(`Already in state: \"${toState}\"`)\n      return false\n    }\n\n    if (!states.includes(toState)) {\n      transitionNoOp(`Invalid state \"${toState}\", not switching`)\n      return false\n    }\n\n    const nextRoute = `${inState}->${toState}`\n    if (!routes.includes(nextRoute)) {\n      transitionNoOp(`Invalid transition \"${nextRoute}\", not switching`)\n      return false\n    }\n\n    // Fell-through, can enter next state\n    console.info(`${logPrefix}: tId<${++transitionId}>: ${nextRoute}`)\n\n    stateHistory.push(toState)\n    if (stateHistory.length > stateHistoryLimit) {\n      stateHistory.shift()\n    }\n\n    emitInternalEvent(INTERNAL_EVENTS[ON_SWITCHING], toState, inState, ...args)\n    emitInternalEvent(nextRoute, ...args)\n    emitInternalEvent(INTERNAL_EVENTS[ON_SWITCHED], toState, inState, ...args)\n\n    return true\n  })\n\n  function onEvent (eventName, cb) {\n    const err = argTypeError('onEvent', { eventName: isString, cb: isFunction }, eventName, cb)\n    if (err) {\n      throw TypeError(err)\n    }\n\n    events.on(eventName, cb)\n    return () => events.off(eventName, cb)\n  }\n\n  const switchMethods = Object\n    .keys(INTERNAL_EVENTS)\n    .reduce((obj, methodName) => ({\n      ...obj,\n      [methodName]: cb => {\n        const err = argTypeError(methodName, { cb: isFunction }, cb)\n        if (err) {\n          throw TypeError(err)\n        }\n\n        const decreaseRefCount = statesHandled.increase(\n          INTERNAL_EVENTS[methodName]\n        )\n        const removeEvent = onInternalEvent(\n          INTERNAL_EVENTS[methodName], cb\n        )\n\n        return () => {\n          removeEvent()\n          decreaseRefCount()\n        }\n      }\n    }), {})\n\n  const enterExitMethods = [\n    [ON_EXITING, ON_SWITCHING],\n    [ON_ENTERING, ON_SWITCHING],\n    [ON_EXITED, ON_SWITCHED],\n    [ON_ENTERED, ON_SWITCHED]\n  ]\n    .reduce((obj, names) => {\n      const [methodName, switchMethod] = names\n      const name = methodName.slice(2)\n      const eventName = name.toLowerCase()\n\n      return {\n        ...obj,\n        [methodName]: (state, cb) => {\n          const err = argTypeError(methodName, { state: isString, cb: isFunction }, state, cb)\n          if (err) {\n            throw TypeError(err)\n          }\n\n          const decreaseRefCounts = [\n            statesHandled.increase(state),\n            statesHandled.increase(`${state}:${eventName}`)\n          ]\n\n          const removeEvent = switchMethods[switchMethod](\n            (toState, fromState, ...args) => {\n              if (name.indexOf('Exit') === 0) {\n                state === fromState && cb(toState, ...args)\n              } else {\n                state === toState && cb(fromState, ...args)\n              }\n            }\n          )\n\n          return () => {\n            removeEvent()\n            decreaseRefCounts.map(fn => fn())\n          }\n        }\n      }\n    }, {})\n\n  function Emit (eventName, ...curriedArgs) {\n    const err = argTypeError('Emit', { eventName: isString }, eventName)\n    if (err) {\n      throw TypeError(err)\n    }\n\n    return (...args) => emit(eventName, ...[...curriedArgs, ...args])\n  }\n\n  function Enter (state, ...curriedArgs) {\n    const err = argTypeError('Enter', { state: isString }, state)\n    if (err) {\n      throw TypeError(err)\n    }\n\n    return (...args) => enter(state, ...[...curriedArgs, ...args])\n  }\n\n  function InState (state, anyOrFn, ...curriedFnArgs) {\n    const err = argTypeError('InState', { state: isString }, state)\n    if (err) {\n      throw TypeError(err)\n    }\n\n    return (...fnArgs) =>\n      inState(state, anyOrFn, ...[...curriedFnArgs, ...fnArgs])\n  }\n\n  function reset () {\n    console.warn(`${logPrefix}: State-machine reset!`)\n\n    stateHistory.length = 0\n    stateHistory.push(startIn)\n  }\n\n  function transitionNoOp (message) {\n    const lastState = previousState()\n    const inState = currentState()\n    const prevRoute =\n      `${lastState === undefined ? '[undefined]' : lastState}->${inState}`\n\n    const availableStates = statesAvailableFromHere()\n    if (!availableStates.length) {\n      console.info(\n        `${logPrefix}: ${message}\\n` +\n          `  > Previous transition: \"${prevRoute}\"\\n` +\n          `  > There are no states available from \"${inState}\"`\n      )\n    } else {\n      console.info(\n        `${logPrefix}: ${message}\\n` +\n          `  > Previous transition: \"${prevRoute}\"\\n` +\n          `  > From \"${inState}\", valid states are: [${availableStates\n            .map(state => `\"${state}\"`)\n            .join(', ')}]`\n      )\n    }\n  }\n\n  function inspect () {\n    return {\n      states: statesHandled.refs(),\n      transitions: routesHandled.refs(),\n      events: eventsHandled.refs()\n    }\n  }\n\n  function info () {\n    console.log(`${logPrefix}: Information about this state-machine`)\n\n    logRefCounterInfo(statesHandled)\n    logRefCounterInfo(routesHandled)\n    logRefCounterInfo(eventsHandled)\n  }\n\n  function logRefCounterInfo (refCounter) {\n    const { description, table } = refCounter.toValue()\n    console.log(description)\n    if (table.length) {\n      console.table(table)\n    } else {\n      console.log('  > No information')\n    }\n  }\n\n  /**\n   * A state-machine object created by\n   * {@link #statebotstatebot|Statebot()}.\n   * @typedef {Object} statebotFsm\n   */\n\n  return {\n    /**\n     * For identifying Statebot objects.\n     *\n     * @private\n     */\n    __STATEBOT__: 1,\n\n    /**\n     * Tests to see if we can transition to the specified state from\n     * the {@link #statebotfsmcurrentstate|.currentState()}.\n     *\n     * If more than one state is specified, `true` is returned only if\n     * **ALL** states are available.\n     *\n     * @memberof statebotFsm\n     * @instance\n     * @function\n     * @param {string|string[]} states\n     * @returns {boolean}\n     * @example\n     * var machine = Statebot('game-menus', {\n     *   chart: `\n     *     loading ->\n     *       menu ->\n     *         play |\n     *         options |\n     *         sound |\n     *         quit\n     *\n     *     // Go back to menu\n     *     play | options | sound -> menu\n     *\n     *     // Can quit from main game, too\n     *     play -> quit\n     *   `\n     * })\n     *\n     * machine.canTransitionTo('play')\n     * // false\n     *\n     * machine.enter('menu')\n     * machine.canTransitionTo(['play', 'options'])\n     * // true\n     */\n    canTransitionTo,\n\n    /**\n     * Returns the current state.\n     *\n     * @memberof statebotFsm\n     * @instance\n     * @function\n     * @returns {string}\n     *\n     * @example\n     * var machine = Statebot('coroutine', {\n     *   chart: `\n     *     suspended -> running -> (suspended | dead)\n     *   `\n     * })\n     *\n     * machine.currentState()\n     * // \"suspended\"\n     */\n    currentState,\n\n    /**\n     * Immediately emits an event, firing any listeners added using\n     * {@link #statebotfsmperformtransitions|.performTransitions()} or {@link #statebotfsmonevent|.onEvent()}.\n     *\n     * @memberof statebotFsm\n     * @instance\n     * @function\n     * @param {string} eventName\n     * @param {...*} [args]\n     *  Optional arguments to pass to listeners.\n     * @returns {boolean}\n     *  Whether or not the event had listeners.\n     *\n     *  See: {@link https://nodejs.org/api/events.html#events_emitter_emit_eventname_args|Node Events}\n     *  for more information.\n     *\n     * Statebot imports `EventEmitter` from the\n     *  {@link https://www.npmjs.com/package/events|events}\n     * package for dealing with events in the browser.\n     *\n     * @example\n     * var machine = Statebot('basic-form', {\n     *   chart: `\n     *     idle -> sending -> redirect\n     *   `\n     * })\n     *\n     * machine.performTransitions({\n     *   'idle -> sending': {\n     *     on: 'post-data',\n     *     then: (...args) => {\n     *       console.log('Event args: ', args)\n     *       // setTimeout(machine.Enter('redirect'), 5000)\n     *     }\n     *   }\n     * })\n     *\n     * machine.emit('post-data', 'Hello, world!')\n     * // Event args: [\"Hello, world!\"]\n     *\n     * machine.currentState()\n     * // \"sending\"\n     */\n    emit,\n\n    /**\n     * Creates a function that emits the specified event.\n     *\n     * (This is essentially a convenience wrapper around {@link #statebotfsmemit|.emit()}.)\n     *\n     * @memberof statebotFsm\n     * @instance\n     * @function\n     * @param {string} eventName\n     *  The desired event to {@link #statebotfsmemit|.emit()}.\n     * @param {...*} [curriedArgs]\n     *  Arguments that will curry into the returned `emit()` function\n     *  whenever it is called.\n     * @returns {function} A function that emits that event.\n     *\n     * @example\n     * var machine = Statebot('traffic-lights', {\n     *   chart: `\n     *     go ->\n     *       prepare-to-stop ->\n     *       stop\n     *\n     *     // ...gotta keep that traffic flowing\n     *     stop ->\n     *       prepare-to-go ->\n     *       go\n     *   `,\n     *   startIn: 'stop'\n     * })\n     *\n     * machine.performTransitions({\n     *   'stop -> prepare-to-go':   { on: 'timer' },\n     *   'prepare-to-go -> go':     { on: 'timer' },\n     *   'go -> prepare-to-stop':   { on: 'timer' },\n     *   'prepare-to-stop -> stop': { on: 'timer' }\n     * })\n     *\n     * var nextTrafficLight = machine.Emit('timer')\n     * machine.currentState()\n     * // \"stop\"\n     *\n     * nextTrafficLight()\n     * nextTrafficLight()\n     * nextTrafficLight()\n     *\n     * machine.currentState()\n     * // \"prepare-to-stop\"\n     */\n    Emit,\n\n    /**\n     * Immediately changes to the specified state, so long as it is\n     * accessible from the {@link #statebotfsmcurrentstate|.currentState()}.\n     *\n     * @memberof statebotFsm\n     * @instance\n     * @function\n     * @param {string} state The desired state to switch-to.\n     * @param {...*} [args]\n     *  Optional arguments to pass to transition callbacks.\n     * @returns {boolean} Whether or not the state changed.\n     *\n     * @example\n     * var machine = Statebot('dialog', {\n     *   chart: `\n     *     idle -> showing-modal -> (saving | idle)\n     *       saving -> idle\n     *   `\n     * })\n     *\n     * machine.currentState()\n     * // \"idle\"\n     *\n     * machine.enter('saving')\n     * // false\n     *\n     * // [dialog]: Invalid transition \"idle->saving\", not switching\n     * // > Previous transition: \"[undefined]->idle\"\n     * // > From \"idle\", valid states are: [\"showing-modal\"]\n     *\n     * machine.enter('showing-modal')\n     * // true\n     */\n    enter,\n\n    /**\n     * Creates a function that changes to the specified state, so long\n     * as it is accessible from the {@link #statebotfsmcurrentstate|.currentState()}.\n     *\n     * (This is essentially a convenience wrapper around {@link #statebotfsmenter|.enter()}.)\n     *\n     * @memberof statebotFsm\n     * @instance\n     * @function\n     * @param {string} state The desired state to switch-to.\n     * @param {...*} [curriedArgs]\n     *  Arguments that will curry into the returned `enter()` function\n     *  whenever it is called.\n     * @returns {function}\n     *  A function that can change the state when called.\n     *\n     * @example\n     * var machine = Statebot('popup-menu', {\n     *   chart: `\n     *     idle -> menu-opened ->\n     *       (item-clicked | idle)\n     *\n     *     item-clicked -> idle\n     *   `,\n     *   startIn: 'menu-opened'\n     * })\n     *\n     * button.onclick = machine.Enter('item-clicked')\n     * machine.currentState()\n     * // \"menu-opened\"\n     *\n     * button.onclick()\n     * machine.currentState()\n     * // \"item-clicked\"\n     */\n    Enter,\n\n    /**\n     * Returns all states the machine has been in so far, up to a limit set\n     * by `historyLimit` in {@link statebotOptions}.\n     *\n     * @memberof statebotFsm\n     * @instance\n     * @function\n     * @returns {string[]} A copy of the state-history.\n     *\n     * @example\n     * var machine = Statebot('downloader', {\n     *   chart: `\n     *     loading -> (failure | success)\n     *       failure -> loading\n     *       success -> done\n     *   `,\n     *   historyLimit: 4\n     * })\n     *\n     * machine.enter('failure')\n     * machine.enter('loading')\n     * machine.enter('success')\n     * machine.enter('done')\n     * machine.history()\n     * // [\"failure\", \"loading\", \"success\", \"done\"]\n     */\n    history: () => [...stateHistory],\n\n    /**\n     * Print information about the current machine to the console.\n     *\n     * @memberof statebotFsm\n     * @instance\n     * @example\n     * var machine = Statebot('half-duplex', {\n     *   chart: `\n     *     idle -> sending | receiving -> done\n     *   `\n     * })\n     *\n     * machine.info()\n     * // [half-duplex]: Information about this state-machine.\n     * // [half-duplex]: Listening for the following state-changes:\n     * // ┌─────────┬─────────────┬────────┐\n     * // │ (index) │   states    │   #    │\n     * // ├─────────┼─────────────┼────────┤\n     * // │    0    │   'done'    │ 'None' │\n     * // │    1    │   'idle'    │ 'None' │\n     * // │    2    │ 'receiving' │ 'None' │\n     * // │    3    │  'sending'  │ 'None' │\n     * // └─────────┴─────────────┴────────┘\n     * // [half-duplex] Listening for the following transitions:\n     * // ┌─────────┬───────────────────┬────────┐\n     * // │ (index) │    transitions    │   #    │\n     * // ├─────────┼───────────────────┼────────┤\n     * // │    0    │ 'idle->receiving' │ 'None' │\n     * // │    1    │  'idle->sending'  │ 'None' │\n     * // │    2    │ 'receiving->done' │ 'None' │\n     * // │    3    │  'sending->done'  │ 'None' │\n     * // └─────────┴───────────────────┴────────┘\n     * // [half-duplex]: Listening for the following events:\n     * // (No information)\n     */\n    info: () => info(),\n\n    /**\n     * Get information about the current machine.\n     *\n     * Same details as {@link #statebotfsminfo|.info()} in object-form.\n     *\n     * @memberof statebotFsm\n     * @instance\n     * @returns {object}\n     * @example\n     * var machine = Statebot('half-duplex', {\n     *   chart: `\n     *     idle -> sending | receiving -> done\n     *   `\n     * })\n     *\n     * machine.inspect()\n     * // Will return an object with the following signature:\n     * //  { states, transitions, events }\n     *\n     * // These will each have key-values, the key being the name\n     * // and the value being the number of listeners attached.\n     */\n    inspect: () => inspect(),\n\n    /**\n     * Checks if the {@link #statebotfsmcurrentstate|.currentState()}\n     * matches the specified `state`, immediately returning either\n     * `true` or `false`.\n     *\n     * If `outputWhenTrue` is specified, then it will be returned\n     * instead of `true`, and `null` will be returned instead of\n     *  `false`.\n     *\n     * If a function is specified, then its return-value will be used\n     * as the `true`-value.\n     *\n     * @memberof statebotFsm\n     * @instance\n     * @function\n     * @param {string} state The state to test against.\n     * @param {any|function} [outputWhenTrue]\n     *  Optional `true`-value. If a function is specified, it will be\n     *  called and its return value will be used.\n     * @param {...*} [fnArgs]\n     *  Arguments that will pass into `outputWhenTrue()` if it has\n     *  been defined as a function.\n     * @returns {boolean|null|*}\n     *\n     * @example\n     * var machine = Statebot('little-revver', {\n     *   chart: `\n     *     idle ->\n     *       (gear-1 | gear-2 | reverse) ->\n     *     idle\n     *   `\n     * })\n     *\n     * machine.inState('idle')\n     * // true\n     *\n     * machine.inState('idle', 'Purrrr...')\n     * // \"Purrrr...\"\n     *\n     * machine.enter('gear-1')\n     * machine.inState('idle', () => {\n     *   console.log('Idling!')\n     *   return 'Purrrr...'\n     * })\n     * // null\n     * // ^ the function is not called at all in the `false` case,\n     * //   so no console.log either.\n     */\n    inState,\n\n    /**\n     * Returns a function which, when run, tests that\n     * {@link #statebotfsmcurrentstate|.currentState()} matches the\n     * specified state, returning either `true` or `false`.\n     *\n     * If `outputWhenTrue` is specified, then it will be returned\n     * instead of `true`, and `null` will be returned instead of\n     *  `false`.\n     *\n     * (This is essentially a convenience wrapper around {@link #statebotfsminstate|.inState()}.)\n     *\n     * @memberof statebotFsm\n     * @instance\n     * @function\n     * @param {string} state The state to test against.\n     * @param {any|function} [outputWhenTrue]\n     *  Optional `true`-value. If a function is specified, it will be\n     *  called and its return value will be used.\n     * @param {...*} [curriedFnArgs]\n     *  Arguments that will curry into `outputWhenTrue()` if it has\n     *  been defined as a function.\n     * @returns {function}\n     *  A function that calls {@link #statebotfsminstate|.inState()}.\n     *\n     * @example\n     * var machine = Statebot('little-revver', {\n     *   chart: `\n     *     idle ->\n     *       (gear-1 | gear-2 | reverse) ->\n     *     idle\n     *   `\n     * })\n     *\n     * var idling = machine.InState('idle')\n     * var purring = machine.InState('idle', () => {\n     *   console.log('Idling!')\n     *   return 'Purrrr...'\n     * })\n     *\n     * idling()\n     * // true\n     *\n     * purring()\n     * // Idling!\n     * // \"Purrrr...\"\n     *\n     * machine.enter('gear-1')\n     * purring()\n     * // null\n     * // ^ the function is not called at all in the `false` case,\n     * //   so no console.log either.\n     */\n    InState,\n\n    /**\n     * Returns the name of the state-machine.\n     *\n     * Used for logging and also by {@link #statebotassertroute|assertRoute()}\n     * for the same.\n     *\n     * @memberof statebotFsm\n     * @instance\n     * @function\n     * @returns {string} The name of the state-machine.\n     *\n     * @example\n     * var machine = Statebot('Ay, there’s the rub.', {\n     *   chart: `\n     *     the-question -> (to-be | not-to-be)\n     *       not-to-be -> perchance-to-dream\n     *   `\n     * })\n     *\n     * machine.name()\n     * // \"Ay, there’s the rub.\"\n     */\n    name: () => name,\n\n    /**\n     * Adds a listener that runs a callback immediately **AFTER** the\n     * specified-state becomes the current one.\n     *\n     * A function is returned that will remove the listener.\n     *\n     * @memberof statebotFsm\n     * @instance\n     * @function\n     * @param {string} state The state.\n     * @param {enterCallback} cb\n     *  A callback function with the signature:\n     *\n     *  `(fromState, ...args?)`\n     * @returns {function} A function that removes the listener.\n     *\n     * @example\n     * var machine = Statebot('half-duplex', {\n     *   chart: `\n     *     idle -> sending | receiving -> done\n     *   `\n     * })\n     *\n     * machine.onEntered('done', fromState => {\n     *   console.log('Entered from:', fromState)\n     * })\n     *\n     * machine.enter('receiving')\n     * machine.enter('done')\n     * // Entered from: receiving\n     */\n    onEntered: enterExitMethods[ON_ENTERED],\n\n    /**\n     * Adds a listener that runs a callback immediately **BEFORE** the\n     * specified-state becomes the current one.\n     *\n     * A function is returned that will remove the listener.\n     *\n     * @memberof statebotFsm\n     * @instance\n     * @function\n     * @param {string} state The state.\n     * @param {enterCallback} cb\n     *  A callback function with the signature:\n     *\n     *  `(fromState, ...args?)`\n     * @returns {function} A function that removes the listener.\n     *\n     * @example\n     * var machine = Statebot('half-duplex', {\n     *   chart: `\n     *     idle -> sending | receiving -> done\n     *   `\n     * })\n     *\n     * machine.onEntered('done', () => {\n     *   console.log('We made it!')\n     * })\n     *\n     * machine.onEntering('done', fromState => {\n     *   console.log('Entering from:', fromState)\n     * })\n     *\n     * machine.enter('sending')\n     * machine.enter('done')\n     * // Entering from: sending\n     * // We made it!\n     */\n    onEntering: enterExitMethods[ON_ENTERING],\n\n    /**\n     * {@link #statebotfsmonentering .onEntering()} /\n     * {@link #statebotfsmonentered .onEntered()} callback signature.\n     *\n     * @callback enterCallback\n     * @param {string} fromState\n     * @param {...any} [args]\n     *  Arguments passed-down from {@link #statebotfsmenter .enter()} or\n     *  {@link #statebotfsmemit .emit()}\n     */\n\n    /**\n     * Adds a listener that runs a callback immediately after the specified\n     * event is called.\n     *\n     * A function is returned that will remove the listener.\n     *\n     * @memberof statebotFsm\n     * @instance\n     * @function\n     * @param {string} name The event name.\n     * @param {function} cb The callback.\n     * @returns {function} A function that removes the listener.\n     *\n     * @example\n     * var machine = Statebot('traffic-lights', {\n     *   chart: `\n     *     go ->\n     *       prepare-to-stop ->\n     *       stop\n     *\n     *     // ...gotta keep that traffic flowing\n     *     stop ->\n     *       prepare-to-go ->\n     *       go\n     *   `\n     * })\n     *\n     * machine.performTransitions({\n     *   'stop -> prepare-to-go -> go':   { on: 'timer' },\n     *   'go -> prepare-to-stop -> stop': { on: 'timer' },\n     * })\n     *\n     * machine.onEvent('timer', () => {\n     *   redrawTrafficLights()\n     * })\n     *\n     * setInterval(machine.Emit('timer'), 2000)\n     */\n    onEvent,\n\n    /**\n     * Adds a listener that runs a callback immediately **AFTER** the\n     * specified-state is no longer the current one.\n     *\n     * A function is returned that will remove the listener.\n     *\n     * @memberof statebotFsm\n     * @instance\n     * @function\n     * @param {string} state The state.\n     * @param {exitCallback} cb\n     *  A callback function with the signature:\n     *\n     *  `(toState, ...args?)`\n     * @returns {function} A function that removes the listener.\n     *\n     * @example\n     * var machine = Statebot('half-duplex', {\n     *   chart: `\n     *     idle -> sending | receiving -> done\n     *   `\n     * })\n     *\n     * machine.onExited('idle', toState => {\n     *   console.log('We are heading to:', toState)\n     * })\n     *\n     * machine.enter('sending')\n     * // We are heading to: sending\n     */\n    onExited: enterExitMethods[ON_EXITED],\n\n    /**\n     * Adds a listener that runs a callback immediately **BEFORE** the\n     * specified-state is no longer the current one.\n     *\n     * A function is returned that will remove the listener.\n     *\n     * @memberof statebotFsm\n     * @instance\n     * @function\n     * @param {string} state The state.\n     * @param {exitCallback} cb\n     *  A callback function with the signature:\n     *\n     *  `(toState, ...args?)`\n     * @returns {function} A function that removes the listener.\n     *\n     * @example\n     * var machine = Statebot('half-duplex', {\n     *   chart: `\n     *     idle -> sending | receiving -> done\n     *   `\n     * })\n     *\n     * machine.onExited('idle', () => {\n     *   console.log('Peace out!')\n     * })\n     *\n     * machine.onExiting('idle', toState => {\n     *   console.log('Heading to:', toState)\n     * })\n     *\n     * machine.enter('receiving')\n     * machine.enter('done')\n     * // Heading to: receiving\n     * // Peace out!\n     */\n    onExiting: enterExitMethods[ON_EXITING],\n\n    /**\n     * {@link #statebotfsmonexiting .onExiting()} /\n     * {@link #statebotfsmonexited .onExited()} callback signature.\n     *\n     * @callback exitCallback\n     * @param {string} toState\n     * @param {...any} [args]\n     *  Arguments passed-down from {@link #statebotfsmenter .enter()} or\n     *  {@link #statebotfsmemit .emit()}\n     */\n\n    /**\n     * Adds a listener that runs a callback immediately after **ANY**\n     * state-change.\n     *\n     * A function is returned that will remove the listener.\n     *\n     * @memberof statebotFsm\n     * @instance\n     * @function\n     * @param {switchCallback} cb\n     *  A callback function with the signature:\n     *\n     *  `(toState, fromState, ...args?)`\n     * @returns {function} A function that removes the listener.\n     *\n     * @example\n     * var machine = Statebot('half-duplex', {\n     *   chart: `\n     *     idle -> sending | receiving -> done\n     *   `\n     * })\n     *\n     * machine.onSwitched((toState, fromState) => {\n     *   console.log(`We went from \"${fromState}\" to \"${toState}\"`)\n     * })\n     *\n     * machine.enter('receiving')\n     * // We went from \"idle\" to \"receiving\"\n     */\n    onSwitched: switchMethods[ON_SWITCHED],\n\n    /**\n     * Adds a listener that runs a callback immediately before **ANY**\n     * state-change.\n     *\n     * A function is returned that will remove the listener.\n     *\n     * @memberof statebotFsm\n     * @instance\n     * @function\n     * @param {switchCallback} cb\n     *  A callback function with the signature:\n     *\n     *  `(toState, fromState, ...args?)`\n     * @returns {function} A function that removes the listener.\n     *\n     * @example\n     * var machine = Statebot('half-duplex', {\n     *   chart: `\n     *     idle -> sending | receiving -> done\n     *   `\n     * })\n     *\n     * machine.onSwitching((toState, fromState) => {\n     *   console.log(`Going from \"${fromState}\" to \"${toState}\"`)\n     * })\n     *\n     * machine.enter('receiving')\n     * // Going from \"idle\" to \"receiving\"\n     */\n    onSwitching: switchMethods[ON_SWITCHING],\n\n    /**\n     * {@link #statebotfsmonswitching .onSwitching()} /\n     * {@link #statebotfsmonswitched .onSwitched()} callback signature.\n     *\n     * @callback switchCallback\n     * @param {string} toState\n     * @param {string} fromState\n     * @param {...any} [args]\n     *  Arguments passed-down from {@link #statebotfsmenter .enter()} or\n     *  {@link #statebotfsmemit .emit()}\n     */\n\n    /**\n     * Run callbacks when transitions happen.\n     *\n     * @memberof statebotFsm\n     * @instance\n     * @function\n     * @param {object|function} transitions\n     *  Configuration in the form of an object, or a function that\n     *  returns an object. If a function is used, there will be a single\n     *  argument passed-in: an object with the following methods\n     *  attached as a convenience:\n     *\n     *  - {{@link #statebotfsmenter|.enter()}, {@link #statebotfsmemit|.emit()}, {@link #enter-state-1 .Enter()}, {@link #emit-name .Emit()}}\n     *\n     * @returns {function} A function that removes all listeners added\n     *  by this method.\n     *\n     * @example\n     * var machine = Statebot('half-duplex', {\n     *   chart: `\n     *     idle -> sending | receiving -> done\n     *   `\n     * })\n     *\n     * machine.onTransitions({\n     *   'idle -> sending': () => {\n     *     sendData()\n     *       .then(machine.Enter('done', 'sent'))\n     *       .catch(machine.Enter('done', 'failed'))\n     *   },\n     *   'idle -> receiving': () => {\n     *     receiveData()\n     *       .then(machine.Enter('done', 'received'))\n     *       .catch(machine.Enter('done', 'failed'))\n     *   },\n     *   'sending | receiving -> done': whatHappened => {\n     *     console.log('All finished: ', whatHappened)\n     *   }\n     * })\n     *\n     * machine.enter('sending')\n     *\n     * function sendData() {\n     *   return new Promise((resolve, reject) => {\n     *     setTimeout(resolve, 1000)\n     *     setTimeout(reject, 750 + Math.round(Math.random() * 750))\n     *   })\n     * }\n     *\n     * function receiveData() {\n     *   return new Promise((resolve, reject) => {\n     *     setTimeout(resolve, 1000)\n     *     setTimeout(reject, 750 + Math.round(Math.random() * 750))\n     *   })\n     * }\n     *\n     * @example\n     * // The above example using a function for config\n     * machine.onTransitions(({ Enter }) => ({\n     *   'idle -> sending': () => {\n     *     sendData()\n     *       .then(Enter('done', 'sent'))\n     *       .catch(Enter('done', 'failed'))\n     *   },\n     *   'idle -> receiving': () => {\n     *     receiveData()\n     *       .then(Enter('done', 'received'))\n     *       .catch(Enter('done', 'failed'))\n     *   },\n     *   'sending | receiving -> done': whatHappened => {\n     *     console.log('All finished: ', whatHappened)\n     *   }\n     * }))\n     *\n     * // etc...\n     */\n    onTransitions: transitions => applyHitcher(transitions, 'onTransitions'),\n\n    /**\n     * Pause the machine. {@link #statebotfsmemit|.emit()} and {@link #statebotfsmenter|.enter()} will be no-ops until\n     * the machine is {@link #statebotfsmresume|.resume()}'d.\n     *\n     * @memberof statebotFsm\n     * @instance\n     * @function\n     */\n    pause,\n\n    /**\n     * Returns `true` if the machine is {@link #statebotfsmpause|.pause()}'d\n     *\n     * @memberof statebotFsm\n     * @instance\n     * @function\n     * @returns {boolean}\n     */\n    paused,\n\n    /**\n     * Perform transitions when events happen.\n     *\n     * Use `then` to optionally add callbacks to those transitions.\n     *\n     * @memberof statebotFsm\n     * @instance\n     * @function\n     * @param {object|function} transitions\n     *  Configuration in the form of an object, or a function that\n     *  returns an object. If a function is used, there will be a single\n     *  argument passed-in: an object with the following methods\n     *  attached as a convenience:\n     *\n     *  - {{@link #statebotfsmenter|.enter()}, {@link #statebotfsmemit|.emit()}, {@link #enter-state-1 .Enter()}, {@link #emit-name .Emit()}}\n     *\n     * @returns {function} A function that removes all listeners added\n     *  by this method.\n     *\n     * @example\n     * var machine = Statebot('complex-form', {\n     *   chart: `\n     *     idle ->\n     *       update\n     *\n     *     // Maybe things take a long time...\n     *     update ->\n     *       waiting -> waiting-a-while\n     *\n     *     // Which path will we take?\n     *     waiting | waiting-a-while ->\n     *       success | failed | timeout\n     *\n     *     // All done!\n     *     success | failed | timeout ->\n     *       done\n     *   `\n     * })\n     *\n     * machine.performTransitions(({ Enter, emit }) => ({\n     *   'idle -> update': {\n     *     on: 'user-saved',\n     *     then: (data) => {\n     *       console.log('Sending data: ', data)\n     *\n     *       sendData(data)\n     *         .then(Enter('success'))\n     *         .catch(Enter('failed'))\n     *\n     *       emit('data-sent')\n     *     }\n     *   },\n     *   'update -> waiting': {\n     *     on: 'data-sent',\n     *     then: () => {\n     *       setTimeout(Enter('waiting-a-while'), 750)\n     *       setTimeout(Enter('timeout'), 5000)\n     *     }\n     *   }\n     * }))\n     *\n     * // Just to illustrate that you can mix n' match with onTransitions:\n     * machine.onTransitions({\n     *   'waiting | waiting-a-while -> success': () => {\n     *     console.log('Lovely!')\n     *   },\n     *   'waiting | waiting-a-while -> timeout': () => {\n     *     console.log('Well, at least you have your shoes')\n     *   }\n     * })\n     *\n     * machine.emit('user-saved', ['some', 'data'])\n     * // Sending data: [\"some\", \"data\"]\n     *\n     * function sendData() {\n     *   return new Promise((resolve, reject) => {\n     *     setTimeout(resolve, 1000)\n     *     setTimeout(reject, 750 + Math.round(Math.random() * 750))\n     *   })\n     * }\n     */\n    performTransitions: transitions => applyHitcher(transitions, 'performTransitions'),\n\n    /**\n     * Returns the previous state.\n     *\n     * @memberof statebotFsm\n     * @instance\n     * @function\n     * @returns {string|undefined}\n     *  The previous state, or `undefined` if there isn't one (ie; you\n     *  have just called {@link #statebotfsmreset|.reset()}, or the\n     *  machine has just started.)\n     *\n     * @example\n     * var machine = Statebot('simple-sender', {\n     *   chart: `\n     *     idle -> sending -> done\n     *   `\n     * })\n     *\n     * machine.enter('sending')\n     * machine.previousState()\n     * // \"idle\"\n     */\n    previousState,\n\n    /**\n     * Returns the state-machine to its starting-state and clears the\n     * state-history.\n     *\n     * All listeners will still be attached, but no events or\n     * transitions will be fired. The pause-state will be maintained.\n     *\n     * @memberof statebotFsm\n     * @instance\n     * @function\n     *\n     * @example\n     * var machine = Statebot('carousel', {\n     *   chart: `\n     *     page-1 ->\n     *     page-2 ->\n     *     page-3 ->\n     *     page-4 -> page-1\n     *   `\n     * })\n     *\n     * machine.enter('page-2')\n     * machine.reset()\n     * machine.currentState()\n     * // \"page-1\"\n     */\n    reset,\n\n    /**\n     * Resume a {@link #statebotfsmpause|.pause()}'d machine.\n     *\n     * @memberof statebotFsm\n     * @instance\n     * @function\n     */\n    resume,\n\n    /**\n     * Return an `array` of states accessible from the state specified.\n     * If no state is passed-in, the {@link #statebotfsmcurrentstate|.currentState()} is used.\n     *\n     * @memberof statebotFsm\n     * @instance\n     * @function\n     * @param {string} [state] The state to check. {@link #statebotfsmcurrentstate|.currentState()}\n     *  if unspecified.\n     * @returns {String[]}\n     * @example\n     * var machine = Statebot('half-duplex', {\n     *   chart: `\n     *     idle -> sending | receiving -> done\n     *   `\n     * })\n     *\n     * machine.statesAvailableFromHere()\n     * // [\"sending\", \"receiving\"]\n     *\n     * machine.statesAvailableFromHere('receiving')\n     * // [\"done\"]\n     */\n    statesAvailableFromHere\n  }\n}\n\nfunction decomposeConfigs (configs, canWarn) {\n  const allStates = []\n  const allRoutes = []\n\n  const _configs = configs.reduce((acc, config) => {\n    const { routeChart, action } = config\n    const { states, routes, transitions } = decomposeChart(routeChart)\n    if (canWarn()) {\n      allStates.push(...states)\n      allRoutes.push(...routes)\n    }\n    return [\n      ...acc,\n      ...transitions.map(([fromState, toState]) =>\n        ({ fromState, toState, action })\n      )\n    ]\n  }, [])\n\n  return {\n    configs: _configs,\n    states: allStates,\n    routes: allRoutes\n  }\n}\n\n/**\n * Tests that an object is a {@link #statebotfsm|statebotFsm}.\n *\n * @memberof statebot\n * @function\n * @example\n * var machine = Statebot(...)\n *\n * isStatebot(machine)\n * // true\n *\n * @param {any} object The object to test.\n * @returns {boolean}\n */\n\nfunction isStatebot (object) {\n  return (\n    isPojo(object) &&\n    typeof object.__STATEBOT__ === 'number'\n  )\n}\n\nfunction wrapEmitter (events) {\n  const emit = (...args) =>\n    events.emit(...args)\n\n  const on = events.addListener\n    ? (...args) => events.addListener(...args)\n    : (...args) => events.on(...args)\n\n  const off = events.removeListener\n    ? (...args) => events.removeListener(...args)\n    : (...args) => events.off(...args)\n\n  return {\n    emit,\n    on,\n    off\n  }\n}\n","\n//\n// STATEBOT ASSERTION HELPERS\n//\n\nexport {\n  routeIsPossible,\n  assertRoute\n}\n\nimport { isStatebot } from './statebot'\nimport { decomposeRoute } from './parsing'\nimport {\n  Defer,\n  Once,\n  Revokable,\n  Logger,\n  ArgTypeError,\n  isTemplateLiteral\n} from './utils'\n\nconst argTypeError = ArgTypeError('statebot.')\n\n/**\n * Assert that a certain route can be followed by a\n * {@link #statebotfsm|statebotFsm}.\n *\n * This merely tests that a certain path can be taken through a\n * state-machine. It doesn't assert that the states are moved-through\n * while the machine is working, as with\n * {@link #statebotassertroute|assertRoute()}.\n *\n * @memberof statebot\n * @function\n * @param {statebotFsm} machine\n *  The machine to test the route on.\n * @param {string|string[]} route\n *  The route to test as an arrow-delimited string:\n *\n *  `\n *  \"idle -> pending -> success -> done\"\n *  `\n * @returns {boolean}\n *\n * @example\n * var machine = Statebot(...)\n *\n * routeIsPossible(machine,\n *   'walking -> falling -> splatting -> walking'\n * )\n * // false\n */\n\nfunction routeIsPossible (machine, route) {\n  const err = argTypeError('routeIsPossible',\n    { machine: isStatebot, route: isTemplateLiteral },\n    machine, route\n  )\n  if (err) {\n    throw TypeError(err)\n  }\n\n  const _route = decomposeRoute(route)\n  return _route.every((state, index) => {\n    if (index === _route.length - 1) {\n      return true\n    } else {\n      const nextState = _route[index + 1]\n      const availableStates = machine.statesAvailableFromHere(state)\n      const passes = availableStates.includes(nextState)\n      return passes\n    }\n  })\n}\n\nlet assertionId = 0\n\n/**\n * {@link #statebotassertroute|assertRoute()} options.\n * @typedef {Object} assertRouteOptions\n * @property {string} [description]\n *  Describe the success-condition for this assertion.\n * @property {string} [fromState=\"\"]\n *  Wait for the machine to be in this state before assertion begins.\n * @property {function} [run]\n *  Run this function just before starting the assertion.\n * @property {number} [permittedDeviations=0]\n *  If we hit an unexpected state during assertion, this is a \"deviation\".\n *  It might be that the FSM will come back to the expected state again\n *  after a certain number of these. For example, if your FSM has a\n *  \"retry\" route configured, this number can account for it.\n * @property {number} [timeoutInMs=1000]\n *  Permitted length of time for the entire assertion, in milliseconds.\n * @property {number} [logLevel=3]\n *  Normally we want logs for assertions, right? Well, you can tune\n *  them just like you can with {@link #statebotoptions|statebotOptions}.\n */\n\n/**\n * Assert that a {@link #statebotfsm|statebotFsm} traced the route specified.\n *\n * Whereas {@link #statebotrouteispossible|routeIsPossible()} only checks\n * that a particular route can be followed, `assertRoute` will hook-into\n * a machine and wait for it to trace the specified path within a\n * timeout period.\n *\n * @memberof statebot\n * @function\n * @async\n * @param {statebotFsm} machine\n *  The machine to run the assertion on.\n * @param {string|string[]} expectedRoute\n *  The expected route as an arrow-delimited string:\n *\n *  `\n *  \"idle -> pending -> success -> done\"\n *  `\n * @param {assertRouteOptions} [options]\n * @returns {Promise}\n *\n * @example\n * var machine = Statebot(...)\n *\n * assertRoute(\n *   machine, 'prepare -> debounce -> sending -> done -> idle',\n *   {\n *     description: 'Email sent with no issues',\n *     fromState: 'idle',\n *     timeoutInMs: 1000 * 20,\n *     permittedDeviations: 0,\n *     logLevel: 3\n *   }\n * )\n * .then(() => console.log('Assertion passed!'))\n * .catch(err => console.error(`Whoops: ${err}`))\n *\n * machine.enter('idle')\n */\n\nfunction assertRoute (machine, expectedRoute, options) {\n  const err = argTypeError('assertRoute',\n    { machine: isStatebot, expectedRoute: isTemplateLiteral },\n    machine, expectedRoute\n  )\n  if (err) {\n    throw TypeError(err)\n  }\n\n  assertionId += 1\n\n  const {\n    description = 'Assertion complete',\n    fromState = '',\n    run = () => {},\n    permittedDeviations = 0,\n    timeoutInMs = 1000,\n    logLevel = 3\n  } = options || {}\n\n  const console = Logger(logLevel)\n\n  const prefix = `Statebot[${machine.name()}]: aId<${assertionId}>`\n  const route = decomposeRoute(expectedRoute)\n\n  console.log(`\\n${prefix}: Asserting route: [${route.join(' > ')}]`)\n  console.log(`${prefix}: > Assertion will start from state: \"${fromState}\"`)\n\n  const fromStateActionFn = Defer(run)\n  let removeFromStateActionFn = () => { }\n\n  const totalTimeTaken = TimeTaken()\n  let stateTimeTaken = TimeTaken()\n  let assertionTimeoutTimer\n  let deviations = 0\n  let pending = true\n  let unexpected = false\n\n  const consumeRoute = [...route]\n  const report = Table(\n    ['state', 'expected', 'info', 'took'],\n    ['center', 'center', 'left', 'right']\n  )\n\n  const finaliseReport = Once(err => {\n    addRow('', '', '', 'TOTAL: ' + totalTimeTaken())\n    report.lock()\n    console.log(`\\n${prefix}: ${description}: [${err ? 'FAILED' : 'SUCCESS'}]`)\n    console.table(report.content())\n    return err\n  })\n\n  const { addRow } = report\n  function enteredState (state) {\n    if (pending) {\n      addRow(state, '-', 'PENDING')\n    } else {\n      const expectedState = consumeRoute[0]\n      if (expectedState === state) {\n        addRow(state, expectedState, unexpected ? 'REALIGNED' : 'OKAY', stateTimeTaken())\n        unexpected = false\n        consumeRoute.shift()\n      } else {\n        addRow(state, expectedState, 'WRONG STATE', stateTimeTaken())\n        unexpected = true\n        deviations += 1\n      }\n      stateTimeTaken = TimeTaken()\n    }\n  }\n\n  return new Promise((resolve, reject) => {\n    if (consumeRoute.length === 0) {\n      reject(finaliseReport(new Error('NO ROUTE TO TEST')))\n      return\n    }\n\n    const clearTimeoutAndResolve = (...args) => {\n      clearTimeout(assertionTimeoutTimer)\n      removeFromStateActionFn()\n      removeOnSwitchingListener()\n      resolve(...args)\n    }\n\n    const clearTimeoutAndReject = err => {\n      clearTimeout(assertionTimeoutTimer)\n      removeFromStateActionFn()\n      removeOnSwitchingListener()\n      reject(err)\n    }\n\n    const bailout = message => {\n      while (consumeRoute.length) {\n        const expectedState = consumeRoute.shift()\n        addRow(machine.currentState(), `(${expectedState})`, message)\n        unexpected = false\n      }\n      clearTimeoutAndReject(finaliseReport(new Error(message)))\n    }\n\n    if (machine.inState(fromState)) {\n      pending = false\n      removeFromStateActionFn = fromStateActionFn()\n    }\n\n    const { revoke, fn } = Revokable(state => {\n      assertionTimeoutTimer = setTimeout(() => {\n        revoke()\n        bailout('TIMEOUT')\n      }, timeoutInMs)\n\n      enteredState(state)\n      if (pending && state === fromState) {\n        pending = false\n        removeFromStateActionFn = fromStateActionFn()\n      }\n      if (deviations > permittedDeviations) {\n        revoke()\n        bailout('TOO MANY DEVIATIONS')\n      }\n      if (consumeRoute.length <= 0) {\n        revoke()\n        clearTimeoutAndResolve(finaliseReport())\n      }\n    })\n\n    const removeOnSwitchingListener = machine.onSwitching(fn)\n  })\n}\n\nfunction Table (columns = [], alignments = []) {\n  const table = []\n  const alignment = columns.map((_, index) => alignments[index] || 'center')\n\n  let locked = false\n  function lock () {\n    locked = true\n  }\n\n  function addRow (...args) {\n    if (locked) {\n      return\n    }\n    const obj = columns.reduce((acc, col, index) => {\n      const row = args[index] || ''\n      return {\n        ...acc,\n        [col]: row\n      }\n    }, {})\n    table.push(obj)\n  }\n\n  function colSizes () {\n    return table.reduce((acc, row) => columns.map((col, index) => Math.max(row[col].length, acc[index])), columns.map(() => 0))\n  }\n\n  function padLeft (str, len) {\n    return str + ' '.repeat(len - str.length)\n  }\n\n  function padRight (str, len) {\n    return ' '.repeat(len - str.length) + str\n  }\n\n  function content () {\n    const sizes = colSizes()\n    function formatField (value, index) {\n      const size = sizes[index]\n      const align = alignment[index]\n      if (align === 'left') {\n        return padLeft(value, size)\n      }\n      if (align === 'right') {\n        return padRight(value, size)\n      }\n      return value\n    }\n    const output = table.reduce((acc, row) => {\n      const formattedRow = columns.reduce((acc, col, index) => ({\n        ...acc,\n        [col]: formatField(row[col], index)\n      }), {})\n      return [...acc, formattedRow]\n    }, [])\n    return output\n  }\n\n  return {\n    lock: lock,\n    addRow: addRow,\n    content: content\n  }\n}\n\nfunction TimeTaken () {\n  const startTime = Date.now()\n\n  function fmt (num, digits) {\n    return num.toFixed(digits).replace(/\\.0+$/, '')\n  }\n\n  return function () {\n    const duration = Date.now() - startTime\n\n    if (duration < 500) {\n      return `${fmt(duration)} ms`\n    } else if (duration < 5000) {\n      return `${fmt(duration / 1000, 2)} s `\n    } else if (duration < 60000) {\n      return `${fmt(duration / 1000, 1)} s `\n    } else {\n      return `${fmt(duration / 1000 / 60, 1)} m `\n    }\n  }\n}\n"],"names":["domain","EventHandlers","prototype","Object","create","EventEmitter","init","call","usingDomains","undefined","_events","_maxListeners","defaultMaxListeners","active","getPrototypeOf","_eventsCount","setMaxListeners","n","isNaN","TypeError","$getMaxListeners","that","getMaxListeners","emitNone","handler","isFn","self","len","length","listeners","arrayClone","i","emitOne","arg1","emitTwo","arg2","emitThree","arg3","emitMany","args","apply","emit","type","er","events","doError","error","arguments","Error","domainEmitter","domainThrown","err","context","Array","_addListener","target","listener","prepend","m","existing","newListener","unshift","push","warned","w","name","emitter","count","emitWarning","e","console","warn","log","addListener","on","prependListener","_onceWrap","fired","g","removeListener","once","prependOnceListener","list","position","originalListener","spliceOne","removeAllListeners","keys","key","evlistener","ret","unwrapListeners","listenerCount","eventNames","Reflect","ownKeys","index","k","pop","arr","copy","isArray","obj","isFunction","isString","isObject","isEventEmitter","off","isPojo","isTemplateLiteral","every","item","uniq","input","reduce","acc","one","indexOf","defer","fn","timer","setTimeout","clearTimeout","Defer","Once","Revokable","revoke","_fn","result","revoked","Pausables","startPaused","runWhenPaused","paused","Pausable","pause","resume","ReferenceCounter","kind","description","expecting","_refs","flat","ref","increase","countOf","decrease","Math","max","refs","table","sort","map","toValue","ArgTypeError","errPrefix","fnName","typeMap","signature","join","argMap","entries","argName","argType","arg","errorDesc","typeName","typeMatches","filter","Boolean","Logger","level","_level","info","none","canWarn","canLog","canInfo","rxCRLF","cxPipe","cxArrow","rxOperators","rxUnsafe","replace","rxLineContinuations","RegExp","rxDisallowedCharacters","rxComment","argTypeError","decomposeRoute","templateLiteral","lines","condensedLines","linesOfTokens","tokenisedLines","route","decomposeChart","chart","linesOfRoutes","decomposeRouteFromTokens","linesOfTransitions","decomposeTransitionsFromRoute","emptyStateFound","routeKeys","includes","filteredRoutes","filteredStates","transitions","split","routes","states","linesFrom","strOrArr","line","output","previousLineHasContinuation","finalCondensedLine","condensedLine","sanitisedLine","test","str","previousStates","fromStates","toStates","fromState","toState","ON_EXITING","ON_ENTERING","ON_EXITED","ON_ENTERED","ON_SWITCHING","ON_SWITCHED","INTERNAL_EVENTS","Statebot","options","logPrefix","logLevel","historyLimit","eventOption","wrapEmitter","startIn","stateHistory","stateHistoryLimit","internalEvents","transitionId","emitInternalEvent","eventName","onInternalEvent","cb","cbWithCurriedArgs","statesHandled","routesHandled","eventsHandled","ifStateThenEnterState","action","inState","enter","applyHitcher","hitcher","hitcherActions","Enter","Emit","routeChart","actionOrConfig","_on","_then","then","allStates","allRoutes","allCleanupFns","decomposedEvents","_configs","decomposeConfigs","configs","onEvent","eventWasHandled","config","some","transitionNoOp","transitionConfigs","transition","invalidStates","state","invalidRoutes","previousState","currentState","canTransitionTo","testStates","nextStates","statesAvailableFromHere","_state","trim","anyOrFn","conditionMatches","fnArgs","nextRoute","shift","switchMethods","methodName","decreaseRefCount","removeEvent","enterExitMethods","names","switchMethod","slice","toLowerCase","decreaseRefCounts","curriedArgs","InState","curriedFnArgs","reset","message","lastState","prevRoute","availableStates","inspect","logRefCounterInfo","refCounter","__STATEBOT__","history","onEntered","onEntering","onExited","onExiting","onSwitched","onSwitching","onTransitions","performTransitions","isStatebot","object","routeIsPossible","machine","_route","nextState","passes","assertionId","assertRoute","expectedRoute","run","permittedDeviations","timeoutInMs","prefix","fromStateActionFn","removeFromStateActionFn","totalTimeTaken","TimeTaken","stateTimeTaken","assertionTimeoutTimer","deviations","pending","unexpected","consumeRoute","report","Table","finaliseReport","addRow","lock","content","enteredState","expectedState","Promise","resolve","reject","clearTimeoutAndResolve","removeOnSwitchingListener","clearTimeoutAndReject","bailout","columns","alignments","alignment","_","locked","col","row","colSizes","padLeft","repeat","padRight","sizes","formatField","value","size","align","formattedRow","startTime","Date","now","fmt","num","digits","toFixed","duration"],"mappings":"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"}