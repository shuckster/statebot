{"version":3,"file":"statebot.js","sources":["../../node_modules/.pnpm/mitt@3.0.0/node_modules/mitt/dist/mitt.mjs","../../src/types.js","../../src/utils.js","../../src/parsing.js","../../src/statebot.js","../../assert/index.js","../../hooks/make-hooks.mjs","../../src/browser.js"],"sourcesContent":["export default function(n){return{all:n=n||new Map,on:function(t,e){var i=n.get(t);i?i.push(e):n.set(t,[e])},off:function(t,e){var i=n.get(t);i&&(e?i.splice(i.indexOf(e)>>>0,1):n.set(t,[]))},emit:function(t,e){var i=n.get(t);i&&i.slice().map(function(n){n(e)}),(i=n.get(\"*\"))&&i.slice().map(function(n){n(t,e)})}}}\n//# sourceMappingURL=mitt.mjs.map\n","//\n// RUNTIME TYPE CHECKING\n//\n\nexport {\n  isArray,\n  isArguments,\n  isBoolean,\n  isEventEmitter,\n  isFunction,\n  isPojo,\n  isString,\n  isAllStrings,\n  isTemplateLiteral,\n  isNumber,\n  isThisValue,\n  isNull,\n  isUnset,\n  isUndefined,\n  ArgTypeError,\n  ObjTypeError\n}\n\n//\n// isType\n//\n\n// isEventEmitter\n//\nfunction isEventEmitter(obj) {\n  return (\n    isObject(obj) &&\n    isFunction(obj.emit) &&\n    (isFunction(obj.addListener) || isFunction(obj.on)) &&\n    (isFunction(obj.removeListener) || isFunction(obj.off))\n  )\n}\n\nisEventEmitter.displayName = 'isEventEmitter'\n\n// isUnset\n//\nfunction isUnset(obj) {\n  return isNull(obj) || isUndefined(obj)\n}\n\nisArray.displayName = 'isUnset'\n\n// isArray\n//\nfunction isArray(obj) {\n  return Array.isArray(obj)\n}\n\nisArray.displayName = 'isArray'\n\n// isArguments\n//\nfunction isArguments(obj) {\n  return Object.prototype.toString.call(obj) === '[object Arguments]'\n}\n\nisArguments.displayName = 'isArguments'\n\n// isBoolean\n//\nfunction isBoolean(obj) {\n  return obj === true || obj === false\n}\n\nisBoolean.displayName = 'isBoolean'\n\n// isFunction\n//\nfunction isFunction(obj) {\n  return typeof obj === 'function'\n}\n\nisFunction.displayName = 'isFunction'\n\n// isString\n//\nfunction isString(obj) {\n  return typeof obj === 'string'\n}\n\nisString.displayName = 'isString'\n\n// isAllStrings\n//\nfunction isAllStrings (arr) {\n  return isArray(arr) && arr.every(isString)\n}\n\nisAllStrings.displayName = 'isAllStrings'\n\n// isUndefined\n//\nfunction isUndefined(obj) {\n  return obj === undefined\n}\n\nisUndefined.displayName = 'isUndefined'\n\n// isNull\n//\nfunction isNull(obj) {\n  return obj === null\n}\n\nisNull.displayName = 'isNull'\n\n// isNumber\n//\nfunction isNumber(obj) {\n  return typeof obj === 'number'\n}\n\nisNumber.displayName = 'isNumber'\n\n// isObject\n//\nfunction isObject(obj) {\n  return typeof obj === 'object' && !isNull(obj)\n}\n\nisObject.displayName = 'isObject'\n\n// isPojo\n//\nfunction isPojo(obj) {\n  if (isNull(obj) || !isObject(obj) || isArguments(obj)) {\n    return false\n  }\n  return Object.getPrototypeOf(obj) === Object.prototype\n}\n\nisPojo.displayName = 'isPojo'\n\n// isTemplateLiteral\n//\nfunction isTemplateLiteral(obj) {\n  if (isString(obj)) {\n    return true\n  }\n  if (!isArray(obj)) {\n    return false\n  }\n  return obj.every(isString)\n}\n\nisTemplateLiteral.displayName = 'isTemplateLiteral'\n\n// isThisValue\n//\nfunction isThisValue(value) {\n  function inObject(obj) {\n    return obj === value\n  }\n  inObject.displayName = `isThisValue(${value})`\n  return inObject\n}\n\n//\n// ArgTypeError\n//\n\nconst typeErrorStringIfFnReturnsFalse = (argName, argTypeFn, arg) => {\n  return argTypeFn(arg)\n    ? undefined\n    : (argTypeFn.displayName || argTypeFn.name) +\n        `(${argName}) did not return true`\n}\n\nconst typeErrorStringIfTypeOfFails = (argName, argType, arg) => {\n  return typeof arg === argType\n    ? undefined\n    : `Argument \"${argName}\" should be a ${argType}`\n}\n\nconst typeErrorStringFromArgument = argMap => (arg, index) => {\n  if (index >= argMap.length) {\n    return\n  }\n\n  const { argName, argType } = argMap[index]\n  if (isUndefined(arg)) {\n    return `Argument undefined: \"${argName}\"`\n  }\n\n  const permittedArgTypes = Array.isArray(argType) ? argType : [argType]\n\n  const errorDescs = permittedArgTypes\n    .map(argType =>\n      isFunction(argType)\n        ? typeErrorStringIfFnReturnsFalse(argName, argType, arg)\n        : typeErrorStringIfTypeOfFails(argName, argType, arg)\n    )\n    .filter(isString)\n\n  const multipleTypesSpecified = permittedArgTypes.length > 1\n  const shouldError = multipleTypesSpecified\n    ? errorDescs.length > 1\n    : errorDescs.length\n\n  if (shouldError) {\n    return (\n      errorDescs.join('\\n| ') +\n      `\\n> typeof ${argName} === ${typeof arg}(${JSON.stringify(arg)})`\n    )\n  }\n}\n\nfunction ArgTypeError(namespace) {\n  return typeMap => {\n    const argMap = Object.entries(typeMap).map(([argName, argType]) => ({\n      argName,\n      argType\n    }))\n\n    return fnName =>\n      (...args) => {\n        const processedArgs = Array\n          .from(args, x => isArguments(x) ? Array.from(x) : x)\n          .flat(1)\n\n        const err = processedArgs\n          .map(typeErrorStringFromArgument(argMap))\n          .filter(isString)\n\n        if (!err.length) {\n          return\n        }\n\n        const signature = Object.keys(typeMap).join(', ')\n        return (\n          `\\n${namespace || ''}${fnName}(${signature}):\\n` +\n          `${err.map(err => `| ${err}`).join('\\n')}`\n        )\n      }\n  }\n}\n\nfunction ObjTypeError(namespace) {\n  return typeMap => {\n    const keys = Object.keys(typeMap)\n    const objTypeError = ArgTypeError(namespace)(typeMap)\n    return fnName => obj => {\n      const values = valuesOf(obj, { keys })\n      const err = objTypeError(fnName)(...values)\n      return err\n    }\n  }\n}\n\nfunction valuesOf(obj, options) {\n  const { keys } = options\n  if (!Array.isArray(keys)) {\n    return Object.values(obj)\n  }\n  return keys.reduce((acc, key) => {\n    return [...acc, obj[key]]\n  }, [])\n}\n","\n//\n// STATEBOT UTILS\n//\n\nexport {\n  Defer,\n  Definitions,\n  Logger,\n  Once,\n  Pausables,\n  ReferenceCounter,\n  Revokable,\n  uniq,\n  wrapEmitter,\n}\n\nimport { isString } from './types'\n\nfunction wrapEmitter (events) {\n  const emit = (eventName, ...args) =>\n    events.emit(eventName, args)\n\n  const addListener = events.addListener\n    ? (...args) => events.addListener(...args)\n    : (...args) => events.on(...args)\n\n  const removeListener = events.removeListener\n    ? (...args) => events.removeListener(...args)\n    : (...args) => events.off(...args)\n\n  const wrapMap = new Map()\n\n  function on (eventName, fn) {\n    let fnMeta = wrapMap.get(fn)\n    if (!fnMeta) {\n      fnMeta = {\n        handleEvent: (args = []) => fn(...[args].flat()),\n        refCount: 0\n      }\n      wrapMap.set(fn, fnMeta)\n    }\n\n    fnMeta.refCount += 1\n    addListener(eventName, fnMeta.handleEvent)\n  }\n\n  function off (eventName, fn) {\n    let fnMeta = wrapMap.get(fn)\n    if (!fnMeta) {\n      return\n    }\n\n    removeListener(eventName, fnMeta.handleEvent)\n    fnMeta.refCount -= 1\n    if (fnMeta.refCount === 0) {\n      wrapMap.delete(fn)\n    }\n  }\n\n  return {\n    emit,\n    on,\n    off\n  }\n}\n\n//\n// uniq\n//\n\nfunction uniq (input) {\n  return input.reduce((acc, one) =>\n    acc.indexOf(one) === -1\n      ? (acc.push(one), acc)\n      : acc\n    , []\n  )\n}\n\n//\n// defer\n//\n\nfunction defer (fn, ...args) {\n  const timer = setTimeout(fn, 0, ...args)\n  return () => { clearTimeout(timer) }\n}\n\nfunction Defer (fn) {\n  return (...args) => defer(fn, ...args)\n}\n\n//\n// Revokable\n//\n\nfunction Once (fn) {\n  const { revoke, fn: _fn } = Revokable(fn)\n  let result\n  return function (...args) {\n    result = _fn(...args)\n    revoke()\n    return result\n  }\n}\n\nfunction Revokable (fn) {\n  let revoked = false\n  let result\n  return {\n    fn: (...args) => {\n      if (!revoked) {\n        result = fn(...args)\n      }\n      return result\n    },\n    revoke: () => {\n      revoked = true\n    }\n  }\n}\n\n//\n// Pausables\n//\n\nfunction Pausables (startPaused, runFnWhenPaused) {\n  runFnWhenPaused = runFnWhenPaused || function () {}\n  let paused = !!startPaused\n\n  function Pausable (fn) {\n    return (...args) => {\n      if (paused) {\n        runFnWhenPaused()\n        return false\n      }\n      return fn(...args)\n    }\n  }\n\n  return {\n    Pausable,\n    paused: () => paused,\n    pause: () => { paused = true },\n    resume: () => { paused = false },\n  }\n}\n\n//\n// ReferenceCounter\n//\n\nfunction ReferenceCounter (logPrefix, kind, description, ...expecting) {\n  const _refs = [...expecting]\n    .flat()\n    .reduce((acc, ref) => ({ ...acc, [ref]: 0 }), {})\n\n  function increase (ref) {\n    _refs[ref] = countOf(ref) + 1\n    return () => { decrease(ref) }\n  }\n  function decrease (ref) {\n    const count = countOf(ref) - 1\n    _refs[ref] = Math.max(count, 0)\n  }\n  function countOf (ref) {\n    return _refs[ref] || 0\n  }\n  function refs () {\n    return { ..._refs }\n  }\n  function table () {\n    return Object.keys(_refs).sort()\n      .map(key => [key, _refs[key]])\n      .map(([ref, count]) => {\n        return {\n          [kind]: ref,\n          refs: count || 'None'\n        }\n      })\n  }\n  function toValue () {\n    return {\n      description: `${logPrefix}: ${description}:`,\n      table: table()\n    }\n  }\n  return {\n    increase,\n    decrease,\n    countOf,\n    toValue,\n    refs\n  }\n}\n\n//\n// Definitions\n//\n\nfunction Definitions() {\n  const dictionary = {}\n\n  function undefine(word, definition) {\n    dictionary[word] = (dictionary[word] || []).filter(\n      (next) => next !== definition\n    )\n    if (dictionary[word].length === 0) {\n      delete dictionary[word]\n    }\n  }\n\n  function define(word, definition) {\n    dictionary[word] = dictionary[word] || []\n    dictionary[word].push(definition)\n    return () => undefine(word, definition)\n  }\n\n  function definitionsOf(word) {\n    return dictionary[word] || []\n  }\n\n  return {\n    define,\n    undefine,\n    definitionsOf,\n  }\n}\n\n//\n// Logger\n//\n\nfunction Logger (level, _console) {\n  if (isString(level)) {\n    level = ({\n      info: 3,\n      log: 2,\n      warn: 1,\n      none: 0\n    })[level] || 3\n  }\n  function canWarn () {\n    return level >= 1\n  }\n  function canLog () {\n    return level >= 2\n  }\n  function canInfo () {\n    return level >= 3\n  }\n  const { info, table, log, warn, error } = _console || console\n  return {\n    canWarn,\n    canLog,\n    canInfo,\n\n    info: (...args) => { canInfo() && info(...args) },\n    table: (...args) => { canLog() && table(...args) },\n    log: (...args) => { canLog() && log(...args) },\n    warn: (...args) => { canWarn() && warn(...args) },\n    error: (...args) => { error(...args) }\n  }\n}\n","\n//\n// STATEBOT CHART/ROUTE PARSING\n//\n\nconst rxCRLF = /[\\r\\n]/\nconst cxPipe = '|'\nconst cxArrow = '->'\nconst rxOperators = [cxPipe, cxArrow]\n  .map(rxUnsafe => rxUnsafe.replace('|', '\\\\|'))\n  .join('|')\n\nconst rxLineContinuations = new RegExp(`(${rxOperators})$`)\nconst rxDisallowedCharacters = /[^a-z0-9!@#$%^&*:_+=<>|~.\\x2D]/gi\nconst rxComment = /(\\/\\/[^\\n\\r]*)/\n\nexport {\n  cxPipe,\n  cxArrow,\n  rxDisallowedCharacters,\n  decomposeChart,\n  decomposeRoute\n}\n\nimport { uniq } from './utils'\nimport { isTemplateLiteral, ArgTypeError } from './types'\n\nconst argTypeError = ArgTypeError('statebot.')\n\nfunction decomposeRoute (templateLiteral) {\n  const err = argTypeError(\n    { templateLiteral: isTemplateLiteral }\n  )('decomposeRoute')(templateLiteral)\n  if (err) {\n    throw TypeError(err)\n  }\n\n  const lines = condensedLines(templateLiteral)\n  const linesOfTokens = tokenisedLines(lines)\n  const route = linesOfTokens.flat(2)\n\n  return route\n}\n\nfunction decomposeChart (chart) {\n  const err = argTypeError(\n    { chart: isTemplateLiteral }\n  )('decomposeChart')(chart)\n  if (err) {\n    throw TypeError(err)\n  }\n\n  const lines = condensedLines(chart)\n  const linesOfTokens = tokenisedLines(lines)\n  const linesOfRoutes = linesOfTokens\n    .flatMap(decomposeRouteFromTokens)\n\n  const linesOfTransitions = linesOfRoutes\n    .flatMap(decomposeTransitionsFromRoute)\n\n  let emptyStateFound = false\n  const routeKeys = linesOfTransitions.map(route => {\n    if (route.includes('')) {\n      emptyStateFound = true\n    }\n    return route.join(cxArrow)\n  })\n\n  const filteredRoutes = uniq(routeKeys)\n  const filteredStates = uniq(linesOfTokens.flat(3))\n\n  return {\n    transitions: filteredRoutes.map(route => route.split(cxArrow)),\n    routes: filteredRoutes,\n    states: !emptyStateFound\n      ? filteredStates.filter(Boolean)\n      : filteredStates\n  }\n}\n\nfunction linesFrom (strOrArr) {\n  return [strOrArr]\n    .flat()\n    .reduce((acc, line) => [...acc, ...line.split(rxCRLF)], [])\n}\n\nfunction condensedLines (strOrArr) {\n  const input = linesFrom(strOrArr)\n  const output = []\n\n  let previousLineHasContinuation = false\n\n  const condenseLine = (condensedLine, line) => {\n    const sanitisedLine = line\n      .replace(rxComment, '')\n      .replace(rxDisallowedCharacters, '')\n\n    if (!sanitisedLine) {\n      return condensedLine\n    }\n\n    previousLineHasContinuation = rxLineContinuations\n      .test(sanitisedLine)\n\n    if (previousLineHasContinuation) {\n      return condensedLine + sanitisedLine\n    }\n\n    output.push(condensedLine + sanitisedLine)\n    return ''\n  }\n\n  const finalCondensedLine = input\n    .reduce(condenseLine, '')\n\n  if (previousLineHasContinuation || finalCondensedLine) {\n    return [...output, finalCondensedLine]\n  }\n\n  return [...output]\n}\n\nfunction tokenisedLines (lines) {\n  return lines\n    .map(line => line\n      .split(cxArrow)\n      .map(str => str.split(cxPipe))\n    )\n}\n\nfunction decomposeRouteFromTokens (line) {\n  const output = []\n\n  line.reduce((previousStates, states) => {\n    if (previousStates === false) {\n      return [...states]\n    }\n\n    output.push([previousStates, [...states]])\n    return [...states]\n  }, false)\n\n  return output\n}\n\nfunction decomposeTransitionsFromRoute([fromStates, toStates]) {\n  return fromStates.reduce(\n    (acc, fromState) => (\n      acc.push(...toStates.map(toState => [fromState, toState])), acc\n    ),\n    []\n  )\n}\n","\n//\n// STATEBOT FSM\n//\n\nexport {\n  Statebot,\n  isStatebot\n}\n\nconst ON_EXITING = 'onExiting'\nconst ON_ENTERING = 'onEntering'\nconst ON_EXITED = 'onExited'\nconst ON_ENTERED = 'onEntered'\nconst ON_SWITCHING = 'onSwitching'\nconst ON_SWITCHED = 'onSwitched'\n\nconst INTERNAL_EVENTS = {\n  [ON_SWITCHING]: '(ANY)state:changing',\n  [ON_SWITCHED]: '(ANY)state:changed'\n}\n\nimport mitt from 'mitt'\n\nimport {\n  wrapEmitter,\n  Definitions,\n  Logger,\n  ReferenceCounter,\n  Pausables,\n  Once,\n} from './utils'\n\nimport {\n  isArray,\n  isNumber,\n  isEventEmitter,\n  isFunction,\n  isPojo,\n  isString,\n  isAllStrings,\n  isUndefined,\n  ArgTypeError,\n} from './types'\n\nimport { decomposeChart, cxArrow } from './parsing'\n\nfunction Statebot (name, options) {\n  if (!isString(name)) {\n    throw new TypeError('\\nStatebot: Please specify a name for this machine')\n  }\n\n  const logPrefix = `Statebot[${name}]`\n  if (!isPojo(options)) {\n    throw new TypeError(`\\n${logPrefix}: Please specify options for this machine`)\n  }\n\n  const {\n    chart = undefined,\n    logLevel = 3,\n    historyLimit = 2\n  } = options || {}\n\n  const events = isUndefined(options.events)\n    ? wrapEmitter(mitt())\n    : isEventEmitter(options.events) && wrapEmitter(options.events)\n\n  if (!events) {\n    throw new TypeError(`\\n${logPrefix}: Invalid event-emitter specified in options`)\n  }\n\n  const { states = [], routes = [] } = chart\n    ? decomposeChart(chart)\n    : options\n\n  const { startIn = states[0] } = options\n\n  if (!states.includes(startIn)) {\n    throw new Error(`${logPrefix}: Starting-state not in chart: \"${startIn}\"`)\n  }\n\n  const argTypeError = ArgTypeError(`${logPrefix}#`)\n  const _console = Logger(logLevel, console)\n  const { canWarn } = _console\n\n  const stateHistory = [startIn]\n  const stateHistoryLimit = Math.max(historyLimit, 2)\n\n  let transitionId = 0\n\n  const { pause, resume, paused, Pausable } = Pausables(false, () =>\n    _console.warn(`${logPrefix}: Ignoring callback, paused`)\n  )\n\n  const transitionsFromEvents = Definitions()\n\n  const internalEvents = wrapEmitter(mitt())\n  const emitInternalEvent = Pausable(internalEvents.emit)\n\n  function onInternalEvent (eventName, cb) {\n    internalEvents.on(eventName, cb)\n    return () => internalEvents.off(eventName, cb)\n  }\n\n  const statesHandled = ReferenceCounter(\n    logPrefix,\n    'states',\n    'Listening for the following state-changes',\n    [...states]\n  )\n  const routesHandled = ReferenceCounter(\n    logPrefix,\n    'transitions',\n    'Listening for the following transitions',\n    [...routes]\n  )\n  const eventsHandled = ReferenceCounter(\n    logPrefix,\n    'events',\n    'Listening for the following events'\n  )\n\n  // Interprets onTransitions() and performTransitions()\n  function applyHitcher (hitcher, fnName) {\n    const hitcherActions =\n      isFunction(hitcher)\n        ? hitcher({ enter, emit, Enter, Emit })\n        : isPojo(hitcher) ? hitcher : null\n\n    if (!isPojo(hitcherActions)) {\n      throw new TypeError(\n        `${logPrefix}#${fnName}(): Expected an object, or a function that returns an object`\n      )\n    }\n\n    const allStates = []\n    const allRoutes = []\n    const {\n      transitionsForEvents,\n      transitionsOnly\n    } = decomposeHitcherActions(hitcherActions)\n\n    // Handle performTransitions() signature\n    // (configs with an event, and maybe a then-method too)\n    const eventsMappedToTransitionConfigs = Object\n      .entries(transitionsForEvents)\n      .reduce(decomposeTransitionsForEvent, {})\n\n    // Handle onTransitions() signature\n    // (transition-only, and maybe a then-function too)\n    const transitionConfigs = expandTransitions(transitionsOnly, canWarn)\n\n    // Now install handlers for on/performTransitions:\n    const allCleanupFns =\n      Object\n        .entries(eventsMappedToTransitionConfigs)\n        .map(createEventHandlerForTransition)\n        .concat(transitionConfigs.configs.map(runThenMethodOnTransition))\n        .flat()\n\n    // Debugging\n    // (if we're at the right level)\n    if (canWarn()) {\n      allStates.push(...transitionConfigs.states)\n      allRoutes.push(...transitionConfigs.routes)\n\n      const invalidStates = allStates.filter(state => !states.includes(state))\n      const invalidRoutes = allRoutes.filter(route => !routes.includes(route))\n\n      if (invalidStates.length) {\n        _console.warn(\n          `${logPrefix}#${fnName}(): Invalid states specified:\\n` +\n          invalidStates.map(state => `  > \"${state}\"`).join('\\n')\n        )\n      }\n      if (invalidRoutes.length) {\n        _console.warn(\n          `${logPrefix}#${fnName}(): Invalid transitions specified:\\n` +\n          invalidRoutes.map(route => `  > \"${route}\"`).join('\\n')\n        )\n      }\n    }\n\n    return () => allCleanupFns.map(fn => fn())\n\n    // Helper for onTransitions()\n    function runThenMethodOnTransition (config) {\n      const { fromState, toState, action } = config\n      const route = `${fromState}->${toState}`\n      return [\n        routesHandled.increase(route),\n        onInternalEvent(route, bindActionTo(toState, action))\n      ]\n    }\n\n    // Helpers for performTransitions()\n    function decomposeTransitionsForEvent (acc, [eventName, transitionsAndAction]) {\n      const {\n        states,\n        routes,\n        configs\n      } = expandTransitions(transitionsAndAction, canWarn)\n\n      if (canWarn()) {\n        allStates.push(...states)\n        allRoutes.push(...routes)\n      }\n\n      return {\n        ...acc,\n        [eventName]: configs\n      }\n    }\n\n    function ifStateThenEnterState ({ fromState, toState, action, args }) {\n      return inState(fromState, () => {\n        enter(toState, ...args)\n        isFunction(action) && runActionFor(toState, action, ...args)\n        return true\n      })\n    }\n\n    function createEventHandlerForTransition ([eventName, configs]) {\n      return [\n        eventsHandled.increase(eventName),\n        onEvent(eventName, (...args) => {\n          const eventWasHandled = configs\n            .map(config => ({ ...config, args }))\n            .some(ifStateThenEnterState)\n\n          if (!eventWasHandled) {\n            transitionNoOp(`Event not handled: \"${eventName}\"`)\n          }\n        })\n      ].concat(\n        configs.map(({ fromState, toState }) =>\n          transitionsFromEvents.define(`${eventName}:${fromState}`, toState)\n        )\n      )\n    }\n\n    function runActionFor (state, actionFn, ...args) {\n      const onExitingState = actionFn(...args)\n      if (isFunction(onExitingState)) {\n        const uninstall = Once(enterExitMethods[ON_EXITING](state, (toState) => {\n          uninstall()\n          onExitingState(toState)\n        }))\n\n        allCleanupFns.push(uninstall)\n      }\n    }\n\n    function bindActionTo (state, actionFn) {\n      return (...args) => runActionFor(state, actionFn, ...args)\n    }\n  }\n\n  function _peek (eventName, stateObject, calledInternally = true) {\n    const err1 = argTypeError({ eventName: isString })('peek')(eventName)\n    if (err1) {\n      throw new TypeError(err1)\n    }\n\n    const eventAndState = eventName + ':' + currentState()\n    const statesFromEvent = transitionsFromEvents.definitionsOf(eventAndState)\n\n    if (statesFromEvent.length > 1) {\n      const reason =\n        `${logPrefix}: Event \"${eventName}\" causes multiple transitions.\\n` +\n        `  > From state: \"${currentState()}\"\\n` +\n        `  > To states: \"${statesFromEvent.join(', ')}\"\\n\\n` +\n        `Check your performTransitions() config.`\n\n      throw new RangeError(reason)\n    }\n\n    if (!calledInternally && statesFromEvent.length === 0) {\n      if (eventsHandled.countOf(eventName) === 0) {\n        _console.warn(`${logPrefix}: Event not handled: \"${eventName}\"`)\n      } else {\n        _console.warn(`${logPrefix}: Will not transition after emitting: \"${eventName}\"`)\n      }\n    }\n\n    const toState = statesFromEvent[0]\n\n    if (isUndefined(stateObject)) {\n      return isUndefined(toState) ? currentState() : toState\n    }\n\n    const err2 = argTypeError({ stateObject: isPojo })('peek')(stateObject)\n    if (err2) {\n      throw new TypeError(err2)\n    }\n\n    if (Object.prototype.hasOwnProperty.call(stateObject, toState)) {\n      const anyOrFn = stateObject[toState]\n      return isFunction(anyOrFn)\n        ? anyOrFn()\n        : anyOrFn\n    }\n    return null\n  }\n\n  function peek (eventName, stateObject) {\n    return _peek(eventName, stateObject, false)\n  }\n\n  function previousState () {\n    return stateHistory[stateHistory.length - 2]\n  }\n\n  function currentState () {\n    return stateHistory[stateHistory.length - 1]\n  }\n\n  function _state_canTransitionTo (...states) {\n    const err = argTypeError(\n      { states: isAllStrings }\n    )('canTransitionTo')([states])\n    if (err) {\n      throw new TypeError(err)\n    }\n\n    if (!states.length) {\n      return false\n    }\n\n    const nextStates = statesAvailableFromHere()\n    return states.every(state => nextStates.includes(state))\n  }\n\n  function canTransitionTo (...states) {\n    const testStates = states.flat()\n    if (\n      testStates.length === 2 &&\n      isString(testStates[0]) &&\n      isPojo(testStates[1])\n    ) {\n      const thisState = testStates[0]\n      const { afterEmitting } = testStates[1]\n      const err = argTypeError(\n        { thisState: isString, '{ afterEmitting }': isString }\n      )('canTransitionTo')(thisState, afterEmitting)\n      if (err) {\n        throw new TypeError(err)\n      }\n      return (\n        thisState !== currentState() &&\n        _peek(afterEmitting) === thisState\n      )\n    }\n\n    return _state_canTransitionTo(...testStates)\n  }\n\n  function statesAvailableFromHere (state) {\n    const _state = !isUndefined(state)\n      ? state\n      : currentState()\n\n    const err = argTypeError(\n      { state: isString }\n    )('statesAvailableFromHere')(_state)\n    if (err) {\n      throw new TypeError(err)\n    }\n\n    return routes.reduce((acc, route) => {\n      const [fromState, toState] = route\n        .split(cxArrow)\n        .map(state => state.trim())\n\n      return (fromState === _state)\n        ? [...acc, toState]\n        : acc\n    }, [])\n  }\n\n  function _inState (state, anyOrFn, ...fnArgs) {\n    const conditionMatches = currentState() === state\n\n    if (isUndefined(anyOrFn)) {\n      return conditionMatches\n    }\n    if (!conditionMatches) {\n      return null\n    }\n    if (isFunction(anyOrFn)) {\n      return anyOrFn(...fnArgs)\n    }\n\n    return anyOrFn\n  }\n\n  function _inStateObject(stateObject, ...fnArgs) {\n    const match = Object\n      .entries(stateObject)\n      .find(([state]) => _inState(state))\n\n    return match\n      ? _inState(...match.concat(fnArgs))\n      : null\n  }\n\n  function inState (...args) {\n    const err = argTypeError(\n      { state: [isString, isPojo] }\n    )('inState')(args[0])\n    if (err) {\n      throw new TypeError(err)\n    }\n\n    return isPojo(args[0])\n      ? _inStateObject(...args)\n      : _inState(...args)\n  }\n\n  const emit = (eventName, ...args) => {\n    const err = argTypeError(\n      { eventName: isString }\n    )('emit')(eventName)\n    if (err) {\n      throw new TypeError(err)\n    }\n    _peek(eventName)\n    return events.emit(eventName, ...args)\n  }\n\n  const enter = (state, ...args) => {\n    const err = argTypeError(\n      { state: isString }\n    )('enter')(state)\n    if (err) {\n      throw new TypeError(err)\n    }\n\n    const inState = currentState()\n    const toState = state\n\n    if (toState === inState) {\n      transitionNoOp(`Already in state: \"${toState}\"`)\n      return false\n    }\n\n    if (!states.includes(toState)) {\n      transitionNoOp(`Invalid state \"${toState}\", not switching`)\n      return false\n    }\n\n    const nextRoute = `${inState}->${toState}`\n    if (!routes.includes(nextRoute)) {\n      transitionNoOp(`Invalid transition \"${nextRoute}\", not switching`)\n      return false\n    }\n\n    // Fell-through, can enter next state\n    _console.info(`${logPrefix}: tId<${++transitionId}>: ${nextRoute}`)\n\n    stateHistory.push(toState)\n    if (stateHistory.length > stateHistoryLimit) {\n      stateHistory.shift()\n    }\n\n    emitInternalEvent(INTERNAL_EVENTS[ON_SWITCHING], toState, inState, ...args)\n    emitInternalEvent(nextRoute, ...args)\n    emitInternalEvent(INTERNAL_EVENTS[ON_SWITCHED], toState, inState, ...args)\n\n    return true\n  }\n\n  function onEvent (eventName, cb) {\n    const err = argTypeError(\n      { eventName: isString, cb: isFunction }\n    )('onEvent')(eventName, cb)\n    if (err) {\n      throw new TypeError(err)\n    }\n\n    events.on(eventName, cb)\n    return () => events.off(eventName, cb)\n  }\n\n  const switchMethods = Object\n    .keys(INTERNAL_EVENTS)\n    .reduce((obj, methodName) => ({\n      ...obj,\n      [methodName]: cb => {\n        const err = argTypeError({ cb: isFunction })(methodName)(cb)\n        if (err) {\n          throw new TypeError(err)\n        }\n\n        const decreaseRefCount = statesHandled.increase(\n          INTERNAL_EVENTS[methodName]\n        )\n        const removeEvent = onInternalEvent(\n          INTERNAL_EVENTS[methodName], cb\n        )\n\n        return () => {\n          removeEvent()\n          decreaseRefCount()\n        }\n      }\n    }), {})\n\n  const enterExitMethods = [\n    [ON_EXITING, ON_SWITCHING],\n    [ON_ENTERING, ON_SWITCHING],\n    [ON_EXITED, ON_SWITCHED],\n    [ON_ENTERED, ON_SWITCHED]\n  ]\n    .reduce((obj, names) => {\n      const [methodName, switchMethod] = names\n      const name = methodName.slice(2)\n      const eventName = name.toLowerCase()\n\n      return {\n        ...obj,\n        [methodName]: (state, cb) => {\n          const err = argTypeError(\n            { state: isString, cb: isFunction }\n          )(methodName)(state, cb)\n          if (err) {\n            throw new TypeError(err)\n          }\n\n          const decreaseRefCounts = [\n            statesHandled.increase(state),\n            statesHandled.increase(`${state}:${eventName}`)\n          ]\n\n          const removeEvent = switchMethods[switchMethod](\n            (toState, fromState, ...args) => {\n              if (name.indexOf('Exit') === 0) {\n                state === fromState && cb(toState, ...args)\n              } else {\n                state === toState && cb(fromState, ...args)\n              }\n            }\n          )\n\n          return () => {\n            removeEvent()\n            decreaseRefCounts.map(fn => fn())\n          }\n        }\n      }\n    }, {})\n\n  function Emit (eventName, ...curriedArgs) {\n    const err = argTypeError({ eventName: isString })('Emit')(eventName)\n    if (err) {\n      throw new TypeError(err)\n    }\n\n    return (...args) => emit(eventName, ...[...curriedArgs, ...args])\n  }\n\n  function Enter (state, ...curriedArgs) {\n    const err = argTypeError({ state: isString })('Enter')(state)\n    if (err) {\n      throw new TypeError(err)\n    }\n\n    return (...args) => enter(state, ...[...curriedArgs, ...args])\n  }\n\n  function _InState (state, anyOrFn, ...curriedFnArgs) {\n    return (...fnArgs) =>\n      inState(state, anyOrFn, ...[...curriedFnArgs, ...fnArgs])\n  }\n\n  function _InStateObject(stateObject, ...curriedFnArgs) {\n    return (...fnArgs) =>\n      inState(stateObject, ...[...curriedFnArgs, ...fnArgs])\n  }\n\n  function InState (...args) {\n    const err = argTypeError({ state: [isString, isPojo] })('InState')(args[0])\n    if (err) {\n      throw new TypeError(err)\n    }\n\n    return isPojo(args[0])\n      ? _InStateObject(...args)\n      : _InState(...args)\n  }\n\n  function reset () {\n    _console.warn(`${logPrefix}: State-machine reset!`)\n\n    stateHistory.length = 0\n    stateHistory.push(startIn)\n  }\n\n  function transitionNoOp (message) {\n    const lastState = previousState()\n    const inState = currentState()\n    const prevRoute =\n      `${isUndefined(lastState) ? '[undefined]' : lastState}->${inState}`\n\n    const availableStates = statesAvailableFromHere()\n    if (!availableStates.length) {\n      _console.info(\n        `${logPrefix}: ${message}\\n` +\n          `  > Previous transition: \"${prevRoute}\"\\n` +\n          `  > There are no states available from \"${inState}\"`\n      )\n    } else {\n      _console.info(\n        `${logPrefix}: ${message}\\n` +\n          `  > Previous transition: \"${prevRoute}\"\\n` +\n          `  > From \"${inState}\", valid states are: [${availableStates\n            .map(state => `\"${state}\"`)\n            .join(', ')}]`\n      )\n    }\n  }\n\n  function inspect () {\n    return {\n      states: statesHandled.refs(),\n      transitions: routesHandled.refs(),\n      events: eventsHandled.refs()\n    }\n  }\n\n  function info () {\n    _console.log(`${logPrefix}: Information about this state-machine`)\n\n    logRefCounterInfo(statesHandled)\n    logRefCounterInfo(routesHandled)\n    logRefCounterInfo(eventsHandled)\n  }\n\n  function logRefCounterInfo (refCounter) {\n    const { description, table } = refCounter.toValue()\n    _console.log(description)\n    if (table.length) {\n      _console.table(table)\n    } else {\n      _console.log('  > No information')\n    }\n  }\n\n  return {\n    __STATEBOT__: 1,\n    statesAvailableFromHere,\n    canTransitionTo,\n    currentState,\n    previousState,\n    history: () => [...stateHistory],\n\n    emit: Pausable(emit),\n    Emit: Pausable(Emit),\n    enter: Pausable(enter),\n    Enter: Pausable(Enter),\n    inState,\n    InState,\n\n    info: () => info(),\n    inspect: () => inspect(),\n    name: () => name,\n\n    onEntered: enterExitMethods[ON_ENTERED],\n    onEntering: enterExitMethods[ON_ENTERING],\n    onExited: enterExitMethods[ON_EXITED],\n    onExiting: enterExitMethods[ON_EXITING],\n    onSwitched: switchMethods[ON_SWITCHED],\n    onSwitching: switchMethods[ON_SWITCHING],\n\n    onEvent,\n    onTransitions: transitions => applyHitcher(transitions, 'onTransitions'),\n    performTransitions: transitions => applyHitcher(transitions, 'performTransitions'),\n\n    pause,\n    paused,\n    peek,\n    reset,\n    resume,\n  }\n}\n\nfunction decomposeHitcherActions (hitcherActions) {\n  // For: performTransitions()\n  const transitionsForEvents = {}\n\n  // For: onTransitions()\n  const transitionsOnly = []\n\n  Object\n    .entries(hitcherActions)\n    .map(([routeChart, actionFnOrConfigObj]) => {\n      if (isFunction(actionFnOrConfigObj)) {\n        transitionsOnly.push({ routeChart, action: actionFnOrConfigObj })\n        return\n      }\n      if (!isPojo(actionFnOrConfigObj)) {\n        return\n      }\n\n      const { on: _on, then: _then } = actionFnOrConfigObj\n      const hasValidEventNames = isString(_on) || isArray(_on)\n      if (hasValidEventNames) {\n        const eventNames = [_on].flat()\n        eventNames.map(name => {\n          transitionsForEvents[name] = transitionsForEvents[name] || []\n          transitionsForEvents[name].push({ routeChart, action: _then })\n        })\n        return\n      }\n\n      // Behave like onTransitions() if a \"then\" is specified but\n      // there is no \"on\" event that triggers it\n      if (isFunction(_then)) {\n        transitionsOnly.push({ routeChart, action: actionFnOrConfigObj })\n      }\n    })\n\n  return { transitionsForEvents, transitionsOnly }\n}\n\nfunction expandTransitions (configs, canWarn) {\n  const allStates = []\n  const allRoutes = []\n\n  const _configs = configs.reduce((acc, config) => {\n    const { routeChart, action } = config\n    const { states, routes, transitions } = decomposeChart(routeChart)\n    if (canWarn()) {\n      allStates.push(...states)\n      allRoutes.push(...routes)\n    }\n    return [\n      ...acc,\n      ...transitions.map(([fromState, toState]) =>\n        ({ fromState, toState, action })\n      )\n    ]\n  }, [])\n\n  return {\n    configs: _configs,\n    states: allStates,\n    routes: allRoutes\n  }\n}\n\nfunction isStatebot (object) {\n  return (\n    isPojo(object) &&\n    isNumber(object.__STATEBOT__)\n  )\n}\n","\n//\n// STATEBOT ASSERTION HELPERS\n//\n\nexport {\n  routeIsPossible,\n  assertRoute\n}\n\nimport { isStatebot } from '../src/statebot'\nimport { decomposeRoute } from '../src/parsing'\nimport { isTemplateLiteral, ArgTypeError } from '../src/types'\nimport {\n  Defer,\n  Once,\n  Revokable,\n  Logger,\n} from '../src/utils'\n\nconst argTypeError = ArgTypeError('statebot.')\n\nfunction routeIsPossible (machine, route) {\n  const err = argTypeError(\n    { machine: isStatebot, route: isTemplateLiteral }\n  )('routeIsPossible')(machine, route)\n  if (err) {\n    throw TypeError(err)\n  }\n\n  const _route = decomposeRoute(route)\n  return _route.every((state, index) => {\n    if (index === _route.length - 1) {\n      return true\n    } else {\n      const nextState = _route[index + 1]\n      const availableStates = machine.statesAvailableFromHere(state)\n      const passes = availableStates.includes(nextState)\n      return passes\n    }\n  })\n}\n\nlet assertionId = 0\n\nfunction assertRoute (machine, expectedRoute, options) {\n  const err = argTypeError(\n    { machine: isStatebot, expectedRoute: isTemplateLiteral }\n  )('assertRoute')(machine, expectedRoute)\n  if (err) {\n    throw TypeError(err)\n  }\n\n  assertionId += 1\n\n  const {\n    description = 'Assertion complete',\n    fromState = '',\n    run = () => {},\n    permittedDeviations = 0,\n    timeoutInMs = 1000,\n    logLevel = 3\n  } = options || {}\n\n  const console = Logger(logLevel)\n\n  const prefix = `Statebot[${machine.name()}]: aId<${assertionId}>`\n  const route = decomposeRoute(expectedRoute)\n\n  console.log(`\\n${prefix}: Asserting route: [${route.join(' > ')}]`)\n  console.log(`${prefix}: > Assertion will start from state: \"${fromState}\"`)\n\n  const fromStateActionFn = Defer(run)\n  let removeFromStateActionFn = () => { }\n\n  const totalTimeTaken = TimeTaken()\n  let stateTimeTaken = TimeTaken()\n  let assertionTimeoutTimer\n  let deviations = 0\n  let pending = true\n  let unexpected = false\n\n  const consumeRoute = [...route]\n  const report = Table(\n    ['state', 'expected', 'info', 'took'],\n    ['center', 'center', 'left', 'right']\n  )\n\n  const finaliseReport = Once(err => {\n    addRow('', '', '', 'TOTAL: ' + totalTimeTaken())\n    report.lock()\n    console.log(`\\n${prefix}: ${description}: [${err ? 'FAILED' : 'SUCCESS'}]`)\n    console.table(report.content())\n    return err\n  })\n\n  const { addRow } = report\n  function enteredState (state) {\n    if (pending) {\n      addRow(state, '-', 'PENDING')\n    } else {\n      const expectedState = consumeRoute[0]\n      if (expectedState === state) {\n        addRow(state, expectedState, unexpected ? 'REALIGNED' : 'OKAY', stateTimeTaken())\n        unexpected = false\n        consumeRoute.shift()\n      } else {\n        addRow(state, expectedState, 'WRONG STATE', stateTimeTaken())\n        unexpected = true\n        deviations += 1\n      }\n      stateTimeTaken = TimeTaken()\n    }\n  }\n\n  return new Promise((resolve, reject) => {\n    if (consumeRoute.length === 0) {\n      reject(finaliseReport(new Error('NO ROUTE TO TEST')))\n      return\n    }\n\n    const clearTimeoutAndResolve = (...args) => {\n      clearTimeout(assertionTimeoutTimer)\n      removeFromStateActionFn()\n      removeOnSwitchingListener()\n      resolve(...args)\n    }\n\n    const clearTimeoutAndReject = err => {\n      clearTimeout(assertionTimeoutTimer)\n      removeFromStateActionFn()\n      removeOnSwitchingListener()\n      reject(err)\n    }\n\n    const bailout = message => {\n      while (consumeRoute.length) {\n        const expectedState = consumeRoute.shift()\n        addRow(machine.currentState(), `(${expectedState})`, message)\n        unexpected = false\n      }\n      clearTimeoutAndReject(finaliseReport(new Error(message)))\n    }\n\n    if (machine.inState(fromState)) {\n      pending = false\n      removeFromStateActionFn = fromStateActionFn()\n    }\n\n    const { revoke, fn } = Revokable(state => {\n      assertionTimeoutTimer = setTimeout(() => {\n        revoke()\n        bailout('TIMEOUT')\n      }, timeoutInMs)\n\n      enteredState(state)\n      if (pending && state === fromState) {\n        pending = false\n        removeFromStateActionFn = fromStateActionFn()\n      }\n      if (deviations > permittedDeviations) {\n        revoke()\n        bailout('TOO MANY DEVIATIONS')\n      }\n      if (consumeRoute.length <= 0) {\n        revoke()\n        clearTimeoutAndResolve(finaliseReport())\n      }\n    })\n\n    const removeOnSwitchingListener = machine.onSwitching(fn)\n  })\n}\n\nfunction Table (columns, alignments) {\n  columns = columns || []\n  alignments = alignments || []\n\n  const table = []\n  const alignment = columns.map((_, index) => alignments[index] || 'center')\n\n  let locked = false\n  function lock () {\n    locked = true\n  }\n\n  function addRow (...args) {\n    if (locked) {\n      return\n    }\n    const obj = columns.reduce((acc, col, index) => {\n      const row = args[index] || ''\n      return {\n        ...acc,\n        [col]: row\n      }\n    }, {})\n    table.push(obj)\n  }\n\n  function colSizes () {\n    return table.reduce(\n      (acc, row) => columns.map(\n        (col, index) => Math.max(row[col].length, acc[index])\n      ), columns.map(() => 0)\n    )\n  }\n\n  function content () {\n    const sizes = colSizes()\n    function formatField (value, index) {\n      const size = sizes[index]\n      const align = alignment[index]\n      if (align === 'left') {\n        return value.padEnd(size)\n      }\n      if (align === 'right') {\n        return value.padStart(size)\n      }\n      return value\n    }\n    const output = table.reduce((acc, row) => {\n      const formattedRow = columns.reduce((acc, col, index) => ({\n        ...acc,\n        [col]: formatField(row[col], index)\n      }), {})\n      return [...acc, formattedRow]\n    }, [])\n    return output\n  }\n\n  return {\n    lock: lock,\n    addRow: addRow,\n    content: content\n  }\n}\n\nfunction TimeTaken () {\n  const startTime = Date.now()\n\n  function fmt (num, digits) {\n    return num.toFixed(digits).replace(/\\.0+$/, '')\n  }\n\n  return function () {\n    const duration = Date.now() - startTime\n\n    if (duration < 500) {\n      return `${fmt(duration)} ms`\n    } else if (duration < 5000) {\n      return `${fmt(duration / 1000, 2)} s `\n    } else if (duration < 60000) {\n      return `${fmt(duration / 1000, 1)} s `\n    } else {\n      return `${fmt(duration / 1000 / 60, 1)} m `\n    }\n  }\n}\n","export const makeHooks = ({ Statebot, useEffect, useState, useMemo }) => {\n  if (![useEffect, useState, useMemo].every(x => typeof x === 'function')) {\n    console.warn('Statebot Hooks unavailable: React or Mithril not found')\n  }\n\n  function useStatebot(bot) {\n    const [state, setState] = useState(bot.currentState())\n\n    useEffect(() => {\n      let done = false\n\n      const removeListener = bot.onSwitched((toState) => {\n        if (done) {\n          return\n        }\n        setState(toState)\n      })\n\n      return () => {\n        done = true\n        removeListener()\n      }\n    }, [bot])\n\n    return state\n  }\n\n  function useStatebotFactory(name, config) {\n    // We memoise Statebot since it's based on EventEmitter,\n    // so we create it once and add/remove listeners for\n    // the life-cycle of the component\n    const { bot, listeners } = useMemo(() => {\n      const {\n        performTransitions = {},\n        onTransitions = {},\n        ...botConfig\n      } = config || {}\n\n      const bot = Statebot(name, botConfig)\n      const listeners = [\n        bot.performTransitions(performTransitions),\n        bot.onTransitions(onTransitions),\n      ]\n\n      return {\n        bot,\n        listeners,\n      }\n    }, [])\n\n    useEffect(\n      () => () => {\n        if (typeof bot.pause === 'function') {\n          bot.pause()\n        }\n        listeners.forEach((off) => off())\n      },\n      [bot, listeners]\n    )\n\n    const state = useStatebot(bot)\n\n    return { state, bot }\n  }\n\n  function useStatebotEvent(bot, eventName, stateOrFn, maybeFn) {\n    useEffect(() => {\n      let done = false\n\n      function onSwitchFn(...args) {\n        if (done) {\n          return\n        }\n        stateOrFn(...args)\n      }\n      function onEnterOrExitFn(...args) {\n        if (done) {\n          return\n        }\n        maybeFn(...args)\n      }\n\n      const args =\n        typeof maybeFn === 'function'\n          ? [stateOrFn, onEnterOrExitFn]\n          : [onSwitchFn]\n\n      const removeListener = bot[eventName](...args)\n\n      return () => {\n        done = true\n        removeListener()\n      }\n    }, [bot, eventName, stateOrFn, maybeFn])\n  }\n\n  return {\n    useStatebot,\n    useStatebotFactory,\n    useStatebotEvent,\n  }\n}\n","//\n// STATEBOT EXPORTS\n//\n\nimport { Statebot, isStatebot } from './statebot'\nimport { assertRoute, routeIsPossible } from '../assert'\nimport { decomposeChart } from './parsing'\nimport { makeHooks } from '../hooks/make-hooks.mjs'\n\nconst { useEffect, useState, useMemo } = (global =>\n  typeof React !== 'undefined'\n    ? // eslint-disable-next-line no-undef\n      React\n    : global)(window)\n\nconst { useStatebot, useStatebotFactory, useStatebotEvent } = makeHooks({\n  Statebot,\n  useEffect,\n  useState,\n  useMemo\n})\n\nexport {\n  Statebot,\n  isStatebot,\n  routeIsPossible,\n  assertRoute,\n  decomposeChart,\n  useStatebot,\n  useStatebotFactory,\n  useStatebotEvent\n}\n"],"names":["n","all","Map","on","t","e","i","get","push","set","off","splice","indexOf","emit","slice","map","isEventEmitter","obj","isObject","isFunction","addListener","removeListener","displayName","isArray","Array","isArguments","Object","prototype","toString","call","isString","isAllStrings","arr","every","isUndefined","undefined","isNull","isNumber","isPojo","getPrototypeOf","isTemplateLiteral","typeErrorStringIfFnReturnsFalse","argName","argTypeFn","arg","name","typeErrorStringIfTypeOfFails","argType","typeErrorStringFromArgument","argMap","index","length","permittedArgTypes","errorDescs","filter","multipleTypesSpecified","shouldError","join","JSON","stringify","ArgTypeError","namespace","typeMap","entries","fnName","args","processedArgs","from","x","flat","err","signature","keys","wrapEmitter","events","eventName","wrapMap","fn","fnMeta","handleEvent","refCount","delete","uniq","input","reduce","acc","one","defer","timer","setTimeout","clearTimeout","Defer","Once","revoke","_fn","Revokable","result","revoked","Pausables","startPaused","runFnWhenPaused","paused","Pausable","pause","resume","ReferenceCounter","logPrefix","kind","description","expecting","_refs","ref","increase","countOf","decrease","count","Math","max","refs","table","sort","key","toValue","Definitions","dictionary","undefine","word","definition","next","define","definitionsOf","Logger","level","_console","info","log","warn","none","canWarn","canLog","canInfo","error","console","rxCRLF","cxPipe","cxArrow","rxOperators","rxUnsafe","replace","rxLineContinuations","RegExp","rxDisallowedCharacters","rxComment","argTypeError","decomposeRoute","templateLiteral","TypeError","lines","condensedLines","linesOfTokens","tokenisedLines","route","decomposeChart","chart","linesOfRoutes","flatMap","decomposeRouteFromTokens","linesOfTransitions","decomposeTransitionsFromRoute","emptyStateFound","routeKeys","includes","filteredRoutes","filteredStates","transitions","split","routes","states","Boolean","linesFrom","strOrArr","line","output","previousLineHasContinuation","condenseLine","condensedLine","sanitisedLine","test","finalCondensedLine","str","previousStates","fromStates","toStates","fromState","toState","ON_EXITING","ON_ENTERING","ON_EXITED","ON_ENTERED","ON_SWITCHING","ON_SWITCHED","INTERNAL_EVENTS","Statebot","options","logLevel","historyLimit","mitt","startIn","Error","stateHistory","stateHistoryLimit","transitionId","transitionsFromEvents","internalEvents","emitInternalEvent","onInternalEvent","cb","statesHandled","routesHandled","eventsHandled","applyHitcher","hitcher","hitcherActions","enter","Enter","Emit","allStates","allRoutes","transitionsForEvents","transitionsOnly","decomposeHitcherActions","eventsMappedToTransitionConfigs","decomposeTransitionsForEvent","transitionConfigs","expandTransitions","allCleanupFns","createEventHandlerForTransition","concat","configs","runThenMethodOnTransition","invalidStates","state","invalidRoutes","config","action","bindActionTo","transitionsAndAction","ifStateThenEnterState","inState","runActionFor","onEvent","eventWasHandled","some","transitionNoOp","actionFn","onExitingState","uninstall","enterExitMethods","_peek","stateObject","calledInternally","err1","eventAndState","currentState","statesFromEvent","reason","RangeError","err2","hasOwnProperty","anyOrFn","peek","previousState","_state_canTransitionTo","nextStates","statesAvailableFromHere","canTransitionTo","testStates","thisState","afterEmitting","_state","trim","_inState","conditionMatches","fnArgs","_inStateObject","match","find","nextRoute","shift","switchMethods","methodName","decreaseRefCount","removeEvent","names","switchMethod","toLowerCase","decreaseRefCounts","curriedArgs","_InState","curriedFnArgs","_InStateObject","InState","reset","message","lastState","prevRoute","availableStates","inspect","logRefCounterInfo","refCounter","__STATEBOT__","history","onEntered","onEntering","onExited","onExiting","onSwitched","onSwitching","onTransitions","performTransitions","routeChart","actionFnOrConfigObj","_on","then","_then","hasValidEventNames","eventNames","_configs","isStatebot","object","routeIsPossible","machine","_route","nextState","passes","assertionId","assertRoute","expectedRoute","run","permittedDeviations","timeoutInMs","prefix","fromStateActionFn","removeFromStateActionFn","totalTimeTaken","TimeTaken","stateTimeTaken","assertionTimeoutTimer","deviations","pending","unexpected","consumeRoute","report","Table","finaliseReport","addRow","lock","content","enteredState","expectedState","Promise","resolve","reject","clearTimeoutAndResolve","removeOnSwitchingListener","clearTimeoutAndReject","bailout","columns","alignments","alignment","_","locked","col","row","colSizes","sizes","formatField","value","size","align","padEnd","padStart","formattedRow","startTime","Date","now","fmt","num","digits","toFixed","duration","makeHooks","useEffect","useState","useMemo","useStatebot","bot","setState","done","useStatebotFactory","listeners","botConfig","forEach","useStatebotEvent","stateOrFn","maybeFn","onSwitchFn","onEnterOrExitFn","global","React","window"],"mappings":"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"}