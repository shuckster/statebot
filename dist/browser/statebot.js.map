{"version":3,"file":"statebot.js","sources":["../../node_modules/.pnpm/mitt@3.0.0/node_modules/mitt/dist/mitt.mjs","../../src/types.js","../../src/utils.js","../../src/parsing.js","../../src/statebot.js","../../assert/index.js","../../hooks/make-hooks.js","../../src/browser.js"],"sourcesContent":["export default function(n){return{all:n=n||new Map,on:function(t,e){var i=n.get(t);i?i.push(e):n.set(t,[e])},off:function(t,e){var i=n.get(t);i&&(e?i.splice(i.indexOf(e)>>>0,1):n.set(t,[]))},emit:function(t,e){var i=n.get(t);i&&i.slice().map(function(n){n(e)}),(i=n.get(\"*\"))&&i.slice().map(function(n){n(t,e)})}}}\n//# sourceMappingURL=mitt.mjs.map\n","//\n// RUNTIME TYPE CHECKING\n//\n\nexport {\n  isArray,\n  isArguments,\n  isBoolean,\n  isEventEmitter,\n  isFunction,\n  isPojo,\n  isString,\n  isAllStrings,\n  isTemplateLiteral,\n  isNumber,\n  isThisValue,\n  isNull,\n  isUnset,\n  isUndefined,\n  ArgTypeError,\n  ObjTypeError\n}\n\n//\n// isType\n//\n\n// isEventEmitter\n//\nfunction isEventEmitter(obj) {\n  return (\n    isObject(obj) &&\n    isFunction(obj.emit) &&\n    (isFunction(obj.addListener) || isFunction(obj.on)) &&\n    (isFunction(obj.removeListener) || isFunction(obj.off))\n  )\n}\n\nisEventEmitter.displayName = 'isEventEmitter'\n\n// isUnset\n//\nfunction isUnset(obj) {\n  return isNull(obj) || isUndefined(obj)\n}\n\nisArray.displayName = 'isUnset'\n\n// isArray\n//\nfunction isArray(obj) {\n  return Array.isArray(obj)\n}\n\nisArray.displayName = 'isArray'\n\n// isArguments\n//\nfunction isArguments(obj) {\n  return Object.prototype.toString.call(obj) === '[object Arguments]'\n}\n\nisArguments.displayName = 'isArguments'\n\n// isBoolean\n//\nfunction isBoolean(obj) {\n  return obj === true || obj === false\n}\n\nisBoolean.displayName = 'isBoolean'\n\n// isFunction\n//\nfunction isFunction(obj) {\n  return typeof obj === 'function'\n}\n\nisFunction.displayName = 'isFunction'\n\n// isString\n//\nfunction isString(obj) {\n  return typeof obj === 'string'\n}\n\nisString.displayName = 'isString'\n\n// isAllStrings\n//\nfunction isAllStrings (arr) {\n  return isArray(arr) && arr.every(isString)\n}\n\nisAllStrings.displayName = 'isAllStrings'\n\n// isUndefined\n//\nfunction isUndefined(obj) {\n  return obj === undefined\n}\n\nisUndefined.displayName = 'isUndefined'\n\n// isNull\n//\nfunction isNull(obj) {\n  return obj === null\n}\n\nisNull.displayName = 'isNull'\n\n// isNumber\n//\nfunction isNumber(obj) {\n  return typeof obj === 'number'\n}\n\nisNumber.displayName = 'isNumber'\n\n// isObject\n//\nfunction isObject(obj) {\n  return typeof obj === 'object' && !isNull(obj)\n}\n\nisObject.displayName = 'isObject'\n\n// isPojo\n//\nfunction isPojo(obj) {\n  if (isNull(obj) || !isObject(obj) || isArguments(obj)) {\n    return false\n  }\n  return Object.getPrototypeOf(obj) === Object.prototype\n}\n\nisPojo.displayName = 'isPojo'\n\n// isTemplateLiteral\n//\nfunction isTemplateLiteral(obj) {\n  if (isString(obj)) {\n    return true\n  }\n  if (!isArray(obj)) {\n    return false\n  }\n  return obj.every(isString)\n}\n\nisTemplateLiteral.displayName = 'isTemplateLiteral'\n\n// isThisValue\n//\nfunction isThisValue(value) {\n  function inObject(obj) {\n    return obj === value\n  }\n  inObject.displayName = `isThisValue(${value})`\n  return inObject\n}\n\n//\n// ArgTypeError\n//\n\nconst typeErrorStringIfFnReturnsFalse = (argName, argTypeFn, arg) => {\n  return argTypeFn(arg)\n    ? undefined\n    : (argTypeFn.displayName || argTypeFn.name) +\n        `(${argName}) did not return true`\n}\n\nconst typeErrorStringIfTypeOfFails = (argName, argType, arg) => {\n  return typeof arg === argType\n    ? undefined\n    : `Argument \"${argName}\" should be a ${argType}`\n}\n\nconst typeErrorStringFromArgument = argMap => (arg, index) => {\n  if (index >= argMap.length) {\n    return\n  }\n\n  const { argName, argType } = argMap[index]\n  if (isUndefined(arg)) {\n    return `Argument undefined: \"${argName}\"`\n  }\n\n  const permittedArgTypes = Array.isArray(argType) ? argType : [argType]\n\n  const errorDescs = permittedArgTypes\n    .map(argType =>\n      isFunction(argType)\n        ? typeErrorStringIfFnReturnsFalse(argName, argType, arg)\n        : typeErrorStringIfTypeOfFails(argName, argType, arg)\n    )\n    .filter(isString)\n\n  const multipleTypesSpecified = permittedArgTypes.length > 1\n  const shouldError = multipleTypesSpecified\n    ? errorDescs.length > 1\n    : errorDescs.length\n\n  if (shouldError) {\n    return (\n      errorDescs.join('\\n| ') +\n      `\\n> typeof ${argName} === ${typeof arg}(${JSON.stringify(arg)})`\n    )\n  }\n}\n\nfunction ArgTypeError(namespace) {\n  return typeMap => {\n    const argMap = Object.entries(typeMap).map(([argName, argType]) => ({\n      argName,\n      argType\n    }))\n\n    return fnName =>\n      (...args) => {\n        const processedArgs = Array\n          .from(args, x => isArguments(x) ? Array.from(x) : x)\n          .flat(1)\n\n        const err = processedArgs\n          .map(typeErrorStringFromArgument(argMap))\n          .filter(isString)\n\n        if (!err.length) {\n          return\n        }\n\n        const signature = Object.keys(typeMap).join(', ')\n        return (\n          `\\n${namespace || ''}${fnName}(${signature}):\\n` +\n          `${err.map(err => `| ${err}`).join('\\n')}`\n        )\n      }\n  }\n}\n\nfunction ObjTypeError(namespace) {\n  return typeMap => {\n    const keys = Object.keys(typeMap)\n    const objTypeError = ArgTypeError(namespace)(typeMap)\n    return fnName => obj => {\n      const values = valuesOf(obj, { keys })\n      const err = objTypeError(fnName)(...values)\n      return err\n    }\n  }\n}\n\nfunction valuesOf(obj, options) {\n  const { keys } = options\n  if (!Array.isArray(keys)) {\n    return Object.values(obj)\n  }\n  return keys.reduce((acc, key) => {\n    return [...acc, obj[key]]\n  }, [])\n}\n","\n//\n// STATEBOT UTILS\n//\n\nexport {\n  Defer,\n  Definitions,\n  Logger,\n  Once,\n  Pausables,\n  ReferenceCounter,\n  Revokable,\n  uniq,\n  wrapEmitter,\n}\n\nimport { isString } from './types'\n\nfunction wrapEmitter (events) {\n  const emit = (eventName, ...args) =>\n    events.emit(eventName, args)\n\n  const addListener = events.addListener\n    ? (...args) => events.addListener(...args)\n    : (...args) => events.on(...args)\n\n  const removeListener = events.removeListener\n    ? (...args) => events.removeListener(...args)\n    : (...args) => events.off(...args)\n\n  const wrapMap = new Map()\n\n  function on (eventName, fn) {\n    let fnMeta = wrapMap.get(fn)\n    if (!fnMeta) {\n      fnMeta = {\n        handleEvent: (args = []) => fn(...[args].flat()),\n        refCount: 0\n      }\n      wrapMap.set(fn, fnMeta)\n    }\n\n    fnMeta.refCount += 1\n    addListener(eventName, fnMeta.handleEvent)\n  }\n\n  function off (eventName, fn) {\n    let fnMeta = wrapMap.get(fn)\n    if (!fnMeta) {\n      return\n    }\n\n    removeListener(eventName, fnMeta.handleEvent)\n    fnMeta.refCount -= 1\n    if (fnMeta.refCount === 0) {\n      wrapMap.delete(fn)\n    }\n  }\n\n  return {\n    emit,\n    on,\n    off\n  }\n}\n\n//\n// uniq\n//\n\nfunction uniq (input) {\n  return input.reduce((acc, one) =>\n    acc.indexOf(one) === -1\n      ? (acc.push(one), acc)\n      : acc\n    , []\n  )\n}\n\n//\n// defer\n//\n\nfunction defer (fn, ...args) {\n  const timer = setTimeout(fn, 0, ...args)\n  return () => { clearTimeout(timer) }\n}\n\nfunction Defer (fn) {\n  return (...args) => defer(fn, ...args)\n}\n\n//\n// Revokable\n//\n\nfunction Once (fn) {\n  const { revoke, fn: _fn } = Revokable(fn)\n  let result\n  return function (...args) {\n    result = _fn(...args)\n    revoke()\n    return result\n  }\n}\n\nfunction Revokable (fn) {\n  let revoked = false\n  let result\n  return {\n    fn: (...args) => {\n      if (!revoked) {\n        result = fn(...args)\n      }\n      return result\n    },\n    revoke: () => {\n      revoked = true\n    }\n  }\n}\n\n//\n// Pausables\n//\n\nfunction Pausables (startPaused, runFnWhenPaused) {\n  runFnWhenPaused = runFnWhenPaused || function () {}\n  let paused = !!startPaused\n\n  function Pausable (fn) {\n    return (...args) => {\n      if (paused) {\n        runFnWhenPaused()\n        return false\n      }\n      return fn(...args)\n    }\n  }\n\n  return {\n    Pausable,\n    paused: () => paused,\n    pause: () => { paused = true },\n    resume: () => { paused = false },\n  }\n}\n\n//\n// ReferenceCounter\n//\n\nfunction ReferenceCounter (logPrefix, kind, description, ...expecting) {\n  const _refs = [...expecting]\n    .flat()\n    .reduce((acc, ref) => ({ ...acc, [ref]: 0 }), {})\n\n  function increase (ref) {\n    _refs[ref] = countOf(ref) + 1\n    return () => { decrease(ref) }\n  }\n  function decrease (ref) {\n    const count = countOf(ref) - 1\n    _refs[ref] = Math.max(count, 0)\n  }\n  function countOf (ref) {\n    return _refs[ref] || 0\n  }\n  function refs () {\n    return { ..._refs }\n  }\n  function table () {\n    return Object.keys(_refs).sort()\n      .map(key => [key, _refs[key]])\n      .map(([ref, count]) => {\n        return {\n          [kind]: ref,\n          refs: count || 'None'\n        }\n      })\n  }\n  function toValue () {\n    return {\n      description: `${logPrefix}: ${description}:`,\n      table: table()\n    }\n  }\n  return {\n    increase,\n    decrease,\n    countOf,\n    toValue,\n    refs\n  }\n}\n\n//\n// Definitions\n//\n\nfunction Definitions() {\n  const dictionary = {}\n\n  function undefine(word, definition) {\n    dictionary[word] = (dictionary[word] || []).filter(\n      (next) => next !== definition\n    )\n    if (dictionary[word].length === 0) {\n      delete dictionary[word]\n    }\n  }\n\n  function define(word, definition) {\n    dictionary[word] = dictionary[word] || []\n    dictionary[word].push(definition)\n    return () => undefine(word, definition)\n  }\n\n  function definitionsOf(word) {\n    return dictionary[word] || []\n  }\n\n  return {\n    define,\n    undefine,\n    definitionsOf,\n  }\n}\n\n//\n// Logger\n//\n\nfunction Logger (level, _console) {\n  if (isString(level)) {\n    level = ({\n      info: 3,\n      log: 2,\n      warn: 1,\n      none: 0\n    })[level] || 3\n  }\n  function canWarn () {\n    return level >= 1\n  }\n  function canLog () {\n    return level >= 2\n  }\n  function canInfo () {\n    return level >= 3\n  }\n  const { info, table, log, warn, error } = _console || console\n  return {\n    canWarn,\n    canLog,\n    canInfo,\n\n    info: (...args) => { canInfo() && info(...args) },\n    table: (...args) => { canLog() && table(...args) },\n    log: (...args) => { canLog() && log(...args) },\n    warn: (...args) => { canWarn() && warn(...args) },\n    error: (...args) => { error(...args) }\n  }\n}\n","\n//\n// STATEBOT CHART/ROUTE PARSING\n//\n\nconst rxCRLF = /[\\r\\n]/\nconst cxPipe = '|'\nconst cxArrow = '->'\nconst rxOperators = [cxPipe, cxArrow]\n  .map(rxUnsafe => rxUnsafe.replace('|', '\\\\|'))\n  .join('|')\n\nconst rxLineContinuations = new RegExp(`(${rxOperators})$`)\nconst rxDisallowedCharacters = /[^a-z0-9!@#$%^&*:_+=<>|~.\\x2D]/gi\nconst rxComment = /(\\/\\/[^\\n\\r]*)/\n\nexport {\n  cxPipe,\n  cxArrow,\n  rxDisallowedCharacters,\n  decomposeChart,\n  decomposeRoute\n}\n\nimport { uniq } from './utils'\nimport { isTemplateLiteral, ArgTypeError } from './types'\n\nconst argTypeError = ArgTypeError('statebot.')\n\nfunction decomposeRoute (templateLiteral) {\n  const err = argTypeError(\n    { templateLiteral: isTemplateLiteral }\n  )('decomposeRoute')(templateLiteral)\n  if (err) {\n    throw TypeError(err)\n  }\n\n  const lines = condensedLines(templateLiteral)\n  const linesOfTokens = tokenisedLines(lines)\n  const route = linesOfTokens.flat(2)\n\n  return route\n}\n\nfunction decomposeChart (chart) {\n  const err = argTypeError(\n    { chart: isTemplateLiteral }\n  )('decomposeChart')(chart)\n  if (err) {\n    throw TypeError(err)\n  }\n\n  const lines = condensedLines(chart)\n  const linesOfTokens = tokenisedLines(lines)\n  const linesOfRoutes = linesOfTokens\n    .flatMap(decomposeRouteFromTokens)\n\n  const linesOfTransitions = linesOfRoutes\n    .flatMap(decomposeTransitionsFromRoute)\n\n  let emptyStateFound = false\n  const routeKeys = linesOfTransitions.map(route => {\n    if (route.includes('')) {\n      emptyStateFound = true\n    }\n    return route.join(cxArrow)\n  })\n\n  const filteredRoutes = uniq(routeKeys)\n  const filteredStates = uniq(linesOfTokens.flat(3))\n\n  return {\n    transitions: filteredRoutes.map(route => route.split(cxArrow)),\n    routes: filteredRoutes,\n    states: !emptyStateFound\n      ? filteredStates.filter(Boolean)\n      : filteredStates\n  }\n}\n\nfunction linesFrom (strOrArr) {\n  return [strOrArr]\n    .flat()\n    .reduce((acc, line) => [...acc, ...line.split(rxCRLF)], [])\n}\n\nfunction condensedLines (strOrArr) {\n  const input = linesFrom(strOrArr)\n  const output = []\n\n  let previousLineHasContinuation = false\n\n  const condenseLine = (condensedLine, line) => {\n    const sanitisedLine = line\n      .replace(rxComment, '')\n      .replace(rxDisallowedCharacters, '')\n\n    if (!sanitisedLine) {\n      return condensedLine\n    }\n\n    previousLineHasContinuation = rxLineContinuations\n      .test(sanitisedLine)\n\n    if (previousLineHasContinuation) {\n      return condensedLine + sanitisedLine\n    }\n\n    output.push(condensedLine + sanitisedLine)\n    return ''\n  }\n\n  const finalCondensedLine = input\n    .reduce(condenseLine, '')\n\n  if (previousLineHasContinuation || finalCondensedLine) {\n    return [...output, finalCondensedLine]\n  }\n\n  return [...output]\n}\n\nfunction tokenisedLines (lines) {\n  return lines\n    .map(line => line\n      .split(cxArrow)\n      .map(str => str.split(cxPipe))\n    )\n}\n\nfunction decomposeRouteFromTokens (line) {\n  const output = []\n\n  line.reduce((previousStates, states) => {\n    if (previousStates === false) {\n      return [...states]\n    }\n\n    output.push([previousStates, [...states]])\n    return [...states]\n  }, false)\n\n  return output\n}\n\nfunction decomposeTransitionsFromRoute([fromStates, toStates]) {\n  return fromStates.reduce(\n    (acc, fromState) => (\n      acc.push(...toStates.map(toState => [fromState, toState])), acc\n    ),\n    []\n  )\n}\n","\n//\n// STATEBOT FSM\n//\n\nexport {\n  Statebot,\n  isStatebot\n}\n\nconst ON_EXITING = 'onExiting'\nconst ON_ENTERING = 'onEntering'\nconst ON_EXITED = 'onExited'\nconst ON_ENTERED = 'onEntered'\nconst ON_SWITCHING = 'onSwitching'\nconst ON_SWITCHED = 'onSwitched'\n\nconst INTERNAL_EVENTS = {\n  [ON_SWITCHING]: '(ANY)state:changing',\n  [ON_SWITCHED]: '(ANY)state:changed'\n}\n\nimport mitt from 'mitt'\n\nimport {\n  wrapEmitter,\n  Definitions,\n  Logger,\n  ReferenceCounter,\n  Pausables,\n  Once,\n} from './utils'\n\nimport {\n  isArray,\n  isNumber,\n  isEventEmitter,\n  isFunction,\n  isPojo,\n  isString,\n  isAllStrings,\n  isUndefined,\n  ArgTypeError,\n} from './types'\n\nimport { decomposeChart, cxArrow } from './parsing'\n\nfunction Statebot (name, options) {\n  if (!isString(name)) {\n    throw new TypeError('\\nStatebot: Please specify a name for this machine')\n  }\n\n  const logPrefix = `Statebot[${name}]`\n  if (!isPojo(options)) {\n    throw new TypeError(`\\n${logPrefix}: Please specify options for this machine`)\n  }\n\n  const {\n    chart = undefined,\n    logLevel = 3,\n    historyLimit = 2\n  } = options || {}\n\n  const events = isUndefined(options.events)\n    ? wrapEmitter(mitt())\n    : isEventEmitter(options.events) && wrapEmitter(options.events)\n\n  if (!events) {\n    throw new TypeError(`\\n${logPrefix}: Invalid event-emitter specified in options`)\n  }\n\n  const { states = [], routes = [] } = chart\n    ? decomposeChart(chart)\n    : options\n\n  const { startIn = states[0] } = options\n\n  if (!states.includes(startIn)) {\n    throw new Error(`${logPrefix}: Starting-state not in chart: \"${startIn}\"`)\n  }\n\n  const argTypeError = ArgTypeError(`${logPrefix}#`)\n  const _console = Logger(logLevel, console)\n  const { canWarn } = _console\n\n  const stateHistory = [startIn]\n  const stateHistoryLimit = Math.max(historyLimit, 2)\n\n  let transitionId = 0\n\n  const { pause, resume, paused, Pausable } = Pausables(false, () =>\n    _console.warn(`${logPrefix}: Ignoring callback, paused`)\n  )\n\n  const transitionsFromEvents = Definitions()\n\n  const internalEvents = wrapEmitter(mitt())\n  const emitInternalEvent = Pausable(internalEvents.emit)\n\n  function onInternalEvent (eventName, cb) {\n    internalEvents.on(eventName, cb)\n    return () => internalEvents.off(eventName, cb)\n  }\n\n  const statesHandled = ReferenceCounter(\n    logPrefix,\n    'states',\n    'Listening for the following state-changes',\n    [...states]\n  )\n  const routesHandled = ReferenceCounter(\n    logPrefix,\n    'transitions',\n    'Listening for the following transitions',\n    [...routes]\n  )\n  const eventsHandled = ReferenceCounter(\n    logPrefix,\n    'events',\n    'Listening for the following events'\n  )\n\n  // Interprets onTransitions() and performTransitions()\n  function applyHitcher (hitcher, fnName) {\n    const hitcherActions =\n      isFunction(hitcher)\n        ? hitcher({ enter, emit, Enter, Emit })\n        : isPojo(hitcher) ? hitcher : null\n\n    if (!isPojo(hitcherActions)) {\n      throw new TypeError(\n        `${logPrefix}#${fnName}(): Expected an object, or a function that returns an object`\n      )\n    }\n\n    const allStates = []\n    const allRoutes = []\n    const {\n      transitionsForEvents,\n      transitionsOnly\n    } = decomposeHitcherActions(hitcherActions)\n\n    // Handle performTransitions() signature\n    // (configs with an event, and maybe a then-method too)\n    const eventsMappedToTransitionConfigs = Object\n      .entries(transitionsForEvents)\n      .reduce(decomposeTransitionsForEvent, {})\n\n    // Handle onTransitions() signature\n    // (transition-only, and maybe a then-function too)\n    const transitionConfigs = expandTransitions(transitionsOnly, canWarn)\n\n    // Now install handlers for on/performTransitions:\n    const allCleanupFns =\n      Object\n        .entries(eventsMappedToTransitionConfigs)\n        .map(createEventHandlerForTransition)\n        .concat(transitionConfigs.configs.map(runThenMethodOnTransition))\n        .flat()\n\n    // Debugging\n    // (if we're at the right level)\n    if (canWarn()) {\n      allStates.push(...transitionConfigs.states)\n      allRoutes.push(...transitionConfigs.routes)\n\n      const invalidStates = allStates.filter(state => !states.includes(state))\n      const invalidRoutes = allRoutes.filter(route => !routes.includes(route))\n\n      if (invalidStates.length) {\n        _console.warn(\n          `${logPrefix}#${fnName}(): Invalid states specified:\\n` +\n          invalidStates.map(state => `  > \"${state}\"`).join('\\n')\n        )\n      }\n      if (invalidRoutes.length) {\n        _console.warn(\n          `${logPrefix}#${fnName}(): Invalid transitions specified:\\n` +\n          invalidRoutes.map(route => `  > \"${route}\"`).join('\\n')\n        )\n      }\n    }\n\n    return () => allCleanupFns.map(fn => fn())\n\n    // Helper for onTransitions()\n    function runThenMethodOnTransition (config) {\n      const { fromState, toState, action } = config\n      const route = `${fromState}->${toState}`\n      return [\n        routesHandled.increase(route),\n        onInternalEvent(route, bindActionTo(toState, action))\n      ]\n    }\n\n    // Helpers for performTransitions()\n    function decomposeTransitionsForEvent (acc, [eventName, transitionsAndAction]) {\n      const {\n        states,\n        routes,\n        configs\n      } = expandTransitions(transitionsAndAction, canWarn)\n\n      if (canWarn()) {\n        allStates.push(...states)\n        allRoutes.push(...routes)\n      }\n\n      return {\n        ...acc,\n        [eventName]: configs\n      }\n    }\n\n    function ifStateThenEnterState ({ fromState, toState, action, args }) {\n      return inState(fromState, () => {\n        enter(toState, ...args)\n        isFunction(action) && runActionFor(toState, action, ...args)\n        return true\n      })\n    }\n\n    function createEventHandlerForTransition ([eventName, configs]) {\n      return [\n        eventsHandled.increase(eventName),\n        onEvent(eventName, (...args) => {\n          const eventWasHandled = configs\n            .map(config => ({ ...config, args }))\n            .some(ifStateThenEnterState)\n\n          if (!eventWasHandled) {\n            transitionNoOp(`Event not handled: \"${eventName}\"`)\n          }\n        })\n      ].concat(\n        configs.map(({ fromState, toState }) =>\n          transitionsFromEvents.define(`${eventName}:${fromState}`, toState)\n        )\n      )\n    }\n\n    function runActionFor (state, actionFn, ...args) {\n      const onExitingState = actionFn(...args)\n      if (isFunction(onExitingState)) {\n        const uninstall = Once(enterExitMethods[ON_EXITING](state, (toState) => {\n          uninstall()\n          onExitingState(toState)\n        }))\n\n        allCleanupFns.push(uninstall)\n      }\n    }\n\n    function bindActionTo (state, actionFn) {\n      return (...args) => runActionFor(state, actionFn, ...args)\n    }\n  }\n\n  function _peek (eventName, stateObject, calledInternally = true) {\n    const err1 = argTypeError({ eventName: isString })('peek')(eventName)\n    if (err1) {\n      throw new TypeError(err1)\n    }\n\n    const eventAndState = eventName + ':' + currentState()\n    const statesFromEvent = transitionsFromEvents.definitionsOf(eventAndState)\n\n    if (statesFromEvent.length > 1) {\n      const reason =\n        `${logPrefix}: Event \"${eventName}\" causes multiple transitions.\\n` +\n        `  > From state: \"${currentState()}\"\\n` +\n        `  > To states: \"${statesFromEvent.join(', ')}\"\\n\\n` +\n        `Check your performTransitions() config.`\n\n      throw new RangeError(reason)\n    }\n\n    if (!calledInternally && statesFromEvent.length === 0) {\n      if (eventsHandled.countOf(eventName) === 0) {\n        _console.warn(`${logPrefix}: Event not handled: \"${eventName}\"`)\n      } else {\n        _console.warn(`${logPrefix}: Will not transition after emitting: \"${eventName}\"`)\n      }\n    }\n\n    const toState = statesFromEvent[0]\n\n    if (isUndefined(stateObject)) {\n      return isUndefined(toState) ? currentState() : toState\n    }\n\n    const err2 = argTypeError({ stateObject: isPojo })('peek')(stateObject)\n    if (err2) {\n      throw new TypeError(err2)\n    }\n\n    if (Object.prototype.hasOwnProperty.call(stateObject, toState)) {\n      const anyOrFn = stateObject[toState]\n      return isFunction(anyOrFn)\n        ? anyOrFn()\n        : anyOrFn\n    }\n    return null\n  }\n\n  function peek (eventName, stateObject) {\n    return _peek(eventName, stateObject, false)\n  }\n\n  function previousState () {\n    return stateHistory[stateHistory.length - 2]\n  }\n\n  function currentState () {\n    return stateHistory[stateHistory.length - 1]\n  }\n\n  function _state_canTransitionTo (...states) {\n    const err = argTypeError(\n      { states: isAllStrings }\n    )('canTransitionTo')([states])\n    if (err) {\n      throw new TypeError(err)\n    }\n\n    if (!states.length) {\n      return false\n    }\n\n    const nextStates = statesAvailableFromHere()\n    return states.every(state => nextStates.includes(state))\n  }\n\n  function canTransitionTo (...states) {\n    const testStates = states.flat()\n    if (\n      testStates.length === 2 &&\n      isString(testStates[0]) &&\n      isPojo(testStates[1])\n    ) {\n      const thisState = testStates[0]\n      const { afterEmitting } = testStates[1]\n      const err = argTypeError(\n        { thisState: isString, '{ afterEmitting }': isString }\n      )('canTransitionTo')(thisState, afterEmitting)\n      if (err) {\n        throw new TypeError(err)\n      }\n      return (\n        thisState !== currentState() &&\n        _peek(afterEmitting) === thisState\n      )\n    }\n\n    return _state_canTransitionTo(...testStates)\n  }\n\n  function statesAvailableFromHere (state) {\n    const _state = !isUndefined(state)\n      ? state\n      : currentState()\n\n    const err = argTypeError(\n      { state: isString }\n    )('statesAvailableFromHere')(_state)\n    if (err) {\n      throw new TypeError(err)\n    }\n\n    return routes.reduce((acc, route) => {\n      const [fromState, toState] = route\n        .split(cxArrow)\n        .map(state => state.trim())\n\n      return (fromState === _state)\n        ? [...acc, toState]\n        : acc\n    }, [])\n  }\n\n  function _inState (state, anyOrFn, ...fnArgs) {\n    const conditionMatches = currentState() === state\n\n    if (isUndefined(anyOrFn)) {\n      return conditionMatches\n    }\n    if (!conditionMatches) {\n      return null\n    }\n    if (isFunction(anyOrFn)) {\n      return anyOrFn(...fnArgs)\n    }\n\n    return anyOrFn\n  }\n\n  function _inStateObject(stateObject, ...fnArgs) {\n    const match = Object\n      .entries(stateObject)\n      .find(([state]) => _inState(state))\n\n    return match\n      ? _inState(...match.concat(fnArgs))\n      : null\n  }\n\n  function inState (...args) {\n    const err = argTypeError(\n      { state: [isString, isPojo] }\n    )('inState')(args[0])\n    if (err) {\n      throw new TypeError(err)\n    }\n\n    return isPojo(args[0])\n      ? _inStateObject(...args)\n      : _inState(...args)\n  }\n\n  const emit = (eventName, ...args) => {\n    const err = argTypeError(\n      { eventName: isString }\n    )('emit')(eventName)\n    if (err) {\n      throw new TypeError(err)\n    }\n    _peek(eventName)\n    return events.emit(eventName, ...args)\n  }\n\n  const enter = (state, ...args) => {\n    const err = argTypeError(\n      { state: isString }\n    )('enter')(state)\n    if (err) {\n      throw new TypeError(err)\n    }\n\n    const inState = currentState()\n    const toState = state\n\n    if (toState === inState) {\n      transitionNoOp(`Already in state: \"${toState}\"`)\n      return false\n    }\n\n    if (!states.includes(toState)) {\n      transitionNoOp(`Invalid state \"${toState}\", not switching`)\n      return false\n    }\n\n    const nextRoute = `${inState}->${toState}`\n    if (!routes.includes(nextRoute)) {\n      transitionNoOp(`Invalid transition \"${nextRoute}\", not switching`)\n      return false\n    }\n\n    // Fell-through, can enter next state\n    _console.info(`${logPrefix}: tId<${++transitionId}>: ${nextRoute}`)\n\n    stateHistory.push(toState)\n    if (stateHistory.length > stateHistoryLimit) {\n      stateHistory.shift()\n    }\n\n    emitInternalEvent(INTERNAL_EVENTS[ON_SWITCHING], toState, inState, ...args)\n    emitInternalEvent(nextRoute, ...args)\n    emitInternalEvent(INTERNAL_EVENTS[ON_SWITCHED], toState, inState, ...args)\n\n    return true\n  }\n\n  function onEvent (eventName, cb) {\n    const err = argTypeError(\n      { eventName: isString, cb: isFunction }\n    )('onEvent')(eventName, cb)\n    if (err) {\n      throw new TypeError(err)\n    }\n\n    events.on(eventName, cb)\n    return () => events.off(eventName, cb)\n  }\n\n  const switchMethods = Object\n    .keys(INTERNAL_EVENTS)\n    .reduce((obj, methodName) => ({\n      ...obj,\n      [methodName]: cb => {\n        const err = argTypeError({ cb: isFunction })(methodName)(cb)\n        if (err) {\n          throw new TypeError(err)\n        }\n\n        const decreaseRefCount = statesHandled.increase(\n          INTERNAL_EVENTS[methodName]\n        )\n        const removeEvent = onInternalEvent(\n          INTERNAL_EVENTS[methodName], cb\n        )\n\n        return () => {\n          removeEvent()\n          decreaseRefCount()\n        }\n      }\n    }), {})\n\n  const enterExitMethods = [\n    [ON_EXITING, ON_SWITCHING],\n    [ON_ENTERING, ON_SWITCHING],\n    [ON_EXITED, ON_SWITCHED],\n    [ON_ENTERED, ON_SWITCHED]\n  ]\n    .reduce((obj, names) => {\n      const [methodName, switchMethod] = names\n      const name = methodName.slice(2)\n      const eventName = name.toLowerCase()\n\n      return {\n        ...obj,\n        [methodName]: (state, cb) => {\n          const err = argTypeError(\n            { state: isString, cb: isFunction }\n          )(methodName)(state, cb)\n          if (err) {\n            throw new TypeError(err)\n          }\n\n          const decreaseRefCounts = [\n            statesHandled.increase(state),\n            statesHandled.increase(`${state}:${eventName}`)\n          ]\n\n          const removeEvent = switchMethods[switchMethod](\n            (toState, fromState, ...args) => {\n              if (name.indexOf('Exit') === 0) {\n                state === fromState && cb(toState, ...args)\n              } else {\n                state === toState && cb(fromState, ...args)\n              }\n            }\n          )\n\n          return () => {\n            removeEvent()\n            decreaseRefCounts.map(fn => fn())\n          }\n        }\n      }\n    }, {})\n\n  function Emit (eventName, ...curriedArgs) {\n    const err = argTypeError({ eventName: isString })('Emit')(eventName)\n    if (err) {\n      throw new TypeError(err)\n    }\n\n    return (...args) => emit(eventName, ...[...curriedArgs, ...args])\n  }\n\n  function Enter (state, ...curriedArgs) {\n    const err = argTypeError({ state: isString })('Enter')(state)\n    if (err) {\n      throw new TypeError(err)\n    }\n\n    return (...args) => enter(state, ...[...curriedArgs, ...args])\n  }\n\n  function _InState (state, anyOrFn, ...curriedFnArgs) {\n    return (...fnArgs) =>\n      inState(state, anyOrFn, ...[...curriedFnArgs, ...fnArgs])\n  }\n\n  function _InStateObject(stateObject, ...curriedFnArgs) {\n    return (...fnArgs) =>\n      inState(stateObject, ...[...curriedFnArgs, ...fnArgs])\n  }\n\n  function InState (...args) {\n    const err = argTypeError({ state: [isString, isPojo] })('InState')(args[0])\n    if (err) {\n      throw new TypeError(err)\n    }\n\n    return isPojo(args[0])\n      ? _InStateObject(...args)\n      : _InState(...args)\n  }\n\n  function reset () {\n    _console.warn(`${logPrefix}: State-machine reset!`)\n\n    stateHistory.length = 0\n    stateHistory.push(startIn)\n  }\n\n  function transitionNoOp (message) {\n    const lastState = previousState()\n    const inState = currentState()\n    const prevRoute =\n      `${isUndefined(lastState) ? '[undefined]' : lastState}->${inState}`\n\n    const availableStates = statesAvailableFromHere()\n    if (!availableStates.length) {\n      _console.info(\n        `${logPrefix}: ${message}\\n` +\n          `  > Previous transition: \"${prevRoute}\"\\n` +\n          `  > There are no states available from \"${inState}\"`\n      )\n    } else {\n      _console.info(\n        `${logPrefix}: ${message}\\n` +\n          `  > Previous transition: \"${prevRoute}\"\\n` +\n          `  > From \"${inState}\", valid states are: [${availableStates\n            .map(state => `\"${state}\"`)\n            .join(', ')}]`\n      )\n    }\n  }\n\n  function inspect () {\n    return {\n      states: statesHandled.refs(),\n      transitions: routesHandled.refs(),\n      events: eventsHandled.refs()\n    }\n  }\n\n  function info () {\n    _console.log(`${logPrefix}: Information about this state-machine`)\n\n    logRefCounterInfo(statesHandled)\n    logRefCounterInfo(routesHandled)\n    logRefCounterInfo(eventsHandled)\n  }\n\n  function logRefCounterInfo (refCounter) {\n    const { description, table } = refCounter.toValue()\n    _console.log(description)\n    if (table.length) {\n      _console.table(table)\n    } else {\n      _console.log('  > No information')\n    }\n  }\n\n  return {\n    __STATEBOT__: 1,\n    statesAvailableFromHere,\n    canTransitionTo,\n    currentState,\n    previousState,\n    history: () => [...stateHistory],\n\n    emit: Pausable(emit),\n    Emit: Pausable(Emit),\n    enter: Pausable(enter),\n    Enter: Pausable(Enter),\n    inState,\n    InState,\n\n    info: () => info(),\n    inspect: () => inspect(),\n    name: () => name,\n\n    onEntered: enterExitMethods[ON_ENTERED],\n    onEntering: enterExitMethods[ON_ENTERING],\n    onExited: enterExitMethods[ON_EXITED],\n    onExiting: enterExitMethods[ON_EXITING],\n    onSwitched: switchMethods[ON_SWITCHED],\n    onSwitching: switchMethods[ON_SWITCHING],\n\n    onEvent,\n    onTransitions: transitions => applyHitcher(transitions, 'onTransitions'),\n    performTransitions: transitions => applyHitcher(transitions, 'performTransitions'),\n\n    pause,\n    paused,\n    peek,\n    reset,\n    resume,\n  }\n}\n\nfunction decomposeHitcherActions (hitcherActions) {\n  // For: performTransitions()\n  const transitionsForEvents = {}\n\n  // For: onTransitions()\n  const transitionsOnly = []\n\n  Object\n    .entries(hitcherActions)\n    .map(([routeChart, actionFnOrConfigObj]) => {\n      if (isFunction(actionFnOrConfigObj)) {\n        transitionsOnly.push({ routeChart, action: actionFnOrConfigObj })\n        return\n      }\n      if (!isPojo(actionFnOrConfigObj)) {\n        return\n      }\n\n      const { on: _on, then: _then } = actionFnOrConfigObj\n      const hasValidEventNames = isString(_on) || isArray(_on)\n      if (hasValidEventNames) {\n        const eventNames = [_on].flat()\n        eventNames.map(name => {\n          transitionsForEvents[name] = transitionsForEvents[name] || []\n          transitionsForEvents[name].push({ routeChart, action: _then })\n        })\n        return\n      }\n\n      // Behave like onTransitions() if a \"then\" is specified but\n      // there is no \"on\" event that triggers it\n      if (isFunction(_then)) {\n        transitionsOnly.push({ routeChart, action: actionFnOrConfigObj })\n      }\n    })\n\n  return { transitionsForEvents, transitionsOnly }\n}\n\nfunction expandTransitions (configs, canWarn) {\n  const allStates = []\n  const allRoutes = []\n\n  const _configs = configs.reduce((acc, config) => {\n    const { routeChart, action } = config\n    const { states, routes, transitions } = decomposeChart(routeChart)\n    if (canWarn()) {\n      allStates.push(...states)\n      allRoutes.push(...routes)\n    }\n    return [\n      ...acc,\n      ...transitions.map(([fromState, toState]) =>\n        ({ fromState, toState, action })\n      )\n    ]\n  }, [])\n\n  return {\n    configs: _configs,\n    states: allStates,\n    routes: allRoutes\n  }\n}\n\nfunction isStatebot (object) {\n  return (\n    isPojo(object) &&\n    isNumber(object.__STATEBOT__)\n  )\n}\n","\n//\n// STATEBOT ASSERTION HELPERS\n//\n\nexport {\n  routeIsPossible,\n  assertRoute\n}\n\nimport { isStatebot } from '../src/statebot'\nimport { decomposeRoute } from '../src/parsing'\nimport { isTemplateLiteral, ArgTypeError } from '../src/types'\nimport {\n  Defer,\n  Once,\n  Revokable,\n  Logger,\n} from '../src/utils'\n\nconst argTypeError = ArgTypeError('statebot.')\n\nfunction routeIsPossible (machine, route) {\n  const err = argTypeError(\n    { machine: isStatebot, route: isTemplateLiteral }\n  )('routeIsPossible')(machine, route)\n  if (err) {\n    throw TypeError(err)\n  }\n\n  const _route = decomposeRoute(route)\n  return _route.every((state, index) => {\n    if (index === _route.length - 1) {\n      return true\n    } else {\n      const nextState = _route[index + 1]\n      const availableStates = machine.statesAvailableFromHere(state)\n      const passes = availableStates.includes(nextState)\n      return passes\n    }\n  })\n}\n\nlet assertionId = 0\n\nfunction assertRoute (machine, expectedRoute, options) {\n  const err = argTypeError(\n    { machine: isStatebot, expectedRoute: isTemplateLiteral }\n  )('assertRoute')(machine, expectedRoute)\n  if (err) {\n    throw TypeError(err)\n  }\n\n  assertionId += 1\n\n  const {\n    description = 'Assertion complete',\n    fromState = '',\n    run = () => {},\n    permittedDeviations = 0,\n    timeoutInMs = 1000,\n    logLevel = 3\n  } = options || {}\n\n  const console = Logger(logLevel)\n\n  const prefix = `Statebot[${machine.name()}]: aId<${assertionId}>`\n  const route = decomposeRoute(expectedRoute)\n\n  console.log(`\\n${prefix}: Asserting route: [${route.join(' > ')}]`)\n  console.log(`${prefix}: > Assertion will start from state: \"${fromState}\"`)\n\n  const fromStateActionFn = Defer(run)\n  let removeFromStateActionFn = () => { }\n\n  const totalTimeTaken = TimeTaken()\n  let stateTimeTaken = TimeTaken()\n  let assertionTimeoutTimer\n  let deviations = 0\n  let pending = true\n  let unexpected = false\n\n  const consumeRoute = [...route]\n  const report = Table(\n    ['state', 'expected', 'info', 'took'],\n    ['center', 'center', 'left', 'right']\n  )\n\n  const finaliseReport = Once(err => {\n    addRow('', '', '', 'TOTAL: ' + totalTimeTaken())\n    report.lock()\n    console.log(`\\n${prefix}: ${description}: [${err ? 'FAILED' : 'SUCCESS'}]`)\n    console.table(report.content())\n    return err\n  })\n\n  const { addRow } = report\n  function enteredState (state) {\n    if (pending) {\n      addRow(state, '-', 'PENDING')\n    } else {\n      const expectedState = consumeRoute[0]\n      if (expectedState === state) {\n        addRow(state, expectedState, unexpected ? 'REALIGNED' : 'OKAY', stateTimeTaken())\n        unexpected = false\n        consumeRoute.shift()\n      } else {\n        addRow(state, expectedState, 'WRONG STATE', stateTimeTaken())\n        unexpected = true\n        deviations += 1\n      }\n      stateTimeTaken = TimeTaken()\n    }\n  }\n\n  return new Promise((resolve, reject) => {\n    if (consumeRoute.length === 0) {\n      reject(finaliseReport(new Error('NO ROUTE TO TEST')))\n      return\n    }\n\n    const clearTimeoutAndResolve = (...args) => {\n      clearTimeout(assertionTimeoutTimer)\n      removeFromStateActionFn()\n      removeOnSwitchingListener()\n      resolve(...args)\n    }\n\n    const clearTimeoutAndReject = err => {\n      clearTimeout(assertionTimeoutTimer)\n      removeFromStateActionFn()\n      removeOnSwitchingListener()\n      reject(err)\n    }\n\n    const bailout = message => {\n      while (consumeRoute.length) {\n        const expectedState = consumeRoute.shift()\n        addRow(machine.currentState(), `(${expectedState})`, message)\n        unexpected = false\n      }\n      clearTimeoutAndReject(finaliseReport(new Error(message)))\n    }\n\n    if (machine.inState(fromState)) {\n      pending = false\n      removeFromStateActionFn = fromStateActionFn()\n    }\n\n    const { revoke, fn } = Revokable(state => {\n      assertionTimeoutTimer = setTimeout(() => {\n        revoke()\n        bailout('TIMEOUT')\n      }, timeoutInMs)\n\n      enteredState(state)\n      if (pending && state === fromState) {\n        pending = false\n        removeFromStateActionFn = fromStateActionFn()\n      }\n      if (deviations > permittedDeviations) {\n        revoke()\n        bailout('TOO MANY DEVIATIONS')\n      }\n      if (consumeRoute.length <= 0) {\n        revoke()\n        clearTimeoutAndResolve(finaliseReport())\n      }\n    })\n\n    const removeOnSwitchingListener = machine.onSwitching(fn)\n  })\n}\n\nfunction Table (columns, alignments) {\n  columns = columns || []\n  alignments = alignments || []\n\n  const table = []\n  const alignment = columns.map((_, index) => alignments[index] || 'center')\n\n  let locked = false\n  function lock () {\n    locked = true\n  }\n\n  function addRow (...args) {\n    if (locked) {\n      return\n    }\n    const obj = columns.reduce((acc, col, index) => {\n      const row = args[index] || ''\n      return {\n        ...acc,\n        [col]: row\n      }\n    }, {})\n    table.push(obj)\n  }\n\n  function colSizes () {\n    return table.reduce(\n      (acc, row) => columns.map(\n        (col, index) => Math.max(row[col].length, acc[index])\n      ), columns.map(() => 0)\n    )\n  }\n\n  function content () {\n    const sizes = colSizes()\n    function formatField (value, index) {\n      const size = sizes[index]\n      const align = alignment[index]\n      if (align === 'left') {\n        return value.padEnd(size)\n      }\n      if (align === 'right') {\n        return value.padStart(size)\n      }\n      return value\n    }\n    const output = table.reduce((acc, row) => {\n      const formattedRow = columns.reduce((acc, col, index) => ({\n        ...acc,\n        [col]: formatField(row[col], index)\n      }), {})\n      return [...acc, formattedRow]\n    }, [])\n    return output\n  }\n\n  return {\n    lock: lock,\n    addRow: addRow,\n    content: content\n  }\n}\n\nfunction TimeTaken () {\n  const startTime = Date.now()\n\n  function fmt (num, digits) {\n    return num.toFixed(digits).replace(/\\.0+$/, '')\n  }\n\n  return function () {\n    const duration = Date.now() - startTime\n\n    if (duration < 500) {\n      return `${fmt(duration)} ms`\n    } else if (duration < 5000) {\n      return `${fmt(duration / 1000, 2)} s `\n    } else if (duration < 60000) {\n      return `${fmt(duration / 1000, 1)} s `\n    } else {\n      return `${fmt(duration / 1000 / 60, 1)} m `\n    }\n  }\n}\n","export const makeHooks = ({ Statebot, useEffect, useState, useMemo }) => {\n  if (![useEffect, useState, useMemo].every(x => typeof x === 'function')) {\n    console.warn('Statebot Hooks unavailable: React or Mithril not found')\n  }\n\n  function useStatebot(bot) {\n    const [state, setState] = useState(bot.currentState())\n\n    useEffect(() => {\n      let done = false\n\n      const removeListener = bot.onSwitched((toState) => {\n        if (done) {\n          return\n        }\n        setState(toState)\n      })\n\n      return () => {\n        done = true\n        removeListener()\n      }\n    }, [bot])\n\n    return state\n  }\n\n  function useStatebotFactory(name, config) {\n    // We memoise Statebot since it's based on EventEmitter,\n    // so we create it once and add/remove listeners for\n    // the life-cycle of the component\n    const { bot, listeners } = useMemo(() => {\n      const {\n        performTransitions = {},\n        onTransitions = {},\n        ...botConfig\n      } = config || {}\n\n      const bot = Statebot(name, botConfig)\n      const listeners = [\n        bot.performTransitions(performTransitions),\n        bot.onTransitions(onTransitions),\n      ]\n\n      return {\n        bot,\n        listeners,\n      }\n    }, [])\n\n    useEffect(\n      () => () => {\n        if (typeof bot.pause === 'function') {\n          bot.pause()\n        }\n        listeners.forEach((off) => off())\n      },\n      [bot, listeners]\n    )\n\n    const state = useStatebot(bot)\n\n    return { state, bot }\n  }\n\n  function useStatebotEvent(bot, eventName, stateOrFn, maybeFn) {\n    useEffect(() => {\n      let done = false\n\n      function onSwitchFn(...args) {\n        if (done) {\n          return\n        }\n        stateOrFn(...args)\n      }\n      function onEnterOrExitFn(...args) {\n        if (done) {\n          return\n        }\n        maybeFn(...args)\n      }\n\n      const args =\n        typeof maybeFn === 'function'\n          ? [stateOrFn, onEnterOrExitFn]\n          : [onSwitchFn]\n\n      const removeListener = bot[eventName](...args)\n\n      return () => {\n        done = true\n        removeListener()\n      }\n    }, [bot, eventName, stateOrFn, maybeFn])\n  }\n\n  return {\n    useStatebot,\n    useStatebotFactory,\n    useStatebotEvent,\n  }\n}\n","\n//\n// STATEBOT EXPORTS\n//\n\nimport { Statebot, isStatebot } from './statebot'\nimport { assertRoute, routeIsPossible } from '../assert'\nimport { decomposeChart } from './parsing'\nimport { makeHooks } from '../hooks/make-hooks'\n\nconst { useEffect, useState, useMemo } = ((global) =>\n  typeof React !== 'undefined'\n    // eslint-disable-next-line no-undef\n    ? React\n    : global\n)(window)\n\nconst {\n  useStatebot,\n  useStatebotFactory,\n  useStatebotEvent\n} = makeHooks({ Statebot, useEffect, useState, useMemo })\n\nexport {\n  Statebot,\n  isStatebot,\n  routeIsPossible,\n  assertRoute,\n  decomposeChart,\n  useStatebot,\n  useStatebotFactory,\n  useStatebotEvent\n}\n"],"names":["n","all","Map","on","t","e","i","get","push","set","off","splice","indexOf","emit","slice","map","isEventEmitter","obj","isObject","isFunction","addListener","removeListener","displayName","isArray","Array","isArguments","Object","prototype","toString","call","isString","isAllStrings","arr","every","isUndefined","undefined","isNull","isNumber","isPojo","getPrototypeOf","isTemplateLiteral","typeErrorStringIfFnReturnsFalse","argName","argTypeFn","arg","name","typeErrorStringIfTypeOfFails","argType","typeErrorStringFromArgument","argMap","index","length","permittedArgTypes","errorDescs","filter","multipleTypesSpecified","shouldError","join","JSON","stringify","ArgTypeError","namespace","typeMap","entries","fnName","args","processedArgs","from","x","flat","err","signature","keys","wrapEmitter","events","eventName","wrapMap","fn","fnMeta","handleEvent","refCount","delete","uniq","input","reduce","acc","one","defer","timer","setTimeout","clearTimeout","Defer","Once","revoke","_fn","Revokable","result","revoked","Pausables","startPaused","runFnWhenPaused","paused","Pausable","pause","resume","ReferenceCounter","logPrefix","kind","description","expecting","_refs","ref","increase","countOf","decrease","count","Math","max","refs","table","sort","key","toValue","Definitions","dictionary","undefine","word","definition","next","define","definitionsOf","Logger","level","_console","info","log","warn","none","canWarn","canLog","canInfo","error","console","rxCRLF","cxPipe","cxArrow","rxOperators","rxUnsafe","replace","rxLineContinuations","RegExp","rxDisallowedCharacters","rxComment","argTypeError","decomposeRoute","templateLiteral","TypeError","lines","condensedLines","linesOfTokens","tokenisedLines","route","decomposeChart","chart","linesOfRoutes","flatMap","decomposeRouteFromTokens","linesOfTransitions","decomposeTransitionsFromRoute","emptyStateFound","routeKeys","includes","filteredRoutes","filteredStates","transitions","split","routes","states","Boolean","linesFrom","strOrArr","line","output","previousLineHasContinuation","condenseLine","condensedLine","sanitisedLine","test","finalCondensedLine","str","previousStates","fromStates","toStates","fromState","toState","ON_EXITING","ON_ENTERING","ON_EXITED","ON_ENTERED","ON_SWITCHING","ON_SWITCHED","INTERNAL_EVENTS","Statebot","options","logLevel","historyLimit","mitt","startIn","Error","stateHistory","stateHistoryLimit","transitionId","transitionsFromEvents","internalEvents","emitInternalEvent","onInternalEvent","cb","statesHandled","routesHandled","eventsHandled","applyHitcher","hitcher","hitcherActions","enter","Enter","Emit","allStates","allRoutes","transitionsForEvents","transitionsOnly","decomposeHitcherActions","eventsMappedToTransitionConfigs","decomposeTransitionsForEvent","transitionConfigs","expandTransitions","allCleanupFns","createEventHandlerForTransition","concat","configs","runThenMethodOnTransition","invalidStates","state","invalidRoutes","config","action","bindActionTo","transitionsAndAction","ifStateThenEnterState","inState","runActionFor","onEvent","eventWasHandled","some","transitionNoOp","actionFn","onExitingState","uninstall","enterExitMethods","_peek","stateObject","calledInternally","err1","eventAndState","currentState","statesFromEvent","reason","RangeError","err2","hasOwnProperty","anyOrFn","peek","previousState","_state_canTransitionTo","nextStates","statesAvailableFromHere","canTransitionTo","testStates","thisState","afterEmitting","_state","trim","_inState","conditionMatches","fnArgs","_inStateObject","match","find","nextRoute","shift","switchMethods","methodName","decreaseRefCount","removeEvent","names","switchMethod","toLowerCase","decreaseRefCounts","curriedArgs","_InState","curriedFnArgs","_InStateObject","InState","reset","message","lastState","prevRoute","availableStates","inspect","logRefCounterInfo","refCounter","__STATEBOT__","history","onEntered","onEntering","onExited","onExiting","onSwitched","onSwitching","onTransitions","performTransitions","routeChart","actionFnOrConfigObj","_on","then","_then","hasValidEventNames","eventNames","_configs","isStatebot","object","routeIsPossible","machine","_route","nextState","passes","assertionId","assertRoute","expectedRoute","run","permittedDeviations","timeoutInMs","prefix","fromStateActionFn","removeFromStateActionFn","totalTimeTaken","TimeTaken","stateTimeTaken","assertionTimeoutTimer","deviations","pending","unexpected","consumeRoute","report","Table","finaliseReport","addRow","lock","content","enteredState","expectedState","Promise","resolve","reject","clearTimeoutAndResolve","removeOnSwitchingListener","clearTimeoutAndReject","bailout","columns","alignments","alignment","_","locked","col","row","colSizes","sizes","formatField","value","size","align","padEnd","padStart","formattedRow","startTime","Date","now","fmt","num","digits","toFixed","duration","makeHooks","useEffect","useState","useMemo","useStatebot","bot","setState","done","useStatebotFactory","listeners","botConfig","forEach","useStatebotEvent","stateOrFn","maybeFn","onSwitchFn","onEnterOrExitFn","global","React","window"],"mappings":"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"}