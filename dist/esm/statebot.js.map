{"version":3,"file":"statebot.js","sources":["../../node_modules/.pnpm/rollup-plugin-node-builtins@2.1.2/node_modules/rollup-plugin-node-builtins/src/es6/events.js","../../src/utils.js","../../src/parsing.js","../../src/statebot.js","../../src/assertions.js"],"sourcesContent":["'use strict';\n\nvar domain;\n\n// This constructor is used to store event handlers. Instantiating this is\n// faster than explicitly calling `Object.create(null)` to get a \"clean\" empty\n// object (tested with v8 v4.9).\nfunction EventHandlers() {}\nEventHandlers.prototype = Object.create(null);\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nexport default EventEmitter;\nexport {EventEmitter};\n\n// nodejs oddity\n// require('events') === require('events').EventEmitter\nEventEmitter.EventEmitter = EventEmitter\n\nEventEmitter.usingDomains = false;\n\nEventEmitter.prototype.domain = undefined;\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\nEventEmitter.init = function() {\n  this.domain = null;\n  if (EventEmitter.usingDomains) {\n    // if there is an active domain, then attach to it.\n    if (domain.active && !(this instanceof domain.Domain)) {\n      this.domain = domain.active;\n    }\n  }\n\n  if (!this._events || this._events === Object.getPrototypeOf(this)._events) {\n    this._events = new EventHandlers();\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || isNaN(n))\n    throw new TypeError('\"n\" argument must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\n// These standalone emit* functions are used to optimize calling of event\n// handlers for fast cases because emit() itself often has a variable number of\n// arguments and can be deoptimized because of that. These functions always have\n// the same number of arguments and thus do not get deoptimized, so the code\n// inside them can execute faster.\nfunction emitNone(handler, isFn, self) {\n  if (isFn)\n    handler.call(self);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self);\n  }\n}\nfunction emitOne(handler, isFn, self, arg1) {\n  if (isFn)\n    handler.call(self, arg1);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1);\n  }\n}\nfunction emitTwo(handler, isFn, self, arg1, arg2) {\n  if (isFn)\n    handler.call(self, arg1, arg2);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2);\n  }\n}\nfunction emitThree(handler, isFn, self, arg1, arg2, arg3) {\n  if (isFn)\n    handler.call(self, arg1, arg2, arg3);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2, arg3);\n  }\n}\n\nfunction emitMany(handler, isFn, self, args) {\n  if (isFn)\n    handler.apply(self, args);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].apply(self, args);\n  }\n}\n\nEventEmitter.prototype.emit = function emit(type) {\n  var er, handler, len, args, i, events, domain;\n  var needDomainExit = false;\n  var doError = (type === 'error');\n\n  events = this._events;\n  if (events)\n    doError = (doError && events.error == null);\n  else if (!doError)\n    return false;\n\n  domain = this.domain;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    er = arguments[1];\n    if (domain) {\n      if (!er)\n        er = new Error('Uncaught, unspecified \"error\" event');\n      er.domainEmitter = this;\n      er.domain = domain;\n      er.domainThrown = false;\n      domain.emit('error', er);\n    } else if (er instanceof Error) {\n      throw er; // Unhandled 'error' event\n    } else {\n      // At least give some kind of context to the user\n      var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n      err.context = er;\n      throw err;\n    }\n    return false;\n  }\n\n  handler = events[type];\n\n  if (!handler)\n    return false;\n\n  var isFn = typeof handler === 'function';\n  len = arguments.length;\n  switch (len) {\n    // fast cases\n    case 1:\n      emitNone(handler, isFn, this);\n      break;\n    case 2:\n      emitOne(handler, isFn, this, arguments[1]);\n      break;\n    case 3:\n      emitTwo(handler, isFn, this, arguments[1], arguments[2]);\n      break;\n    case 4:\n      emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);\n      break;\n    // slower\n    default:\n      args = new Array(len - 1);\n      for (i = 1; i < len; i++)\n        args[i - 1] = arguments[i];\n      emitMany(handler, isFn, this, args);\n  }\n\n  if (needDomainExit)\n    domain.exit();\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n\n  events = target._events;\n  if (!events) {\n    events = target._events = new EventHandlers();\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (!existing) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] = prepend ? [listener, existing] :\n                                          [existing, listener];\n    } else {\n      // If we've already got an array, just append.\n      if (prepend) {\n        existing.unshift(listener);\n      } else {\n        existing.push(listener);\n      }\n    }\n\n    // Check for listener leak\n    if (!existing.warned) {\n      m = $getMaxListeners(target);\n      if (m && m > 0 && existing.length > m) {\n        existing.warned = true;\n        var w = new Error('Possible EventEmitter memory leak detected. ' +\n                            existing.length + ' ' + type + ' listeners added. ' +\n                            'Use emitter.setMaxListeners() to increase limit');\n        w.name = 'MaxListenersExceededWarning';\n        w.emitter = target;\n        w.type = type;\n        w.count = existing.length;\n        emitWarning(w);\n      }\n    }\n  }\n\n  return target;\n}\nfunction emitWarning(e) {\n  typeof console.warn === 'function' ? console.warn(e) : console.log(e);\n}\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction _onceWrap(target, type, listener) {\n  var fired = false;\n  function g() {\n    target.removeListener(type, g);\n    if (!fired) {\n      fired = true;\n      listener.apply(target, arguments);\n    }\n  }\n  g.listener = listener;\n  return g;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      list = events[type];\n      if (!list)\n        return this;\n\n      if (list === listener || (list.listener && list.listener === listener)) {\n        if (--this._eventsCount === 0)\n          this._events = new EventHandlers();\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length; i-- > 0;) {\n          if (list[i] === listener ||\n              (list[i].listener && list[i].listener === listener)) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (list.length === 1) {\n          list[0] = undefined;\n          if (--this._eventsCount === 0) {\n            this._events = new EventHandlers();\n            return this;\n          } else {\n            delete events[type];\n          }\n        } else {\n          spliceOne(list, position);\n        }\n\n        if (events.removeListener)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events;\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (!events.removeListener) {\n        if (arguments.length === 0) {\n          this._events = new EventHandlers();\n          this._eventsCount = 0;\n        } else if (events[type]) {\n          if (--this._eventsCount === 0)\n            this._events = new EventHandlers();\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        for (var i = 0, key; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = new EventHandlers();\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners) {\n        // LIFO order\n        do {\n          this.removeListener(type, listeners[listeners.length - 1]);\n        } while (listeners[0]);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  var evlistener;\n  var ret;\n  var events = this._events;\n\n  if (!events)\n    ret = [];\n  else {\n    evlistener = events[type];\n    if (!evlistener)\n      ret = [];\n    else if (typeof evlistener === 'function')\n      ret = [evlistener.listener || evlistener];\n    else\n      ret = unwrapListeners(evlistener);\n  }\n\n  return ret;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [];\n};\n\n// About 1.5x faster than the two-arg version of Array#splice().\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1)\n    list[i] = list[k];\n  list.pop();\n}\n\nfunction arrayClone(arr, i) {\n  var copy = new Array(i);\n  while (i--)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n","\n//\n// STATEBOT UTILS\n//\n\nexport {\n  isArray,\n  isEventEmitter,\n  isFunction,\n  isPojo,\n  isString,\n  isTemplateLiteral,\n  uniq,\n  Defer,\n  Once,\n  Revokable,\n  ReferenceCounter,\n  ArgTypeError,\n  Logger,\n  Pausables\n}\n\nfunction isArray (obj) {\n  return Array.isArray(obj)\n}\n\nfunction isFunction (obj) {\n  return typeof obj === 'function'\n}\n\nfunction isString (obj) {\n  return typeof obj === 'string'\n}\n\nfunction isObject (obj) {\n  return typeof obj === 'object'\n}\n\nfunction isEventEmitter (obj) {\n  return (\n    isObject(obj) &&\n    isFunction(obj.emit) &&\n    isFunction(obj.addListener) &&\n    isFunction(obj.removeListener)\n  )\n}\n\nfunction isPojo (obj) {\n  if (obj === null || (!isObject(obj))) {\n    return false\n  }\n  return Object.getPrototypeOf(obj) === Object.prototype\n}\n\nfunction isTemplateLiteral (obj) {\n  if (isString(obj)) {\n    return true\n  }\n  if (isArray(obj)) {\n    return obj.every(item => isString(item))\n  }\n  return false\n}\n\nfunction uniq (input) {\n  return input.reduce((acc, one) => (acc.indexOf(one) === -1 ? [...acc, one] : acc), [])\n}\n\nfunction defer (fn, ...args) {\n  const timer = setTimeout(fn, 0, ...args)\n  return () => {\n    clearTimeout(timer)\n  }\n}\nfunction Defer (fn) {\n  return (...args) => defer(fn, ...args)\n}\n\nfunction Once (fn) {\n  const { revoke, fn: _fn } = Revokable(fn)\n  let result\n  return function (...args) {\n    result = _fn(...args)\n    revoke()\n    return result\n  }\n}\n\nfunction Revokable (fn) {\n  let revoked = false\n  let result\n  return {\n    fn: (...args) => {\n      if (!revoked) {\n        result = fn(...args)\n      }\n      return result\n    },\n    revoke: () => {\n      revoked = true\n    }\n  }\n}\n\nfunction Pausables (startPaused = false, onPauseCall = () => {}) {\n  let paused = !!startPaused\n\n  function Pausable (fn) {\n    return (...args) => {\n      if (paused) {\n        onPauseCall()\n        return false\n      }\n      return fn(...args)\n    }\n  }\n\n  return {\n    Pausable,\n    paused: () => paused,\n    pause: () => { paused = true },\n    resume: () => { paused = false },\n  }\n}\n\nfunction ReferenceCounter (name, kind, description, ...expecting) {\n  const _refs = {};\n  [...expecting].flat().forEach(ref => {\n    _refs[ref] = 0\n  })\n  function increase (ref) {\n    _refs[ref] = countOf(ref) + 1\n    return () => decrease(ref)\n  }\n  function decrease (ref) {\n    const count = countOf(ref) - 1\n    _refs[ref] = Math.max(count, 0)\n  }\n  function countOf (ref) {\n    return _refs[ref] || 0\n  }\n  function refs () {\n    return { ..._refs }\n  }\n  function table () {\n    return Object.keys(_refs).sort()\n      .map(key => [key, _refs[key]])\n      .map(([ref, count]) => {\n        return {\n          [kind]: ref,\n          refs: count || 'None'\n        }\n      })\n  }\n  function toValue () {\n    return {\n      description: `Statebot[${name}]: ${description}:`,\n      table: table()\n    }\n  }\n  return {\n    increase: increase,\n    decrease: decrease,\n    countOf: countOf,\n    toValue: toValue,\n    refs: refs\n  }\n}\n\nfunction ArgTypeError (errPrefix = '') {\n  return function (fnName, typeMap, ...args) {\n    const argMap = Object.entries(typeMap)\n      .map(([argName, argType]) => {\n        return { argName, argType }\n      })\n\n    const signature = Object.keys(typeMap).join(', ')\n\n    const err = args\n      .map((arg, index) => {\n        const { argName, argType } = argMap[index]\n        if (arg === undefined) {\n          return `Argument undefined: \"${argName}\"`\n        }\n\n        let errorDesc\n        let typeName\n        let typeMatches\n\n        if (isFunction(argType)) {\n          typeMatches = argType(arg) === true\n          typeName = argType.name\n          errorDesc = `${typeName}(${argName}) did not return true`\n        } else {\n          // eslint-disable-next-line valid-typeof\n          typeMatches = typeof arg === argType\n          typeName = argType\n          errorDesc = `Argument \"${argName}\" should be a ${typeName}`\n        }\n\n        if (!typeMatches) {\n          return (\n            `${errorDesc}: ${argName} === ${typeof arg}(${arg})`\n          )\n        }\n      })\n      .filter(Boolean)\n\n    if (!err.length) {\n      return undefined\n    } else {\n      return (\n        `\\n${errPrefix}${fnName}(${signature}):\\n` +\n        `${err.map(err => `> ${err}`).join('\\n')}`\n      )\n    }\n  }\n}\n\nfunction Logger (level) {\n  let _level = level\n  if (isString(_level)) {\n    _level = ({\n      info: 3,\n      log: 2,\n      warn: 1,\n      none: 0\n    })[_level] || 3\n  }\n  function canWarn () {\n    return _level >= 1\n  }\n  function canLog () {\n    return _level >= 2\n  }\n  function canInfo () {\n    return _level >= 3\n  }\n  return {\n    canWarn,\n    canLog,\n    canInfo,\n\n    info: (...args) => canInfo() && console.info(...args),\n    table: (...args) => canLog() && console.table(...args),\n    log: (...args) => canLog() && console.log(...args),\n    warn: (...args) => canWarn() && console.warn(...args),\n    error: (...args) => console.error(...args)\n  }\n}\n","\n//\n// STATEBOT CHART/ROUTE PARSING\n//\n\nconst rxCRLF = /[\\r\\n]/\nconst cxPipe = '|'\nconst cxArrow = '->'\nconst rxOperators = [cxPipe, cxArrow]\n  .map(rxUnsafe => rxUnsafe.replace('|', '\\\\|'))\n  .join('|')\n\nconst rxLineContinuations = new RegExp(`(${rxOperators})$`)\nconst rxDisallowedCharacters = /[^a-z0-9!@#$%^&*:_+=<>|~.\\x2D]/gi\nconst rxComment = /(\\/\\/[^\\n\\r]*)/\n\nexport {\n  cxPipe,\n  cxArrow,\n  rxDisallowedCharacters,\n  decomposeChart,\n  decomposeRoute\n}\n\nimport { uniq, ArgTypeError, isTemplateLiteral } from './utils'\n\nconst argTypeError = ArgTypeError('statebot.')\n\nfunction decomposeRoute (templateLiteral) {\n  const err = argTypeError('decomposeRoute',\n    { templateLiteral: isTemplateLiteral },\n    templateLiteral\n  )\n  if (err) {\n    throw TypeError(err)\n  }\n\n  const lines = condensedLines(templateLiteral)\n  const linesOfTokens = tokenisedLines(lines)\n  const route = linesOfTokens.flat(2)\n\n  return route\n}\n\n/**\n * Decompose a {@link statebotChart} into an object of `states`, `routes`,\n * and `transitions`.\n *\n * Statebot() uses this internally to parse charts. Exposed for debugging.\n *\n * @memberof statebot\n * @function\n * @param {statebotChart} chart\n * @returns {Object}\n *\n * @example\n * var { states, routes, transitions } = decomposeChart`\n *   pending ->\n *     success | failure\n * `\n * // states = ['pending', 'success', 'failure']\n * // routes = [ 'pending->success', 'pending->failure']\n * // transitions = [\n * //   ['pending', 'success'],\n * //   ['pending', 'failure']\n * // ]\n */\n\nfunction decomposeChart (chart) {\n  const err = argTypeError('decomposeChart',\n    { chart: isTemplateLiteral },\n    chart\n  )\n  if (err) {\n    throw TypeError(err)\n  }\n\n  const lines = condensedLines(chart)\n  const linesOfTokens = tokenisedLines(lines)\n  const linesOfRoutes = linesOfTokens\n    .map(decomposeRouteFromTokens)\n    .flat(1)\n\n  const linesOfTransitions = linesOfRoutes\n    .map(decomposeTransitionsFromRoute)\n    .flat(1)\n\n  let emptyStateFound = false\n  const routeKeys = linesOfTransitions.map(route => {\n    if (route.includes('')) {\n      emptyStateFound = true\n    }\n    return route.join(cxArrow)\n  })\n\n  const filteredRoutes = uniq(routeKeys)\n  const filteredStates = uniq(linesOfTokens.flat(3))\n\n  return {\n    transitions: filteredRoutes.map(route => route.split(cxArrow)),\n    routes: filteredRoutes,\n    states: !emptyStateFound ? filteredStates.filter(Boolean) : filteredStates\n  }\n}\n\nfunction linesFrom (strOrArr) {\n  return [strOrArr]\n    .flat()\n    .reduce((acc, line) => [...acc, line.split(rxCRLF)], [])\n    .flat()\n}\n\nfunction condensedLines (strOrArr) {\n  const input = linesFrom(strOrArr)\n  const output = []\n\n  let previousLineHasContinuation = false\n\n  const finalCondensedLine = input.reduce((condensedLine, line) => {\n    const sanitisedLine = line\n      .replace(rxComment, '')\n      .replace(rxDisallowedCharacters, '')\n\n    if (!sanitisedLine) {\n      return condensedLine\n    }\n\n    previousLineHasContinuation = rxLineContinuations.test(sanitisedLine)\n    if (previousLineHasContinuation) {\n      return condensedLine + sanitisedLine\n    }\n\n    output.push(condensedLine + sanitisedLine)\n    return ''\n  }, '')\n\n  if (previousLineHasContinuation || finalCondensedLine) {\n    return [...output, finalCondensedLine]\n  }\n\n  return [...output]\n}\n\nfunction tokenisedLines (lines) {\n  return lines.map(line => line.split(cxArrow).map(str => str.split(cxPipe)))\n}\n\nfunction decomposeRouteFromTokens (line) {\n  const output = []\n\n  line.reduce((previousStates, states) => {\n    if (previousStates === false) {\n      return [...states]\n    }\n\n    output.push([previousStates, [...states]])\n    return [...states]\n  }, false)\n\n  return output\n}\n\nfunction decomposeTransitionsFromRoute ([fromStates, toStates]) {\n  return fromStates.reduce((acc, fromState) => [\n    ...acc,\n    ...toStates.map(toState => {\n      return [fromState, toState]\n    })\n  ], [])\n}\n","\n//\n// STATEBOT FSM\n//\n\nexport {\n  Statebot,\n  isStatebot\n}\n\n/**\n * Options for creating a Statebot.\n *\n * @typedef {Object} statebotOptions\n * @property {statebotChart} chart\n *  The state-chart.\n * @property {string} [startIn=auto]\n *  The state in which to start. If unspecified, the first state in the\n *  chart will be used.\n * @property {number} [logLevel=3]\n *  How noisy the logging is, from 1 to 3:\n *  ```\n *  1) console.warn\n *  2) console.warn/log/table\n *  3) console.warn/log/table/info\n *  ```\n *  `3` is the default. Argument type-errors will always `throw`.\n * @property {number} [historyLimit=2]\n *  Limit how much history the state-machine keeps. Accessed via\n *  {@link #statebotfsmhistory|statebotFsm#history()}.\n * @property {events} [events]\n *  If you wish to have your Statebots listen to events coming from\n *  a shared EventEmitter, you can pass it in here. The `emit()`/`onEvent()`/\n *  `performTransitions()` methods will use it.\n *\n *  It should have the same signature as {@link https://nodejs.org/api/events.html#events_class_eventemitter|EventEmitter}.\n */\n\n/**\n * A description of all the states in a machine, plus all of the\n * permitted transitions between them.\n *\n * This is defined using a `string` or an `array` of strings, but\n *  {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals|Template Literals}\n * are much more convenient.\n *\n * An arrow `->` configures a **permitted transition** between two states:\n *\n * ```\n * from-state -> to-state\n * ```\n *\n * It's the only operator needed to build any chart:\n *\n * ```js\n * var promiseLikeChart = `\n *   pending -> resolved\n *   pending -> rejected\n *   resolved -> done\n *   rejected -> done\n * `\n * ```\n *\n * The \"OR\" operator `|` can help us remove some redundancy from the above example:\n *\n * ```js\n * var promiseLikeChart = `\n *   pending -> resolved | rejected\n *   resolved | rejected -> done\n * `\n * ```\n *\n * In both charts, `pending` can transition to `resolved` or `rejected`, and\n * `resolved` or `rejected` can both transition to `done`.\n *\n * We can streamline this even further:\n *\n * ```js\n * var promiseLikeChart = `\n *   pending -> (resolved | rejected) -> done\n * `\n * ```\n *\n * Again, this is exactly equivalent to the previous two examples.\n *\n * Notice in this one that we have parentheses `(` `)` surrounding `resolved`\n * and `rejected`. They are actually completely ignored by the parser, and\n * you can use them as you please to help make your charts more readable.\n *\n * A chart works exactly the same without them:\n *\n * ```js\n * var promiseLikeChart = `\n *   pending -> resolved | rejected -> done\n * `\n * ```\n *\n * Charts can also be split across multiple-lines:\n *\n * ```js\n * var promiseLikeChart = `\n *   pending ->\n *   resolved |\n *   rejected ->\n *   done\n * `\n * ```\n * Notice that all white-space is ignored on either side of the `->`\n * and `|`.\n *\n * `// Comments of this kind are allowed, too:`\n *\n * ```js\n * var promiseLikeChart = `\n *   pending -> // Where do we go from here?\n *     (resolved | rejected) -> // Ah, yes\n *\n *   // And now we're all finished\n *   done\n * `\n * ```\n *\n * Finally, here's a more full example:\n *\n * ```js\n * var dragDropChart = `\n *   idle ->\n *     drag-detect ->\n *       (dragging | clicked)\n *\n *   // Just a click, bail-out!\n *   clicked -> idle\n *\n *   // Drag detected!\n *   dragging ->\n *     drag-wait -> dragged -> drag-wait\n *\n *   // Drag finished...\n *   (drag-wait | dragged) ->\n *     (drag-done | drag-cancel) ->\n *       idle\n * `\n * ```\n *\n * @typedef {string|string[]} statebotChart\n */\n\n// https://www.npmjs.com/package/events\nimport EventEmitter from 'events'\n\nimport {\n  isArray,\n  isEventEmitter,\n  isFunction,\n  isPojo,\n  isString,\n  ArgTypeError,\n  Logger,\n  ReferenceCounter,\n  Pausables\n} from './utils'\n\nimport { decomposeChart, cxArrow } from './parsing'\n\n/**\n * Create a {@link #statebotfsm|statebotFsm} `object`.\n *\n * @memberof statebot\n * @function\n * @example\n * var machine = Statebot('lemming', {\n *   chart: `\n *     walking -> (digging | building | falling) ->\n *       walking\n *\n *     falling -> splatting\n *     walking -> exiting\n *   `\n * })\n *\n * @param {string} name\n *  Give your Statebot a name. Used for logging and by {@link #statebotassertroute|assertRoute()}.\n * @param {statebotOptions} options\n */\n\nfunction Statebot (name, options) {\n  if (!isString(name)) {\n    throw TypeError('\\nStatebot: Please specify a name for this machine')\n  }\n\n  const logPrefix = `Statebot[${name}]`\n  if (!isPojo(options)) {\n    throw TypeError(`\\n${logPrefix}: Please specify options for this machine`)\n  }\n\n  const {\n    chart = undefined,\n    logLevel = 3,\n    historyLimit = 2\n  } = options || {}\n\n  const argTypeError = ArgTypeError(`${logPrefix}#`)\n  const console = Logger(logLevel)\n  const { canWarn } = console\n\n  const {\n    states = [],\n    routes = []\n  } = chart ? decomposeChart(chart) : options\n\n  const { startIn = states[0] } = options\n  if (!states.includes(startIn)) {\n    throw Error(`${logPrefix}: Starting-state not in chart: \"${startIn}\"`)\n  }\n\n  let transitionId = 0\n  const stateHistory = [startIn]\n  const stateHistoryLimit = Math.max(historyLimit, 2)\n\n  const events = isEventEmitter(options.events) ? options.events : new EventEmitter()\n  const internalEvents = new EventEmitter()\n  const INTERNAL_EVENTS = {\n    onSwitching: '(ANY)state:changing',\n    onSwitched: '(ANY)state:changed'\n  }\n\n  const { pause, resume, paused, Pausable } = Pausables(false, () => {\n    console.warn(`${logPrefix}: Ignoring callback, paused`)\n  })\n\n  const emitInternalEvent = Pausable((eventName, ...args) => {\n    return internalEvents.emit(eventName, ...args)\n  })\n\n  function onInternalEvent (eventName, cb) {\n    internalEvents.addListener(eventName, cb)\n    return () => {\n      internalEvents.removeListener(eventName, cb)\n    }\n  }\n\n  const statesHandled = ReferenceCounter(\n    name,\n    'states',\n    'Listening for the following state-changes',\n    [...states]\n  )\n  const routesHandled = ReferenceCounter(\n    name,\n    'transitions',\n    'Listening for the following transitions',\n    [...routes]\n  )\n  const eventsHandled = ReferenceCounter(\n    name,\n    'events',\n    'Listening for the following events'\n  )\n\n  // Interprets onTransitions() and performTransitions()\n  function applyHitcher (hitcher, fnName) {\n    const hitcherActions =\n      isFunction(hitcher)\n        ? hitcher({ enter, emit, Enter, Emit })\n        : isPojo(hitcher)\n          ? hitcher\n          : null\n\n    if (!isPojo(hitcherActions)) {\n      throw TypeError(\n        `Statebot[${name}]#${fnName}(): Expected an object, or a function that returns an object`\n      )\n    }\n\n    // For: performTransitions()\n    const events = {}\n\n    // For: onTransitions()\n    const transitions = []\n\n    Object.entries(hitcherActions)\n      .forEach(([routeChart, actionOrConfig]) => {\n        if (isFunction(actionOrConfig)) {\n          transitions.push({ routeChart, action: actionOrConfig })\n        } else if (!isPojo(actionOrConfig)) {\n          return\n        }\n\n        const { on: _on, then: _then } = actionOrConfig\n        if (isString(_on) || isArray(_on)) {\n          const eventNames = [_on].flat()\n          eventNames.forEach(eventName => {\n            events[eventName] = events[eventName] || []\n            events[eventName].push({ routeChart, action: _then })\n          })\n        } else if (isFunction(_then)) {\n          // Behave like onTransitions() if a \"then\" is specified but\n          // there is no \"on\" event that triggers it\n          transitions.push({ routeChart, action: actionOrConfig })\n        }\n      })\n\n    const allStates = []\n    const allRoutes = []\n    const allCleanupFns = []\n\n    // performTransitions()\n    const decomposedEvents = Object.entries(events)\n      .reduce((acc, [eventName, _configs]) => {\n        const { states, routes, configs } = decomposeConfigs(_configs, canWarn)\n        if (canWarn()) {\n          allStates.push(...states)\n          allRoutes.push(...routes)\n        }\n        return {\n          ...acc,\n          [eventName]: configs\n        }\n      }, {})\n\n    allCleanupFns.push(\n      ...Object.entries(decomposedEvents)\n        .map(([eventName, configs]) => [\n          eventsHandled.increase(eventName),\n          onEvent(eventName, (...args) => {\n            const eventWasHandled = configs.some(\n              ({ fromState, toState, action }) => {\n                const passed = inState(fromState, () => {\n                  enter(toState, ...args)\n                  if (isFunction(action)) {\n                    action(...args)\n                  }\n                  return true\n                })\n\n                return !!passed\n              })\n\n            if (!eventWasHandled) {\n              transitionNoOp(`Event not handled: \"${eventName}\"`)\n            }\n          })\n        ])\n        .flat()\n    )\n\n    // onTransitions()\n    const transitionConfigs = decomposeConfigs(transitions, canWarn)\n\n    if (canWarn()) {\n      allStates.push(...transitionConfigs.states)\n      allRoutes.push(...transitionConfigs.routes)\n    }\n\n    allCleanupFns.push(\n      ...transitionConfigs.configs\n        .map(transition => {\n          const { fromState, toState, action } = transition\n          const route = `${fromState}->${toState}`\n          return [\n            routesHandled.increase(route),\n            onInternalEvent(route, action)\n          ]\n        })\n        .flat()\n    )\n\n    // Debugging, if we're at the right level\n    if (canWarn()) {\n      const invalidStates = allStates.filter(state => !states.includes(state))\n      const invalidRoutes = allRoutes.filter(route => !routes.includes(route))\n      if (invalidStates.length) {\n        console.warn(\n          `Statebot[${name}]#${fnName}(): Invalid states specified:\\n` +\n          invalidStates.map(state => `  > \"${state}\"`).join('\\n')\n        )\n      }\n      if (invalidRoutes.length) {\n        console.warn(\n          `Statebot[${name}]#${fnName}(): Invalid transitions specified:\\n` +\n          invalidRoutes.map(route => `  > \"${route}\"`).join('\\n')\n        )\n      }\n    }\n\n    return () => allCleanupFns.forEach(fn => fn())\n  }\n\n  function previousState () {\n    return stateHistory[stateHistory.length - 2]\n  }\n\n  function currentState () {\n    return stateHistory[stateHistory.length - 1]\n  }\n\n  function canTransitionTo (...states) {\n    const testStates = states.flat()\n    const err = argTypeError('canTransitionTo', { state: isString }, testStates[0])\n    if (err) {\n      throw TypeError(err)\n    }\n\n    if (!testStates.length) {\n      return false\n    }\n\n    const nextStates = statesAvailableFromHere()\n    return testStates.every(state => nextStates.includes(state))\n  }\n\n  function statesAvailableFromHere (state) {\n    const _state = state !== undefined\n      ? state\n      : currentState()\n\n    const err = argTypeError('statesAvailableFromHere', { state: isString }, _state)\n    if (err) {\n      throw TypeError(err)\n    }\n\n    return routes.reduce((acc, route) => {\n      const [fromState, toState] = route.split(cxArrow)\n        .map(state => state.trim())\n\n      if (fromState === _state) {\n        return [...acc, toState]\n      }\n      return acc\n    }, [])\n  }\n\n  function inState (state, anyOrFn, ...fnArgs) {\n    const err = argTypeError('inState', { state: isString }, state)\n    if (err) {\n      throw TypeError(err)\n    }\n\n    const conditionMatches = currentState() === state\n\n    if (anyOrFn !== undefined) {\n      if (!conditionMatches) {\n        return null\n      }\n      if (isFunction(anyOrFn)) {\n        return anyOrFn(...fnArgs)\n      }\n      return anyOrFn\n    }\n\n    return conditionMatches\n  }\n\n  const emit = Pausable((eventName, ...args) => {\n    const err = argTypeError('emit', { eventName: isString }, eventName)\n    if (err) {\n      throw TypeError(err)\n    }\n\n    return events.emit(eventName, ...args)\n  })\n\n  const enter = Pausable((state, ...args) => {\n    const err = argTypeError('enter', { state: isString }, state)\n    if (err) {\n      throw TypeError(err)\n    }\n\n    const inState = currentState()\n    const toState = state\n\n    if (toState === inState) {\n      transitionNoOp(`Already in state: \"${toState}\"`)\n      return false\n    }\n\n    if (!states.includes(toState)) {\n      transitionNoOp(`Invalid state \"${toState}\", not switching`)\n      return false\n    }\n\n    const nextRoute = `${inState}->${toState}`\n    if (!routes.includes(nextRoute)) {\n      transitionNoOp(`Invalid transition \"${nextRoute}\", not switching`)\n      return false\n    }\n\n    // Fell-through, can enter next state\n    console.info(`${logPrefix}: tId<${++transitionId}>: ${nextRoute}`)\n\n    stateHistory.push(toState)\n    if (stateHistory.length > stateHistoryLimit) {\n      stateHistory.shift()\n    }\n\n    emitInternalEvent(INTERNAL_EVENTS.onSwitching, toState, inState, ...args)\n    emitInternalEvent(nextRoute, ...args)\n    emitInternalEvent(INTERNAL_EVENTS.onSwitched, toState, inState, ...args)\n\n    return true\n  })\n\n  function onEvent (eventName, cb) {\n    const err = argTypeError('onEvent', { eventName: isString, cb: isFunction }, eventName, cb)\n    if (err) {\n      throw TypeError(err)\n    }\n\n    events.addListener(eventName, cb)\n    return () => events.removeListener(eventName, cb)\n  }\n\n  const switchMethods = Object.keys(INTERNAL_EVENTS)\n    .reduce((obj, methodName) => {\n      return {\n        ...obj,\n        [methodName]: function (cb) {\n          const err = argTypeError(methodName, { cb: isFunction }, cb)\n          if (err) {\n            throw TypeError(err)\n          }\n\n          const decreaseRefCount = statesHandled.increase(INTERNAL_EVENTS[methodName])\n          const removeEvent = onInternalEvent(\n            INTERNAL_EVENTS[methodName], cb\n          )\n          return () => {\n            removeEvent()\n            decreaseRefCount()\n          }\n        }\n      }\n    }, {})\n\n  const enterExitMethods = [\n    ['Exiting', 'onSwitching'],\n    ['Entering', 'onSwitching'],\n    ['Exited', 'onSwitched'],\n    ['Entered', 'onSwitched']\n  ]\n    .reduce((obj, names) => {\n      const [name, switchMethod] = names\n      const methodName = `on${name}`\n      const eventName = name.toLowerCase()\n      return {\n        ...obj,\n        [methodName]: function (state, cb) {\n          const err = argTypeError(methodName, { state: isString, cb: isFunction }, state, cb)\n          if (err) {\n            throw TypeError(err)\n          }\n\n          const decreaseRefCounts = [\n            statesHandled.increase(state),\n            statesHandled.increase(`${state}:${eventName}`)\n          ]\n          const removeEvent = switchMethods[switchMethod]((toState, fromState, ...args) => {\n            if (name.indexOf('Exit') === 0) {\n              if (state === fromState) {\n                cb(toState, ...args)\n              }\n            } else {\n              if (state === toState) {\n                cb(fromState, ...args)\n              }\n            }\n          })\n          return () => {\n            removeEvent()\n            decreaseRefCounts.map(fn => fn())\n          }\n        }\n      }\n    }, {})\n\n  function Emit (eventName, ...curriedArgs) {\n    const err = argTypeError('Emit', { eventName: isString }, eventName)\n    if (err) {\n      throw TypeError(err)\n    }\n\n    return (...args) => emit(eventName, ...[...curriedArgs, ...args])\n  }\n\n  function Enter (state, ...curriedArgs) {\n    const err = argTypeError('Enter', { state: isString }, state)\n    if (err) {\n      throw TypeError(err)\n    }\n\n    return (...args) => enter(state, ...[...curriedArgs, ...args])\n  }\n\n  function InState (state, anyOrFn, ...curriedFnArgs) {\n    const err = argTypeError('InState', { state: isString }, state)\n    if (err) {\n      throw TypeError(err)\n    }\n\n    return (...fnArgs) =>\n      inState(state, anyOrFn, ...[...curriedFnArgs, ...fnArgs])\n  }\n\n  function reset () {\n    console.warn(`${logPrefix}: State-machine reset!`)\n\n    stateHistory.length = 0\n    stateHistory.push(startIn)\n  }\n\n  function transitionNoOp (message) {\n    const lastState = previousState()\n    const inState = currentState()\n    const prevRoute = `${lastState === undefined ? '[undefined]' : lastState}->${inState}`\n\n    const availableStates = statesAvailableFromHere()\n    if (!availableStates.length) {\n      console.info(\n        `${logPrefix}: ${message}\\n` +\n          `  > Previous transition: \"${prevRoute}\"\\n` +\n          `  > There are no states available from \"${inState}\"`\n      )\n    } else {\n      console.info(\n        `${logPrefix}: ${message}\\n` +\n          `  > Previous transition: \"${prevRoute}\"\\n` +\n          `  > From \"${inState}\", valid states are: [${availableStates\n            .map(state => `\"${state}\"`)\n            .join(', ')}]`\n      )\n    }\n  }\n\n  function inspect () {\n    return {\n      states: statesHandled.refs(),\n      transitions: routesHandled.refs(),\n      events: eventsHandled.refs()\n    }\n  }\n\n  function info () {\n    console.log(`${logPrefix}: Information about this state-machine`)\n\n    logRefCounterInfo(statesHandled)\n    logRefCounterInfo(routesHandled)\n    logRefCounterInfo(eventsHandled)\n  }\n\n  function logRefCounterInfo (refCounter) {\n    const { description, table } = refCounter.toValue()\n    console.log(description)\n    if (table.length) {\n      console.table(table)\n    } else {\n      console.log('  > No information')\n    }\n  }\n\n  /**\n   * A state-machine object created by\n   * {@link #statebotstatebot|Statebot()}.\n   * @typedef {Object} statebotFsm\n   */\n\n  return {\n    /**\n     * For identifying Statebot objects.\n     *\n     * @private\n     */\n    __STATEBOT__: 1,\n\n    /**\n     * Tests to see if we can transition to the specified state from\n     * the {@link #statebotfsmcurrentstate|.currentState()}.\n     *\n     * If more than one state is specified, `true` is returned only if\n     * **ALL** states are available.\n     *\n     * @memberof statebotFsm\n     * @instance\n     * @function\n     * @param {string|string[]} states\n     * @returns {boolean}\n     * @example\n     * var machine = Statebot('game-menus', {\n     *   chart: `\n     *     loading ->\n     *       menu ->\n     *         play |\n     *         options |\n     *         sound |\n     *         quit\n     *\n     *     // Go back to menu\n     *     play | options | sound -> menu\n     *\n     *     // Can quit from main game, too\n     *     play -> quit\n     *   `\n     * })\n     *\n     * machine.canTransitionTo('play')\n     * // false\n     *\n     * machine.enter('menu')\n     * machine.canTransitionTo(['play', 'options'])\n     * // true\n     */\n    canTransitionTo: canTransitionTo,\n\n    /**\n     * Returns the current state.\n     *\n     * @memberof statebotFsm\n     * @instance\n     * @function\n     * @returns {string}\n     *\n     * @example\n     * var machine = Statebot('coroutine', {\n     *   chart: `\n     *     suspended -> running -> (suspended | dead)\n     *   `\n     * })\n     *\n     * machine.currentState()\n     * // \"suspended\"\n     */\n    currentState: currentState,\n\n    /**\n     * Immediately emits an event, firing any listeners added using\n     * {@link #statebotfsmperformtransitions|.performTransitions()} or {@link #statebotfsmonevent|.onEvent()}.\n     *\n     * @memberof statebotFsm\n     * @instance\n     * @function\n     * @param {string} eventName\n     * @param {...*} [args]\n     *  Optional arguments to pass to listeners.\n     * @returns {boolean}\n     *  Whether or not the event had listeners.\n     *\n     *  See: {@link https://nodejs.org/api/events.html#events_emitter_emit_eventname_args|Node Events}\n     *  for more information.\n     *\n     * Statebot imports `EventEmitter` from the\n     *  {@link https://www.npmjs.com/package/events|events}\n     * package for dealing with events in the browser.\n     *\n     * @example\n     * var machine = Statebot('basic-form', {\n     *   chart: `\n     *     idle -> sending -> redirect\n     *   `\n     * })\n     *\n     * machine.performTransitions({\n     *   'idle -> sending': {\n     *     on: 'post-data',\n     *     then: (...args) => {\n     *       console.log('Event args: ', args)\n     *       // setTimeout(machine.Enter('redirect'), 5000)\n     *     }\n     *   }\n     * })\n     *\n     * machine.emit('post-data', 'Hello, world!')\n     * // Event args: [\"Hello, world!\"]\n     *\n     * machine.currentState()\n     * // \"sending\"\n     */\n    emit: emit,\n\n    /**\n     * Creates a function that emits the specified event.\n     *\n     * (This is essentially a convenience wrapper around {@link #statebotfsmemit|.emit()}.)\n     *\n     * @memberof statebotFsm\n     * @instance\n     * @function\n     * @param {string} eventName\n     *  The desired event to {@link #statebotfsmemit|.emit()}.\n     * @param {...*} [curriedArgs]\n     *  Arguments that will curry into the returned `emit()` function\n     *  whenever it is called.\n     * @returns {function} A function that emits that event.\n     *\n     * @example\n     * var machine = Statebot('traffic-lights', {\n     *   chart: `\n     *     go ->\n     *       prepare-to-stop ->\n     *       stop\n     *\n     *     // ...gotta keep that traffic flowing\n     *     stop ->\n     *       prepare-to-go ->\n     *       go\n     *   `,\n     *   startIn: 'stop'\n     * })\n     *\n     * machine.performTransitions({\n     *   'stop -> prepare-to-go':   { on: 'timer' },\n     *   'prepare-to-go -> go':     { on: 'timer' },\n     *   'go -> prepare-to-stop':   { on: 'timer' },\n     *   'prepare-to-stop -> stop': { on: 'timer' }\n     * })\n     *\n     * var nextTrafficLight = machine.Emit('timer')\n     * machine.currentState()\n     * // \"stop\"\n     *\n     * nextTrafficLight()\n     * nextTrafficLight()\n     * nextTrafficLight()\n     *\n     * machine.currentState()\n     * // \"prepare-to-stop\"\n     */\n    Emit: Emit,\n\n    /**\n     * Immediately changes to the specified state, so long as it is\n     * accessible from the {@link #statebotfsmcurrentstate|.currentState()}.\n     *\n     * @memberof statebotFsm\n     * @instance\n     * @function\n     * @param {string} state The desired state to switch-to.\n     * @param {...*} [args]\n     *  Optional arguments to pass to transition callbacks.\n     * @returns {boolean} Whether or not the state changed.\n     *\n     * @example\n     * var machine = Statebot('dialog', {\n     *   chart: `\n     *     idle -> showing-modal -> (saving | idle)\n     *       saving -> idle\n     *   `\n     * })\n     *\n     * machine.currentState()\n     * // \"idle\"\n     *\n     * machine.enter('saving')\n     * // false\n     *\n     * // [dialog]: Invalid transition \"idle->saving\", not switching\n     * // > Previous transition: \"[undefined]->idle\"\n     * // > From \"idle\", valid states are: [\"showing-modal\"]\n     *\n     * machine.enter('showing-modal')\n     * // true\n     */\n    enter: enter,\n\n    /**\n     * Creates a function that changes to the specified state, so long\n     * as it is accessible from the {@link #statebotfsmcurrentstate|.currentState()}.\n     *\n     * (This is essentially a convenience wrapper around {@link #statebotfsmenter|.enter()}.)\n     *\n     * @memberof statebotFsm\n     * @instance\n     * @function\n     * @param {string} state The desired state to switch-to.\n     * @param {...*} [curriedArgs]\n     *  Arguments that will curry into the returned `enter()` function\n     *  whenever it is called.\n     * @returns {function}\n     *  A function that can change the state when called.\n     *\n     * @example\n     * var machine = Statebot('popup-menu', {\n     *   chart: `\n     *     idle -> menu-opened ->\n     *       (item-clicked | idle)\n     *\n     *     item-clicked -> idle\n     *   `,\n     *   startIn: 'menu-opened'\n     * })\n     *\n     * button.onclick = machine.Enter('item-clicked')\n     * machine.currentState()\n     * // \"menu-opened\"\n     *\n     * button.onclick()\n     * machine.currentState()\n     * // \"item-clicked\"\n     */\n    Enter: Enter,\n\n    /**\n     * Returns all states the machine has been in so far, up to a limit set\n     * by `historyLimit` in {@link statebotOptions}.\n     *\n     * @memberof statebotFsm\n     * @instance\n     * @function\n     * @returns {string[]} A copy of the state-history.\n     *\n     * @example\n     * var machine = Statebot('downloader', {\n     *   chart: `\n     *     loading -> (failure | success)\n     *       failure -> loading\n     *       success -> done\n     *   `,\n     *   historyLimit: 4\n     * })\n     *\n     * machine.enter('failure')\n     * machine.enter('loading')\n     * machine.enter('success')\n     * machine.enter('done')\n     * machine.history()\n     * // [\"failure\", \"loading\", \"success\", \"done\"]\n     */\n    history: () => [...stateHistory],\n\n    /**\n     * Print information about the current machine to the console.\n     *\n     * @memberof statebotFsm\n     * @instance\n     * @example\n     * var machine = Statebot('half-duplex', {\n     *   chart: `\n     *     idle -> sending | receiving -> done\n     *   `\n     * })\n     *\n     * machine.info()\n     * // [half-duplex]: Information about this state-machine.\n     * // [half-duplex]: Listening for the following state-changes:\n     * // ┌─────────┬─────────────┬────────┐\n     * // │ (index) │   states    │   #    │\n     * // ├─────────┼─────────────┼────────┤\n     * // │    0    │   'done'    │ 'None' │\n     * // │    1    │   'idle'    │ 'None' │\n     * // │    2    │ 'receiving' │ 'None' │\n     * // │    3    │  'sending'  │ 'None' │\n     * // └─────────┴─────────────┴────────┘\n     * // [half-duplex] Listening for the following transitions:\n     * // ┌─────────┬───────────────────┬────────┐\n     * // │ (index) │    transitions    │   #    │\n     * // ├─────────┼───────────────────┼────────┤\n     * // │    0    │ 'idle->receiving' │ 'None' │\n     * // │    1    │  'idle->sending'  │ 'None' │\n     * // │    2    │ 'receiving->done' │ 'None' │\n     * // │    3    │  'sending->done'  │ 'None' │\n     * // └─────────┴───────────────────┴────────┘\n     * // [half-duplex]: Listening for the following events:\n     * // (No information)\n     */\n    info: () => info(),\n\n    /**\n     * Get information about the current machine.\n     *\n     * Same details as {@link #statebotfsminfo|.info()} in object-form.\n     *\n     * @memberof statebotFsm\n     * @instance\n     * @returns {object}\n     * @example\n     * var machine = Statebot('half-duplex', {\n     *   chart: `\n     *     idle -> sending | receiving -> done\n     *   `\n     * })\n     *\n     * machine.inspect()\n     * // Will return an object with the following signature:\n     * //  { states, transitions, events }\n     *\n     * // These will each have key-values, the key being the name\n     * // and the value being the number of listeners attached.\n     */\n    inspect: () => inspect(),\n\n    /**\n     * Checks if the {@link #statebotfsmcurrentstate|.currentState()}\n     * matches the specified `state`, immediately returning either\n     * `true` or `false`.\n     *\n     * If `outputWhenTrue` is specified, then it will be returned\n     * instead of `true`, and `null` will be returned instead of\n     *  `false`.\n     *\n     * If a function is specified, then its return-value will be used\n     * as the `true`-value.\n     *\n     * @memberof statebotFsm\n     * @instance\n     * @function\n     * @param {string} state The state to test against.\n     * @param {any|function} [outputWhenTrue]\n     *  Optional `true`-value. If a function is specified, it will be\n     *  called and its return value will be used.\n     * @param {...*} [fnArgs]\n     *  Arguments that will pass into `outputWhenTrue()` if it has\n     *  been defined as a function.\n     * @returns {boolean|null|*}\n     *\n     * @example\n     * var machine = Statebot('little-revver', {\n     *   chart: `\n     *     idle ->\n     *       (gear-1 | gear-2 | reverse) ->\n     *     idle\n     *   `\n     * })\n     *\n     * machine.inState('idle')\n     * // true\n     *\n     * machine.inState('idle', 'Purrrr...')\n     * // \"Purrrr...\"\n     *\n     * machine.enter('gear-1')\n     * machine.inState('idle', () => {\n     *   console.log('Idling!')\n     *   return 'Purrrr...'\n     * })\n     * // null\n     * // ^ the function is not called at all in the `false` case,\n     * //   so no console.log either.\n     */\n    inState: inState,\n\n    /**\n     * Returns a function which, when run, tests that\n     * {@link #statebotfsmcurrentstate|.currentState()} matches the\n     * specified state, returning either `true` or `false`.\n     *\n     * If `outputWhenTrue` is specified, then it will be returned\n     * instead of `true`, and `null` will be returned instead of\n     *  `false`.\n     *\n     * (This is essentially a convenience wrapper around {@link #statebotfsminstate|.inState()}.)\n     *\n     * @memberof statebotFsm\n     * @instance\n     * @function\n     * @param {string} state The state to test against.\n     * @param {any|function} [outputWhenTrue]\n     *  Optional `true`-value. If a function is specified, it will be\n     *  called and its return value will be used.\n     * @param {...*} [curriedFnArgs]\n     *  Arguments that will curry into `outputWhenTrue()` if it has\n     *  been defined as a function.\n     * @returns {function}\n     *  A function that calls {@link #statebotfsminstate|.inState()}.\n     *\n     * @example\n     * var machine = Statebot('little-revver', {\n     *   chart: `\n     *     idle ->\n     *       (gear-1 | gear-2 | reverse) ->\n     *     idle\n     *   `\n     * })\n     *\n     * var idling = machine.InState('idle')\n     * var purring = machine.InState('idle', () => {\n     *   console.log('Idling!')\n     *   return 'Purrrr...'\n     * })\n     *\n     * idling()\n     * // true\n     *\n     * purring()\n     * // Idling!\n     * // \"Purrrr...\"\n     *\n     * machine.enter('gear-1')\n     * purring()\n     * // null\n     * // ^ the function is not called at all in the `false` case,\n     * //   so no console.log either.\n     */\n    InState: InState,\n\n    /**\n     * Returns the name of the state-machine.\n     *\n     * Used for logging and also by {@link #statebotassertroute|assertRoute()}\n     * for the same.\n     *\n     * @memberof statebotFsm\n     * @instance\n     * @function\n     * @returns {string} The name of the state-machine.\n     *\n     * @example\n     * var machine = Statebot('Ay, there’s the rub.', {\n     *   chart: `\n     *     the-question -> (to-be | not-to-be)\n     *       not-to-be -> perchance-to-dream\n     *   `\n     * })\n     *\n     * machine.name()\n     * // \"Ay, there’s the rub.\"\n     */\n    name: () => name,\n\n    /**\n     * Adds a listener that runs a callback immediately **AFTER** the\n     * specified-state becomes the current one.\n     *\n     * A function is returned that will remove the listener.\n     *\n     * @memberof statebotFsm\n     * @instance\n     * @function\n     * @param {string} state The state.\n     * @param {enterCallback} cb\n     *  A callback function with the signature:\n     *\n     *  `(fromState, ...args?)`\n     * @returns {function} A function that removes the listener.\n     *\n     * @example\n     * var machine = Statebot('half-duplex', {\n     *   chart: `\n     *     idle -> sending | receiving -> done\n     *   `\n     * })\n     *\n     * machine.onEntered('done', fromState => {\n     *   console.log('Entered from:', fromState)\n     * })\n     *\n     * machine.enter('receiving')\n     * machine.enter('done')\n     * // Entered from: receiving\n     */\n    onEntered: enterExitMethods.onEntered,\n\n    /**\n     * Adds a listener that runs a callback immediately **BEFORE** the\n     * specified-state becomes the current one.\n     *\n     * A function is returned that will remove the listener.\n     *\n     * @memberof statebotFsm\n     * @instance\n     * @function\n     * @param {string} state The state.\n     * @param {enterCallback} cb\n     *  A callback function with the signature:\n     *\n     *  `(fromState, ...args?)`\n     * @returns {function} A function that removes the listener.\n     *\n     * @example\n     * var machine = Statebot('half-duplex', {\n     *   chart: `\n     *     idle -> sending | receiving -> done\n     *   `\n     * })\n     *\n     * machine.onEntered('done', () => {\n     *   console.log('We made it!')\n     * })\n     *\n     * machine.onEntering('done', fromState => {\n     *   console.log('Entering from:', fromState)\n     * })\n     *\n     * machine.enter('sending')\n     * machine.enter('done')\n     * // Entering from: sending\n     * // We made it!\n     */\n    onEntering: enterExitMethods.onEntering,\n\n    /**\n     * {@link #statebotfsmonentering .onEntering()} /\n     * {@link #statebotfsmonentered .onEntered()} callback signature.\n     *\n     * @callback enterCallback\n     * @param {string} fromState\n     * @param {...any} [args]\n     *  Arguments passed-down from {@link #statebotfsmenter .enter()} or\n     *  {@link #statebotfsmemit .emit()}\n     */\n\n    /**\n     * Adds a listener that runs a callback immediately after the specified\n     * event is called.\n     *\n     * A function is returned that will remove the listener.\n     *\n     * @memberof statebotFsm\n     * @instance\n     * @function\n     * @param {string} name The event name.\n     * @param {function} cb The callback.\n     * @returns {function} A function that removes the listener.\n     *\n     * @example\n     * var machine = Statebot('traffic-lights', {\n     *   chart: `\n     *     go ->\n     *       prepare-to-stop ->\n     *       stop\n     *\n     *     // ...gotta keep that traffic flowing\n     *     stop ->\n     *       prepare-to-go ->\n     *       go\n     *   `\n     * })\n     *\n     * machine.performTransitions({\n     *   'stop -> prepare-to-go -> go':   { on: 'timer' },\n     *   'go -> prepare-to-stop -> stop': { on: 'timer' },\n     * })\n     *\n     * machine.onEvent('timer', () => {\n     *   redrawTrafficLights()\n     * })\n     *\n     * setInterval(machine.Emit('timer'), 2000)\n     */\n    onEvent: onEvent,\n\n    /**\n     * Adds a listener that runs a callback immediately **AFTER** the\n     * specified-state is no longer the current one.\n     *\n     * A function is returned that will remove the listener.\n     *\n     * @memberof statebotFsm\n     * @instance\n     * @function\n     * @param {string} state The state.\n     * @param {exitCallback} cb\n     *  A callback function with the signature:\n     *\n     *  `(toState, ...args?)`\n     * @returns {function} A function that removes the listener.\n     *\n     * @example\n     * var machine = Statebot('half-duplex', {\n     *   chart: `\n     *     idle -> sending | receiving -> done\n     *   `\n     * })\n     *\n     * machine.onExited('idle', toState => {\n     *   console.log('We are heading to:', toState)\n     * })\n     *\n     * machine.enter('sending')\n     * // We are heading to: sending\n     */\n    onExited: enterExitMethods.onExited,\n\n    /**\n     * Adds a listener that runs a callback immediately **BEFORE** the\n     * specified-state is no longer the current one.\n     *\n     * A function is returned that will remove the listener.\n     *\n     * @memberof statebotFsm\n     * @instance\n     * @function\n     * @param {string} state The state.\n     * @param {exitCallback} cb\n     *  A callback function with the signature:\n     *\n     *  `(toState, ...args?)`\n     * @returns {function} A function that removes the listener.\n     *\n     * @example\n     * var machine = Statebot('half-duplex', {\n     *   chart: `\n     *     idle -> sending | receiving -> done\n     *   `\n     * })\n     *\n     * machine.onExited('idle', () => {\n     *   console.log('Peace out!')\n     * })\n     *\n     * machine.onExiting('idle', toState => {\n     *   console.log('Heading to:', toState)\n     * })\n     *\n     * machine.enter('receiving')\n     * machine.enter('done')\n     * // Heading to: receiving\n     * // Peace out!\n     */\n    onExiting: enterExitMethods.onExiting,\n\n    /**\n     * {@link #statebotfsmonexiting .onExiting()} /\n     * {@link #statebotfsmonexited .onExited()} callback signature.\n     *\n     * @callback exitCallback\n     * @param {string} toState\n     * @param {...any} [args]\n     *  Arguments passed-down from {@link #statebotfsmenter .enter()} or\n     *  {@link #statebotfsmemit .emit()}\n     */\n\n    /**\n     * Adds a listener that runs a callback immediately after **ANY**\n     * state-change.\n     *\n     * A function is returned that will remove the listener.\n     *\n     * @memberof statebotFsm\n     * @instance\n     * @function\n     * @param {switchCallback} cb\n     *  A callback function with the signature:\n     *\n     *  `(toState, fromState, ...args?)`\n     * @returns {function} A function that removes the listener.\n     *\n     * @example\n     * var machine = Statebot('half-duplex', {\n     *   chart: `\n     *     idle -> sending | receiving -> done\n     *   `\n     * })\n     *\n     * machine.onSwitched((toState, fromState) => {\n     *   console.log(`We went from \"${fromState}\" to \"${toState}\"`)\n     * })\n     *\n     * machine.enter('receiving')\n     * // We went from \"idle\" to \"receiving\"\n     */\n    onSwitched: switchMethods.onSwitched,\n\n    /**\n     * Adds a listener that runs a callback immediately before **ANY**\n     * state-change.\n     *\n     * A function is returned that will remove the listener.\n     *\n     * @memberof statebotFsm\n     * @instance\n     * @function\n     * @param {switchCallback} cb\n     *  A callback function with the signature:\n     *\n     *  `(toState, fromState, ...args?)`\n     * @returns {function} A function that removes the listener.\n     *\n     * @example\n     * var machine = Statebot('half-duplex', {\n     *   chart: `\n     *     idle -> sending | receiving -> done\n     *   `\n     * })\n     *\n     * machine.onSwitching((toState, fromState) => {\n     *   console.log(`Going from \"${fromState}\" to \"${toState}\"`)\n     * })\n     *\n     * machine.enter('receiving')\n     * // Going from \"idle\" to \"receiving\"\n     */\n    onSwitching: switchMethods.onSwitching,\n\n    /**\n     * {@link #statebotfsmonswitching .onSwitching()} /\n     * {@link #statebotfsmonswitched .onSwitched()} callback signature.\n     *\n     * @callback switchCallback\n     * @param {string} toState\n     * @param {string} fromState\n     * @param {...any} [args]\n     *  Arguments passed-down from {@link #statebotfsmenter .enter()} or\n     *  {@link #statebotfsmemit .emit()}\n     */\n\n    /**\n     * Run callbacks when transitions happen.\n     *\n     * @memberof statebotFsm\n     * @instance\n     * @function\n     * @param {object|function} transitions\n     *  Configuration in the form of an object, or a function that\n     *  returns an object. If a function is used, there will be a single\n     *  argument passed-in: an object with the following methods\n     *  attached as a convenience:\n     *\n     *  - {{@link #statebotfsmenter|.enter()}, {@link #statebotfsmemit|.emit()}, {@link #enter-state-1 .Enter()}, {@link #emit-name .Emit()}}\n     *\n     * @returns {function} A function that removes all listeners added\n     *  by this method.\n     *\n     * @example\n     * var machine = Statebot('half-duplex', {\n     *   chart: `\n     *     idle -> sending | receiving -> done\n     *   `\n     * })\n     *\n     * machine.onTransitions({\n     *   'idle -> sending': () => {\n     *     sendData()\n     *       .then(machine.Enter('done', 'sent'))\n     *       .catch(machine.Enter('done', 'failed'))\n     *   },\n     *   'idle -> receiving': () => {\n     *     receiveData()\n     *       .then(machine.Enter('done', 'received'))\n     *       .catch(machine.Enter('done', 'failed'))\n     *   },\n     *   'sending | receiving -> done': whatHappened => {\n     *     console.log('All finished: ', whatHappened)\n     *   }\n     * })\n     *\n     * machine.enter('sending')\n     *\n     * function sendData() {\n     *   return new Promise((resolve, reject) => {\n     *     setTimeout(resolve, 1000)\n     *     setTimeout(reject, 750 + Math.round(Math.random() * 750))\n     *   })\n     * }\n     *\n     * function receiveData() {\n     *   return new Promise((resolve, reject) => {\n     *     setTimeout(resolve, 1000)\n     *     setTimeout(reject, 750 + Math.round(Math.random() * 750))\n     *   })\n     * }\n     *\n     * @example\n     * // The above example using a function for config\n     * machine.onTransitions(({ Enter }) => ({\n     *   'idle -> sending': () => {\n     *     sendData()\n     *       .then(Enter('done', 'sent'))\n     *       .catch(Enter('done', 'failed'))\n     *   },\n     *   'idle -> receiving': () => {\n     *     receiveData()\n     *       .then(Enter('done', 'received'))\n     *       .catch(Enter('done', 'failed'))\n     *   },\n     *   'sending | receiving -> done': whatHappened => {\n     *     console.log('All finished: ', whatHappened)\n     *   }\n     * }))\n     *\n     * // etc...\n     */\n    onTransitions: transitions => applyHitcher(transitions, 'onTransitions'),\n\n    /**\n     * Pause the machine. {@link #statebotfsmemit|.emit()} and {@link #statebotfsmenter|.enter()} will be no-ops until\n     * the machine is {@link #statebotfsmresume|.resume()}'d.\n     *\n     * @memberof statebotFsm\n     * @instance\n     * @function\n     */\n    pause,\n\n    /**\n     * Returns `true` if the machine is {@link #statebotfsmpause|.pause()}'d\n     *\n     * @memberof statebotFsm\n     * @instance\n     * @function\n     * @returns {boolean}\n     */\n    paused,\n\n    /**\n     * Perform transitions when events happen.\n     *\n     * Use `then` to optionally add callbacks to those transitions.\n     *\n     * @memberof statebotFsm\n     * @instance\n     * @function\n     * @param {object|function} transitions\n     *  Configuration in the form of an object, or a function that\n     *  returns an object. If a function is used, there will be a single\n     *  argument passed-in: an object with the following methods\n     *  attached as a convenience:\n     *\n     *  - {{@link #statebotfsmenter|.enter()}, {@link #statebotfsmemit|.emit()}, {@link #enter-state-1 .Enter()}, {@link #emit-name .Emit()}}\n     *\n     * @returns {function} A function that removes all listeners added\n     *  by this method.\n     *\n     * @example\n     * var machine = Statebot('complex-form', {\n     *   chart: `\n     *     idle ->\n     *       update\n     *\n     *     // Maybe things take a long time...\n     *     update ->\n     *       waiting -> waiting-a-while\n     *\n     *     // Which path will we take?\n     *     waiting | waiting-a-while ->\n     *       success | failed | timeout\n     *\n     *     // All done!\n     *     success | failed | timeout ->\n     *       done\n     *   `\n     * })\n     *\n     * machine.performTransitions(({ Enter, emit }) => ({\n     *   'idle -> update': {\n     *     on: 'user-saved',\n     *     then: (data) => {\n     *       console.log('Sending data: ', data)\n     *\n     *       sendData(data)\n     *         .then(Enter('success'))\n     *         .catch(Enter('failed'))\n     *\n     *       emit('data-sent')\n     *     }\n     *   },\n     *   'update -> waiting': {\n     *     on: 'data-sent',\n     *     then: () => {\n     *       setTimeout(Enter('waiting-a-while'), 750)\n     *       setTimeout(Enter('timeout'), 5000)\n     *     }\n     *   }\n     * }))\n     *\n     * // Just to illustrate that you can mix n' match with onTransitions:\n     * machine.onTransitions({\n     *   'waiting | waiting-a-while -> success': () => {\n     *     console.log('Lovely!')\n     *   },\n     *   'waiting | waiting-a-while -> timeout': () => {\n     *     console.log('Well, at least you have your shoes')\n     *   }\n     * })\n     *\n     * machine.emit('user-saved', ['some', 'data'])\n     * // Sending data: [\"some\", \"data\"]\n     *\n     * function sendData() {\n     *   return new Promise((resolve, reject) => {\n     *     setTimeout(resolve, 1000)\n     *     setTimeout(reject, 750 + Math.round(Math.random() * 750))\n     *   })\n     * }\n     */\n    performTransitions: transitions => applyHitcher(transitions, 'performTransitions'),\n\n    /**\n     * Returns the previous state.\n     *\n     * @memberof statebotFsm\n     * @instance\n     * @function\n     * @returns {string|undefined}\n     *  The previous state, or `undefined` if there isn't one (ie; you\n     *  have just called {@link #statebotfsmreset|.reset()}, or the\n     *  machine has just started.)\n     *\n     * @example\n     * var machine = Statebot('simple-sender', {\n     *   chart: `\n     *     idle -> sending -> done\n     *   `\n     * })\n     *\n     * machine.enter('sending')\n     * machine.previousState()\n     * // \"idle\"\n     */\n    previousState: previousState,\n\n    /**\n     * Returns the state-machine to its starting-state and clears the\n     * state-history.\n     *\n     * All listeners will still be attached, but no events or\n     * transitions will be fired. The pause-state will be maintained.\n     *\n     * @memberof statebotFsm\n     * @instance\n     * @function\n     *\n     * @example\n     * var machine = Statebot('carousel', {\n     *   chart: `\n     *     page-1 ->\n     *     page-2 ->\n     *     page-3 ->\n     *     page-4 -> page-1\n     *   `\n     * })\n     *\n     * machine.enter('page-2')\n     * machine.reset()\n     * machine.currentState()\n     * // \"page-1\"\n     */\n    reset: reset,\n\n    /**\n     * Resume a {@link #statebotfsmpause|.pause()}'d machine.\n     *\n     * @memberof statebotFsm\n     * @instance\n     * @function\n     */\n    resume,\n\n    /**\n     * Return an `array` of states accessible from the state specified.\n     * If no state is passed-in, the {@link #statebotfsmcurrentstate|.currentState()} is used.\n     *\n     * @memberof statebotFsm\n     * @instance\n     * @function\n     * @param {string} [state] The state to check. {@link #statebotfsmcurrentstate|.currentState()}\n     *  if unspecified.\n     * @returns {String[]}\n     * @example\n     * var machine = Statebot('half-duplex', {\n     *   chart: `\n     *     idle -> sending | receiving -> done\n     *   `\n     * })\n     *\n     * machine.statesAvailableFromHere()\n     * // [\"sending\", \"receiving\"]\n     *\n     * machine.statesAvailableFromHere('receiving')\n     * // [\"done\"]\n     */\n    statesAvailableFromHere: statesAvailableFromHere\n  }\n}\n\nfunction decomposeConfigs (configs, canWarn) {\n  const allStates = []\n  const allRoutes = []\n\n  const _configs = configs.reduce((acc, config) => {\n    const { routeChart, action } = config\n    const { states, routes, transitions } = decomposeChart(routeChart)\n    if (canWarn()) {\n      allStates.push(...states)\n      allRoutes.push(...routes)\n    }\n    return [\n      ...acc,\n      ...transitions.map(transition => {\n        const [fromState, toState] = transition\n        return { fromState, toState, action }\n      })\n    ]\n  }, [])\n\n  return {\n    configs: _configs,\n    states: allStates,\n    routes: allRoutes\n  }\n}\n\n/**\n * Tests that an object is a {@link #statebotfsm|statebotFsm}.\n *\n * @memberof statebot\n * @function\n * @example\n * var machine = Statebot(...)\n *\n * isStatebot(machine)\n * // true\n *\n * @param {any} object The object to test.\n * @returns {boolean}\n */\n\nfunction isStatebot (object) {\n  return (\n    isPojo(object) &&\n    typeof object.__STATEBOT__ === 'number'\n  )\n}\n","\n//\n// STATEBOT ASSERTION HELPERS\n//\n\nexport {\n  routeIsPossible,\n  assertRoute\n}\n\nimport { isStatebot } from './statebot'\nimport { decomposeRoute } from './parsing'\nimport {\n  Defer,\n  Once,\n  Revokable,\n  Logger,\n  ArgTypeError,\n  isTemplateLiteral\n} from './utils'\n\nconst argTypeError = ArgTypeError('statebot.')\n\n/**\n * Assert that a certain route can be followed by a\n * {@link #statebotfsm|statebotFsm}.\n *\n * This merely tests that a certain path can be taken through a\n * state-machine. It doesn't assert that the states are moved-through\n * while the machine is working, as with\n * {@link #statebotassertroute|assertRoute()}.\n *\n * @memberof statebot\n * @function\n * @param {statebotFsm} machine\n *  The machine to test the route on.\n * @param {string|string[]} route\n *  The route to test as an arrow-delimited string:\n *\n *  `\n *  \"idle -> pending -> success -> done\"\n *  `\n * @returns {boolean}\n *\n * @example\n * var machine = Statebot(...)\n *\n * routeIsPossible(machine,\n *   'walking -> falling -> splatting -> walking'\n * )\n * // false\n */\n\nfunction routeIsPossible (machine, route) {\n  const err = argTypeError('routeIsPossible',\n    { machine: isStatebot, route: isTemplateLiteral },\n    machine, route\n  )\n  if (err) {\n    throw TypeError(err)\n  }\n\n  const _route = decomposeRoute(route)\n  return _route.every((state, index) => {\n    if (index === _route.length - 1) {\n      return true\n    } else {\n      const nextState = _route[index + 1]\n      const availableStates = machine.statesAvailableFromHere(state)\n      const passes = availableStates.includes(nextState)\n      return passes\n    }\n  })\n}\n\nlet assertionId = 0\n\n/**\n * {@link #statebotassertroute|assertRoute()} options.\n * @typedef {Object} assertRouteOptions\n * @property {string} [description]\n *  Describe the success-condition for this assertion.\n * @property {string} [fromState=\"\"]\n *  Wait for the machine to be in this state before assertion begins.\n * @property {function} [run]\n *  Run this function just before starting the assertion.\n * @property {number} [permittedDeviations=0]\n *  If we hit an unexpected state during assertion, this is a \"deviation\".\n *  It might be that the FSM will come back to the expected state again\n *  after a certain number of these. For example, if your FSM has a\n *  \"retry\" route configured, this number can account for it.\n * @property {number} [timeoutInMs=1000]\n *  Permitted length of time for the entire assertion, in milliseconds.\n * @property {number} [logLevel=3]\n *  Normally we want logs for assertions, right? Well, you can tune\n *  them just like you can with {@link #statebotoptions|statebotOptions}.\n */\n\n/**\n * Assert that a {@link #statebotfsm|statebotFsm} traced the route specified.\n *\n * Whereas {@link #statebotrouteispossible|routeIsPossible()} only checks\n * that a particular route can be followed, `assertRoute` will hook-into\n * a machine and wait for it to trace the specified path within a\n * timeout period.\n *\n * @memberof statebot\n * @function\n * @async\n * @param {statebotFsm} machine\n *  The machine to run the assertion on.\n * @param {string|string[]} expectedRoute\n *  The expected route as an arrow-delimited string:\n *\n *  `\n *  \"idle -> pending -> success -> done\"\n *  `\n * @param {assertRouteOptions} [options]\n * @returns {Promise}\n *\n * @example\n * var machine = Statebot(...)\n *\n * assertRoute(\n *   machine, 'prepare -> debounce -> sending -> done -> idle',\n *   {\n *     description: 'Email sent with no issues',\n *     fromState: 'idle',\n *     timeoutInMs: 1000 * 20,\n *     permittedDeviations: 0,\n *     logLevel: 3\n *   }\n * )\n * .then(() => console.log('Assertion passed!'))\n * .catch(err => console.error(`Whoops: ${err}`))\n *\n * machine.enter('idle')\n */\n\nfunction assertRoute (machine, expectedRoute, options) {\n  const err = argTypeError('assertRoute',\n    { machine: isStatebot, expectedRoute: isTemplateLiteral },\n    machine, expectedRoute\n  )\n  if (err) {\n    throw TypeError(err)\n  }\n\n  assertionId += 1\n\n  const {\n    description = 'Assertion complete',\n    fromState = '',\n    run = () => {},\n    permittedDeviations = 0,\n    timeoutInMs = 1000,\n    logLevel = 3\n  } = options || {}\n\n  const console = Logger(logLevel)\n\n  const prefix = `Statebot[${machine.name()}]: aId<${assertionId}>`\n  const route = decomposeRoute(expectedRoute)\n\n  console.log(`\\n${prefix}: Asserting route: [${route.join(' > ')}]`)\n  console.log(`${prefix}: > Assertion will start from state: \"${fromState}\"`)\n\n  const fromStateActionFn = Defer(run)\n  let removeFromStateActionFn = () => { }\n\n  const totalTimeTaken = TimeTaken()\n  let stateTimeTaken = TimeTaken()\n  let assertionTimeoutTimer\n  let deviations = 0\n  let pending = true\n  let unexpected = false\n\n  const consumeRoute = [...route]\n  const report = Table(\n    ['state', 'expected', 'info', 'took'],\n    ['center', 'center', 'left', 'right']\n  )\n\n  const finaliseReport = Once(err => {\n    addRow('', '', '', 'TOTAL: ' + totalTimeTaken())\n    report.lock()\n    console.log(`\\n${prefix}: ${description}: [${err ? 'FAILED' : 'SUCCESS'}]`)\n    console.table(report.content())\n    return err\n  })\n\n  const { addRow } = report\n  function enteredState (state) {\n    if (pending) {\n      addRow(state, '-', 'PENDING')\n    } else {\n      const expectedState = consumeRoute[0]\n      if (expectedState === state) {\n        addRow(state, expectedState, unexpected ? 'REALIGNED' : 'OKAY', stateTimeTaken())\n        unexpected = false\n        consumeRoute.shift()\n      } else {\n        addRow(state, expectedState, 'WRONG STATE', stateTimeTaken())\n        unexpected = true\n        deviations += 1\n      }\n      stateTimeTaken = TimeTaken()\n    }\n  }\n\n  return new Promise((resolve, reject) => {\n    if (consumeRoute.length === 0) {\n      reject(finaliseReport(new Error('NO ROUTE TO TEST')))\n      return\n    }\n\n    const clearTimeoutAndResolve = (...args) => {\n      clearTimeout(assertionTimeoutTimer)\n      removeFromStateActionFn()\n      removeOnSwitchingListener()\n      resolve(...args)\n    }\n\n    const clearTimeoutAndReject = err => {\n      clearTimeout(assertionTimeoutTimer)\n      removeFromStateActionFn()\n      removeOnSwitchingListener()\n      reject(err)\n    }\n\n    const bailout = message => {\n      while (consumeRoute.length) {\n        const expectedState = consumeRoute.shift()\n        addRow(machine.currentState(), `(${expectedState})`, message)\n        unexpected = false\n      }\n      clearTimeoutAndReject(finaliseReport(new Error(message)))\n    }\n\n    if (machine.inState(fromState)) {\n      pending = false\n      removeFromStateActionFn = fromStateActionFn()\n    }\n\n    const { revoke, fn } = Revokable(state => {\n      assertionTimeoutTimer = setTimeout(() => {\n        revoke()\n        bailout('TIMEOUT')\n      }, timeoutInMs)\n\n      enteredState(state)\n      if (pending && state === fromState) {\n        pending = false\n        removeFromStateActionFn = fromStateActionFn()\n      }\n      if (deviations > permittedDeviations) {\n        revoke()\n        bailout('TOO MANY DEVIATIONS')\n      }\n      if (consumeRoute.length <= 0) {\n        revoke()\n        clearTimeoutAndResolve(finaliseReport())\n      }\n    })\n\n    const removeOnSwitchingListener = machine.onSwitching(fn)\n  })\n}\n\nfunction Table (columns = [], alignments = []) {\n  const table = []\n  const alignment = columns.map((_, index) => alignments[index] || 'center')\n\n  let locked = false\n  function lock () {\n    locked = true\n  }\n\n  function addRow (...args) {\n    if (locked) {\n      return\n    }\n    const obj = columns.reduce((acc, col, index) => {\n      const row = args[index] || ''\n      return {\n        ...acc,\n        [col]: row\n      }\n    }, {})\n    table.push(obj)\n  }\n\n  function colSizes () {\n    return table.reduce((acc, row) => columns.map((col, index) => Math.max(row[col].length, acc[index])), columns.map(() => 0))\n  }\n\n  function padLeft (str, len) {\n    return str + ' '.repeat(len - str.length)\n  }\n\n  function padRight (str, len) {\n    return ' '.repeat(len - str.length) + str\n  }\n\n  function content () {\n    const sizes = colSizes()\n    function formatField (value, index) {\n      const size = sizes[index]\n      const align = alignment[index]\n      if (align === 'left') {\n        return padLeft(value, size)\n      }\n      if (align === 'right') {\n        return padRight(value, size)\n      }\n      return value\n    }\n    const output = table.reduce((acc, row) => {\n      const formattedRow = columns.reduce((acc, col, index) => ({\n        ...acc,\n        [col]: formatField(row[col], index)\n      }), {})\n      return [...acc, formattedRow]\n    }, [])\n    return output\n  }\n\n  return {\n    lock: lock,\n    addRow: addRow,\n    content: content\n  }\n}\n\nfunction TimeTaken () {\n  const startTime = Date.now()\n\n  function fmt (num, digits) {\n    return num.toFixed(digits).replace(/\\.0+$/, '')\n  }\n\n  return function () {\n    const duration = Date.now() - startTime\n\n    if (duration < 500) {\n      return `${fmt(duration)} ms`\n    } else if (duration < 5000) {\n      return `${fmt(duration / 1000, 2)} s `\n    } else if (duration < 60000) {\n      return `${fmt(duration / 1000, 1)} s `\n    } else {\n      return `${fmt(duration / 1000 / 60, 1)} m `\n    }\n  }\n}\n"],"names":["argTypeError"],"mappings":"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;AACA;AACA;AACA,IAAI,eAAe,EAAE,eAAe;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,YAAY,EAAE,YAAY;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,EAAE,IAAI;AAEd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,EAAE,IAAI;AAEd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,KAAK,EAAE,KAAK;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,KAAK,EAAE,KAAK;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,EAAE,MAAM,CAAC,GAAG,YAAY,CAAC;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,EAAE,MAAM,IAAI,EAAE;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,EAAE,MAAM,OAAO,EAAE;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,EAAE,OAAO;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,EAAE,OAAO;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,EAAE,MAAM,IAAI;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,EAAE,gBAAgB,CAAC,SAAS;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,UAAU,EAAE,gBAAgB,CAAC,UAAU;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,EAAE,OAAO;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,QAAQ,EAAE,gBAAgB,CAAC,QAAQ;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,EAAE,gBAAgB,CAAC,SAAS;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,UAAU,EAAE,aAAa,CAAC,UAAU;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,EAAE,aAAa,CAAC,WAAW;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,aAAa,EAAE,WAAW,IAAI,YAAY,CAAC,WAAW,EAAE,eAAe,CAAC;AAE5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,KAAK;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,kBAAkB,E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"}